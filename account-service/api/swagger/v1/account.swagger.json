{
  "swagger": "2.0",
  "info": {
    "title": "account.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "AccountService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/account/admin/direct_groups": {
      "get": {
        "summary": "ListUserGroups list all the groups which belongs to user.",
        "operationId": "AccountService_ListUserGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListGroupsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AccountService"
        ]
      }
    },
    "/api/v1/account/admin/groups": {
      "get": {
        "summary": "ListGroups list all the groups owned by user.",
        "operationId": "AccountService_ListGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListGroupsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AccountService"
        ]
      },
      "post": {
        "summary": "Group Creates a group.",
        "operationId": "AccountService_CreateGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Group"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Group"
            }
          }
        ],
        "tags": [
          "AccountService"
        ]
      }
    },
    "/api/v1/account/admin/groups/{group_id}": {
      "delete": {
        "operationId": "AccountService_DeleteGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "AccountService"
        ]
      },
      "put": {
        "operationId": "AccountService_UpdateGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Group"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateGroupRequest"
            }
          }
        ],
        "tags": [
          "AccountService"
        ]
      }
    },
    "/api/v1/account/admin/groups/{group_id}/groups": {
      "get": {
        "operationId": "AccountService_ListChildGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListGroupsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "AccountService"
        ]
      }
    },
    "/api/v1/account/admin/groups/{group_id}/users": {
      "get": {
        "summary": "GetGroupUsers list all the users present in the group",
        "operationId": "AccountService_GetGroupUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "AccountService"
        ]
      }
    },
    "/api/v1/account/admin/groups/{group_id}/users/add": {
      "put": {
        "summary": "AddGroupUser adds user to the group",
        "operationId": "AccountService_AddGroupUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AddGroupUsersRequest"
            }
          }
        ],
        "tags": [
          "AccountService"
        ]
      }
    },
    "/api/v1/account/admin/groups/{group_id}/users/delete": {
      "put": {
        "summary": "DeleteGroupUser deletes users from the group",
        "operationId": "AccountService_DeleteGroupUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DeleteGroupUsersRequest"
            }
          }
        ],
        "tags": [
          "AccountService"
        ]
      }
    },
    "/api/v1/account/adminuserscope": {
      "get": {
        "summary": "GetAdminUserScope returns admin details for a particular scope",
        "operationId": "AccountService_GetAdminUserScope",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAdminUserScopeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "scopes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "AccountService"
        ]
      }
    },
    "/api/v1/account/changepassword": {
      "put": {
        "operationId": "AccountService_ChangePassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ChangePasswordResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ChangePasswordRequest"
            }
          }
        ],
        "tags": [
          "AccountService"
        ]
      }
    },
    "/api/v1/account/complience/groups": {
      "get": {
        "summary": "GetScope returns scope details for a particular scope",
        "operationId": "AccountService_ListComplienceGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListComplienceGroupsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AccountService"
        ]
      }
    },
    "/api/v1/account/resend_activation_token": {
      "post": {
        "operationId": "AccountService_ResendAccountActivationToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ResendAccountActivationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ResendAccountActivationRequest"
            }
          }
        ],
        "tags": [
          "AccountService"
        ]
      }
    },
    "/api/v1/account/scope/{scope}": {
      "delete": {
        "summary": "DropScopeData delete all resource/data of a scope in service",
        "operationId": "AccountService_DropScopeData",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DropScopeDataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AccountService"
        ]
      }
    },
    "/api/v1/account/scopes": {
      "get": {
        "summary": "ListScopes returns list of available scopes in system",
        "operationId": "AccountService_ListScopes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListScopesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AccountService"
        ]
      },
      "post": {
        "summary": "CreateScope creates a new scope and add it into root group",
        "operationId": "AccountService_CreateScope",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateScopeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateScopeRequest"
            }
          }
        ],
        "tags": [
          "AccountService"
        ]
      }
    },
    "/api/v1/account/scopes/expenses": {
      "post": {
        "summary": "UpsertScopeExpenses upsert scope expenses for present year",
        "operationId": "AccountService_UpsertScopeExpenses",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateScopeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpsertScopeExpensesRequest"
            }
          }
        ],
        "tags": [
          "AccountService"
        ]
      }
    },
    "/api/v1/account/scopes/expenses/{scope}": {
      "get": {
        "summary": "GetScopeExpenses returns scope details for a particular scope",
        "operationId": "AccountService_GetScopeExpenses",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ScopeExpenses"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AccountService"
        ]
      }
    },
    "/api/v1/account/scopes/list": {
      "get": {
        "summary": "GetScope returns scope details for a particular scope",
        "operationId": "AccountService_GetScopeLists",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ScopeListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "scopes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "AccountService"
        ]
      }
    },
    "/api/v1/account/scopes/{scope}": {
      "get": {
        "summary": "GetScope returns scope details for a particular scope",
        "operationId": "AccountService_GetScope",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Scope"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AccountService"
        ]
      }
    },
    "/api/v1/account/user": {
      "post": {
        "operationId": "AccountService_CreateAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Account"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Account"
            }
          }
        ],
        "tags": [
          "AccountService"
        ]
      }
    },
    "/api/v1/account/users": {
      "get": {
        "summary": "GetUsers list all the users present",
        "operationId": "AccountService_GetUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user_filter.all_users",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "AccountService"
        ]
      }
    },
    "/api/v1/account/{account.user_id}": {
      "put": {
        "operationId": "AccountService_UpdateAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "account.user_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateAccount"
            }
          }
        ],
        "tags": [
          "AccountService"
        ]
      },
      "patch": {
        "operationId": "AccountService_UpdateAccount2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "account.user_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateAccount"
            }
          }
        ],
        "tags": [
          "AccountService"
        ]
      }
    },
    "/api/v1/account/{user_id}": {
      "get": {
        "operationId": "AccountService_GetAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user_id",
            "description": "TODO : remove this we can now get userid from token\nThis is being ignored now.Will be removed in future",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AccountService"
        ]
      },
      "delete": {
        "operationId": "AccountService_DeleteAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AccountService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1Account": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "locale": {
          "type": "string"
        },
        "role": {
          "$ref": "#/definitions/v1ROLE"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        }
      }
    },
    "v1AddGroupUsersRequest": {
      "type": "object",
      "properties": {
        "group_id": {
          "type": "string",
          "format": "int64"
        },
        "user_id": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1AdminDetail": {
      "type": "object",
      "properties": {
        "user_name": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        }
      }
    },
    "v1ChangePasswordRequest": {
      "type": "object",
      "properties": {
        "old": {
          "type": "string"
        },
        "new": {
          "type": "string"
        }
      }
    },
    "v1ChangePasswordResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        }
      }
    },
    "v1ComplienceGroup": {
      "type": "object",
      "properties": {
        "group_id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "scope_code": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "scope_name": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1CreateScopeRequest": {
      "type": "object",
      "properties": {
        "scope_code": {
          "type": "string"
        },
        "scope_name": {
          "type": "string"
        },
        "scope_type": {
          "$ref": "#/definitions/v1ScopeType"
        }
      }
    },
    "v1CreateScopeResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        }
      }
    },
    "v1DeleteAccountResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        }
      }
    },
    "v1DeleteGroupResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        }
      }
    },
    "v1DeleteGroupUsersRequest": {
      "type": "object",
      "properties": {
        "group_id": {
          "type": "string",
          "format": "int64"
        },
        "user_id": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1DropScopeDataResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        }
      }
    },
    "v1GetAccountResponse": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "role": {
          "$ref": "#/definitions/v1ROLE"
        },
        "locale": {
          "type": "string"
        },
        "profile_pic": {
          "type": "string"
        },
        "first_login": {
          "type": "boolean"
        }
      }
    },
    "v1GetAdminUserScopeResponse": {
      "type": "object",
      "properties": {
        "adminDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1AdminDetail"
          }
        }
      }
    },
    "v1Group": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string",
          "title": "Required for creation"
        },
        "fully_qualified_name": {
          "type": "string",
          "description": "fully_qualified_name is unique identifier of group apart from ID."
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Required for creation \nscopes must be subset of the scopes of parent."
        },
        "parent_id": {
          "type": "string",
          "format": "int64",
          "description": "Required for creation\nParent group is one of the groups owned by user who is creating the group."
        },
        "num_of_child_groups": {
          "type": "integer",
          "format": "int32",
          "title": "Not required for creation\nnum_of_child_groups represents number of direct child groups"
        },
        "num_of_users": {
          "type": "integer",
          "format": "int32",
          "title": "Not required for creation\nnum_of_users represents number of users who belongs to group"
        },
        "group_compliance": {
          "type": "boolean",
          "title": "Group compliance group flag created"
        }
      },
      "description": "Group is a collection of scopes and functionalities."
    },
    "v1ListComplienceGroupsResponse": {
      "type": "object",
      "properties": {
        "complience_groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ComplienceGroup"
          }
        }
      }
    },
    "v1ListGroupsResponse": {
      "type": "object",
      "properties": {
        "numOfRecords": {
          "type": "integer",
          "format": "int32",
          "description": "numOfRecords is used for pagination when we are listing all groups."
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Group"
          }
        }
      }
    },
    "v1ListScopesResponse": {
      "type": "object",
      "properties": {
        "scopes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Scope"
          }
        }
      }
    },
    "v1ListUsersResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1User"
          }
        }
      }
    },
    "v1ROLE": {
      "type": "string",
      "enum": [
        "UNDEFINED",
        "ADMIN",
        "USER",
        "SUPER_ADMIN"
      ],
      "default": "UNDEFINED"
    },
    "v1ResendAccountActivationRequest": {
      "type": "object",
      "properties": {
        "user": {
          "type": "string"
        }
      }
    },
    "v1ResendAccountActivationResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        }
      }
    },
    "v1Scope": {
      "type": "object",
      "properties": {
        "scope_code": {
          "type": "string"
        },
        "scope_name": {
          "type": "string"
        },
        "created_by": {
          "type": "string"
        },
        "created_on": {
          "type": "string",
          "format": "date-time"
        },
        "group_names": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "scope_type": {
          "type": "string"
        },
        "expenditure": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "v1ScopeExpenses": {
      "type": "object",
      "properties": {
        "scope_code": {
          "type": "string"
        },
        "expenses": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "v1ScopeListResponse": {
      "type": "object",
      "properties": {
        "scope_names": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1ScopeType": {
      "type": "string",
      "enum": [
        "GENERIC",
        "SPECIFIC"
      ],
      "default": "GENERIC"
    },
    "v1UpdateAccount": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "locale": {
          "type": "string"
        },
        "role": {
          "$ref": "#/definitions/v1ROLE"
        },
        "profile_pic": {
          "type": "string"
        }
      }
    },
    "v1UpdateAccountResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        }
      }
    },
    "v1UpdateGroup": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "group_compliance": {
          "type": "boolean"
        }
      }
    },
    "v1UpdateGroupRequest": {
      "type": "object",
      "properties": {
        "group_id": {
          "type": "string",
          "format": "int64"
        },
        "group": {
          "$ref": "#/definitions/v1UpdateGroup"
        }
      }
    },
    "v1UpsertScopeExpensesRequest": {
      "type": "object",
      "properties": {
        "scope_code": {
          "type": "string"
        },
        "expenses": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "v1User": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "locale": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "role": {
          "$ref": "#/definitions/v1ROLE"
        },
        "account_status": {
          "type": "string"
        }
      }
    },
    "v1UserQueryParams": {
      "type": "object",
      "properties": {
        "all_users": {
          "type": "boolean"
        }
      }
    }
  }
}
