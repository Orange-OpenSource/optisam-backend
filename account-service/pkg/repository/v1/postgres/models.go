// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0

package postgres

import (
	"database/sql"
	"database/sql/driver"
	"fmt"
	"time"
)

type AuditStatus string

const (
	AuditStatusDELETED AuditStatus = "DELETED"
	AuditStatusUPDATED AuditStatus = "UPDATED"
)

func (e *AuditStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = AuditStatus(s)
	case string:
		*e = AuditStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for AuditStatus: %T", src)
	}
	return nil
}

type NullAuditStatus struct {
	AuditStatus AuditStatus
	Valid       bool // Valid is true if AuditStatus is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullAuditStatus) Scan(value interface{}) error {
	if value == nil {
		ns.AuditStatus, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.AuditStatus.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullAuditStatus) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return ns.AuditStatus, nil
}

type ScopeTypes string

const (
	ScopeTypesGENERIC  ScopeTypes = "GENERIC"
	ScopeTypesSPECIFIC ScopeTypes = "SPECIFIC"
)

func (e *ScopeTypes) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = ScopeTypes(s)
	case string:
		*e = ScopeTypes(s)
	default:
		return fmt.Errorf("unsupported scan type for ScopeTypes: %T", src)
	}
	return nil
}

type NullScopeTypes struct {
	ScopeTypes ScopeTypes
	Valid      bool // Valid is true if ScopeTypes is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullScopeTypes) Scan(value interface{}) error {
	if value == nil {
		ns.ScopeTypes, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.ScopeTypes.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullScopeTypes) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return ns.ScopeTypes, nil
}

type Group struct {
	ID                 int32          `json:"id"`
	Name               string         `json:"name"`
	FullyQualifiedName sql.NullString `json:"fully_qualified_name"`
	Scopes             []string       `json:"scopes"`
	ParentID           sql.NullInt32  `json:"parent_id"`
	IsGroupCompliance  sql.NullBool   `json:"is_group_compliance"`
	CreatedBy          sql.NullString `json:"created_by"`
	CreatedOn          sql.NullTime   `json:"created_on"`
}

type GroupOwnership struct {
	GroupID   int32        `json:"group_id"`
	UserID    string       `json:"user_id"`
	CreatedOn sql.NullTime `json:"created_on"`
}

type Role struct {
	UserRole string `json:"user_role"`
}

type Scope struct {
	ScopeCode string         `json:"scope_code"`
	ScopeName string         `json:"scope_name"`
	ScopeType ScopeTypes     `json:"scope_type"`
	CreatedOn sql.NullTime   `json:"created_on"`
	CreatedBy sql.NullString `json:"created_by"`
}

type ScopesExpenditure struct {
	ID           int32          `json:"id"`
	ScopeCode    string         `json:"scope_code"`
	Expenses     float64        `json:"expenses"`
	ExpensesYear int32          `json:"expenses_year"`
	CreatedOn    sql.NullTime   `json:"created_on"`
	CreatedBy    sql.NullString `json:"created_by"`
	UpdatedOn    sql.NullTime   `json:"updated_on"`
	UpdatedBy    sql.NullString `json:"updated_by"`
}

type User struct {
	Username        string         `json:"username"`
	FirstName       string         `json:"first_name"`
	LastName        sql.NullString `json:"last_name"`
	Role            sql.NullString `json:"role"`
	Password        string         `json:"password"`
	Locale          string         `json:"locale"`
	ContFailedLogin int16          `json:"cont_failed_login"`
	CreatedOn       sql.NullTime   `json:"created_on"`
	LastLogin       sql.NullTime   `json:"last_login"`
	FirstLogin      sql.NullBool   `json:"first_login"`
	ProfilePic      []byte         `json:"profile_pic"`
}

type UsersAudit struct {
	ID              int32           `json:"id"`
	Username        string          `json:"username"`
	FirstName       string          `json:"first_name"`
	LastName        string          `json:"last_name"`
	Role            string          `json:"role"`
	Locale          string          `json:"locale"`
	ContFailedLogin int16           `json:"cont_failed_login"`
	CreatedOn       time.Time       `json:"created_on"`
	LastLogin       sql.NullTime    `json:"last_login"`
	Operation       NullAuditStatus `json:"operation"`
	UpdatedBy       string          `json:"updated_by"`
	UpdatedOn       sql.NullTime    `json:"updated_on"`
}
