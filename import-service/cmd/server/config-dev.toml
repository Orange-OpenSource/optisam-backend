environment = "DEVELOPMENT"
debug = false
httpport = "8080"
maxfilesize = 13
#file size in Mbs
#file size in Mbs
NoOfPartitions = 3

[log]
customtimeformat = "2006-01-02T15:04:05.999999999Z07:00"
loglevel = 0

[instrumentation]
addr = ":8081"

[instrumentation.prometheus]
enabled = true


[instrumentation.jaeger]
enabled = true
serviceName = "import-service"
collectorEndpoint = "http://jaeger-collector.dev-optisam.svc:14268/api/traces"
agentEndpoint = "jaeger-agent.dev-optisam.svc:6831"
# username = ""
# password = ""


[database]
host = "svc-optisam-postgres.dev-optisam.svc"
port = 5432
# should be user of full rights
[database.admin]
user = "optisam"
pass = ""
name = "import" 

# user of inser/update/delete/read access
[database.user]
user = "optisam_app_user"
pass = ""
name = "import"

[database.Migration]
version = "1_intial_schema.sql"
direction = ""
migrationPath  = "./schema"
deleteMigrations = true

[grpcservers]
apiKey = "12345678"
timeout = 10

[grpcservers.Address]
dps = "svc-optisam-dps-dev.dev-optisam.svc:8090"
simulation = "svc-optisam-simulation-dev.dev-optisam.svc:8090"
account = "svc-optisam-account-dev.dev-optisam.svc:8090"
catalog = "svc-optisam-catalog-dev.dev-optisam.svc:8090"
product = "svc-optisam-product-dev.dev-optisam.svc:8090"


[upload]
uploadDir = "/optisam_dir/optisam_data"
RawdataUploadDir = "/optisam_dir/optisam_rawdata"
DatafileAllowedRegex = ['''^products\.csv$''','''^products_equipments\.csv$''','''^applications_products\.csv$''',
               '''^products_acquiredRights\.csv$''',
               '''^applications\.csv$''','''^applications_instances\.csv$''','''^instances_equipments\.csv$''','''^instances_products\.csv$'''
                ,'''^equipment_[a-zA-Z]*\.csv$''']
MetaDatafileAllowedRegex = ['''^metadata_[a-zA-Z]*\.csv$''']


[iam]
publickeypath = "/opt/secret/ssh-privatekey"
apiKey = "12345678"
regopath = "rbac.rego"

[kafka]
bootstrapservers = "dev-kafka-externel-bootstrap.dev-optisam.svc:9094"
sslkeylocation = "/opt/secret-key/ssh-privatekey"
sslcertificatelocation = "/opt/secret-client/ssh-privatekey"
sslcalocation = "/opt/secret-ca/ssh-privatekey"
securityprotocol = "ssl"

