kind: "Template"
apiVersion: "v1"
metadata:
  name: "deploy-template"
  annotations:
    description: "Template for deployment"
objects:
  - kind: Service
    apiVersion: v1
    metadata:
      name: svc-optisam-dps
      annotations:
        description: Exposes and load balances the dps pods
      labels:
        run: optisam-dps
    spec:
      ports:
        - name: api
          port: 80
          targetPort: 8080
          protocol: TCP
        - name: instapi
          port: 81
          targetPort: 8081
          protocol: TCP          
        - name: grpc
          port: 8090
          targetPort: 8090
          protocol: TCP
      selector:
        app: optisam-dps
  - kind: Route
    apiVersion: v1
    metadata:
      annotations:
        haproxy.router.openshift.io/timeout: 300s
      name: route-svc-optisam-dps
      labels:
        run: optisam-dps
    spec:
      host: optisam-dps-${ENV}.apps.fr01.paas.tech.orange
      to:
        kind: Service
        name: svc-optisam-dps
      port:
        targetPort: api
      tls:
        termination: edge
  - kind: Route
    apiVersion: v1
    metadata:
      name: route-svc-optisam-dps-instrumentation
      labels:
        run: optisam-dps
    spec:
      host: optisam-dps-inst-${ENV}.apps.fr01.paas.tech.orange
      to:
        kind: Service
        name: svc-optisam-dps
      port:
        targetPort: instapi        
      tls:
        termination: edge        
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: optisam-dps
      labels:
        app: optisam-dps
    spec:
      replicas: ${{REPLICAS}}
      selector:
        app: optisam-dps
      strategy:
        type: Rolling
      template:
        metadata:
          annotations:
            prometheus.io/port: '8081'
            prometheus.io/scrape: 'true'
          labels:
            app: optisam-dps
            internal-elasticsearch: 'true'  
          name: optisam-dps
        spec:
          containers:
            - name: optisam-dps
              image: ${DOCKER_REGISTRY}/optisam/dps-service:${TAG}
              imagePullPolicy: Always
              env:
                - name: "ENV"
                  value: ${ENV}
                - name: "DB_PASSWORD"  
                  value: ${DB_PASSWORD}
              ports:
                - containerPort: 8080
                  protocol: TCP
                - containerPort: 8090
                  protocol: TCP
                - containerPort: 8081
                  protocol: TCP
              livenessProbe:
                failureThreshold: 3
                httpGet:
                  path: /healthz
                  port: 8081
                  scheme: HTTP
                initialDelaySeconds: 15
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 2
              readinessProbe:
                failureThreshold: 3
                httpGet:
                  path: /healthz
                  port: 8081
                  scheme: HTTP
                initialDelaySeconds: 15
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 2
              resources:
                requests:
                  cpu: "400m"
                  memory: "400Mi"
                limits:
                  cpu: "500m"
                  memory: "600Mi"
              volumeMounts:
                - name: config-volume
                  mountPath: /opt/config/
                - name: optisam-dir
                  mountPath: /optisam_dir
                - name: secret-volume
                  mountPath: /opt/secret
                  readOnly: true
          volumes:
            - name: config-volume
              configMap:
                name: config-dps-${ENV}
            - name: optisam-dir
              persistentVolumeClaim:
                claimName: optisam-storage
            - name: secret-volume
              secret:
                secretName: secret-apipublickey-${ENV}
parameters:
  - name: DB_PASSWORD
    description: Postgres Database Password
    required: true
  - name: TAG
    description: Tag for Docker image
    value: "latest"
    required: true
  - name: ENV
    description: Env for deployment
    required: true
  - name: REPLICAS
    description: Pod replica count
    value: "1"
    required: true
  - name: DOCKER_REGISTRY
    description: Artifactory URL to download images
    value: "dockerfactory-unstable-iva.si.francetelecom.fr"
    required: true
