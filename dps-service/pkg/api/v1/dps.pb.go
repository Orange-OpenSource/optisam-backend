// Copyright (C) 2019 Orange
// 
// This software is distributed under the terms and conditions of the 'Apache License 2.0'
// license which can be found in the file 'License.txt' in this package distribution 
// or at 'http://www.apache.org/licenses/LICENSE-2.0'. 

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dps.proto

package v1

import (
	context "context"
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ListUploadRequest_SortBy int32

const (
	ListUploadRequest_upload_id   ListUploadRequest_SortBy = 0
	ListUploadRequest_scope       ListUploadRequest_SortBy = 1
	ListUploadRequest_file_name   ListUploadRequest_SortBy = 2
	ListUploadRequest_status      ListUploadRequest_SortBy = 3
	ListUploadRequest_uploaded_by ListUploadRequest_SortBy = 4
	ListUploadRequest_uploaded_on ListUploadRequest_SortBy = 5
)

var ListUploadRequest_SortBy_name = map[int32]string{
	0: "upload_id",
	1: "scope",
	2: "file_name",
	3: "status",
	4: "uploaded_by",
	5: "uploaded_on",
}

var ListUploadRequest_SortBy_value = map[string]int32{
	"upload_id":   0,
	"scope":       1,
	"file_name":   2,
	"status":      3,
	"uploaded_by": 4,
	"uploaded_on": 5,
}

func (x ListUploadRequest_SortBy) String() string {
	return proto.EnumName(ListUploadRequest_SortBy_name, int32(x))
}

func (ListUploadRequest_SortBy) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a611899297971007, []int{2, 0}
}

type ListUploadRequest_SortOrder int32

const (
	ListUploadRequest_asc  ListUploadRequest_SortOrder = 0
	ListUploadRequest_desc ListUploadRequest_SortOrder = 1
)

var ListUploadRequest_SortOrder_name = map[int32]string{
	0: "asc",
	1: "desc",
}

var ListUploadRequest_SortOrder_value = map[string]int32{
	"asc":  0,
	"desc": 1,
}

func (x ListUploadRequest_SortOrder) String() string {
	return proto.EnumName(ListUploadRequest_SortOrder_name, int32(x))
}

func (ListUploadRequest_SortOrder) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a611899297971007, []int{2, 1}
}

type NotifyUploadRequest struct {
	Scope                string   `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Type                 string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	UploadId             int32    `protobuf:"varint,3,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`
	UploadedBy           string   `protobuf:"bytes,4,opt,name=uploaded_by,json=uploadedBy,proto3" json:"uploaded_by,omitempty"`
	Files                []string `protobuf:"bytes,5,rep,name=files,proto3" json:"files,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NotifyUploadRequest) Reset()         { *m = NotifyUploadRequest{} }
func (m *NotifyUploadRequest) String() string { return proto.CompactTextString(m) }
func (*NotifyUploadRequest) ProtoMessage()    {}
func (*NotifyUploadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611899297971007, []int{0}
}

func (m *NotifyUploadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NotifyUploadRequest.Unmarshal(m, b)
}
func (m *NotifyUploadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NotifyUploadRequest.Marshal(b, m, deterministic)
}
func (m *NotifyUploadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotifyUploadRequest.Merge(m, src)
}
func (m *NotifyUploadRequest) XXX_Size() int {
	return xxx_messageInfo_NotifyUploadRequest.Size(m)
}
func (m *NotifyUploadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NotifyUploadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NotifyUploadRequest proto.InternalMessageInfo

func (m *NotifyUploadRequest) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

func (m *NotifyUploadRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *NotifyUploadRequest) GetUploadId() int32 {
	if m != nil {
		return m.UploadId
	}
	return 0
}

func (m *NotifyUploadRequest) GetUploadedBy() string {
	if m != nil {
		return m.UploadedBy
	}
	return ""
}

func (m *NotifyUploadRequest) GetFiles() []string {
	if m != nil {
		return m.Files
	}
	return nil
}

type NotifyUploadResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NotifyUploadResponse) Reset()         { *m = NotifyUploadResponse{} }
func (m *NotifyUploadResponse) String() string { return proto.CompactTextString(m) }
func (*NotifyUploadResponse) ProtoMessage()    {}
func (*NotifyUploadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611899297971007, []int{1}
}

func (m *NotifyUploadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NotifyUploadResponse.Unmarshal(m, b)
}
func (m *NotifyUploadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NotifyUploadResponse.Marshal(b, m, deterministic)
}
func (m *NotifyUploadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotifyUploadResponse.Merge(m, src)
}
func (m *NotifyUploadResponse) XXX_Size() int {
	return xxx_messageInfo_NotifyUploadResponse.Size(m)
}
func (m *NotifyUploadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NotifyUploadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NotifyUploadResponse proto.InternalMessageInfo

func (m *NotifyUploadResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type ListUploadRequest struct {
	PageNum              int32                       `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
	PageSize             int32                       `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	SortBy               ListUploadRequest_SortBy    `protobuf:"varint,3,opt,name=sort_by,json=sortBy,proto3,enum=v1.ListUploadRequest_SortBy" json:"sort_by,omitempty"`
	SortOrder            ListUploadRequest_SortOrder `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=v1.ListUploadRequest_SortOrder" json:"sort_order,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *ListUploadRequest) Reset()         { *m = ListUploadRequest{} }
func (m *ListUploadRequest) String() string { return proto.CompactTextString(m) }
func (*ListUploadRequest) ProtoMessage()    {}
func (*ListUploadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611899297971007, []int{2}
}

func (m *ListUploadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListUploadRequest.Unmarshal(m, b)
}
func (m *ListUploadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListUploadRequest.Marshal(b, m, deterministic)
}
func (m *ListUploadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListUploadRequest.Merge(m, src)
}
func (m *ListUploadRequest) XXX_Size() int {
	return xxx_messageInfo_ListUploadRequest.Size(m)
}
func (m *ListUploadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListUploadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListUploadRequest proto.InternalMessageInfo

func (m *ListUploadRequest) GetPageNum() int32 {
	if m != nil {
		return m.PageNum
	}
	return 0
}

func (m *ListUploadRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListUploadRequest) GetSortBy() ListUploadRequest_SortBy {
	if m != nil {
		return m.SortBy
	}
	return ListUploadRequest_upload_id
}

func (m *ListUploadRequest) GetSortOrder() ListUploadRequest_SortOrder {
	if m != nil {
		return m.SortOrder
	}
	return ListUploadRequest_asc
}

type ListUploadResponse struct {
	TotalRecords         int32     `protobuf:"varint,1,opt,name=totalRecords,proto3" json:"totalRecords,omitempty"`
	Uploads              []*Upload `protobuf:"bytes,2,rep,name=uploads,proto3" json:"uploads,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ListUploadResponse) Reset()         { *m = ListUploadResponse{} }
func (m *ListUploadResponse) String() string { return proto.CompactTextString(m) }
func (*ListUploadResponse) ProtoMessage()    {}
func (*ListUploadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611899297971007, []int{3}
}

func (m *ListUploadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListUploadResponse.Unmarshal(m, b)
}
func (m *ListUploadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListUploadResponse.Marshal(b, m, deterministic)
}
func (m *ListUploadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListUploadResponse.Merge(m, src)
}
func (m *ListUploadResponse) XXX_Size() int {
	return xxx_messageInfo_ListUploadResponse.Size(m)
}
func (m *ListUploadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListUploadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListUploadResponse proto.InternalMessageInfo

func (m *ListUploadResponse) GetTotalRecords() int32 {
	if m != nil {
		return m.TotalRecords
	}
	return 0
}

func (m *ListUploadResponse) GetUploads() []*Upload {
	if m != nil {
		return m.Uploads
	}
	return nil
}

type Upload struct {
	UploadId             int32                `protobuf:"varint,1,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`
	Scope                string               `protobuf:"bytes,2,opt,name=scope,proto3" json:"scope,omitempty"`
	FileName             string               `protobuf:"bytes,3,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	Status               string               `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	UploadedBy           string               `protobuf:"bytes,5,opt,name=uploaded_by,json=uploadedBy,proto3" json:"uploaded_by,omitempty"`
	UploadedOn           *timestamp.Timestamp `protobuf:"bytes,6,opt,name=uploaded_on,json=uploadedOn,proto3" json:"uploaded_on,omitempty"`
	TotalRecords         int32                `protobuf:"varint,7,opt,name=total_records,json=totalRecords,proto3" json:"total_records,omitempty"`
	SuccessRecords       int32                `protobuf:"varint,8,opt,name=success_records,json=successRecords,proto3" json:"success_records,omitempty"`
	FailedRecords        int32                `protobuf:"varint,9,opt,name=failed_records,json=failedRecords,proto3" json:"failed_records,omitempty"`
	InvalidRecords       int32                `protobuf:"varint,10,opt,name=invalid_records,json=invalidRecords,proto3" json:"invalid_records,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Upload) Reset()         { *m = Upload{} }
func (m *Upload) String() string { return proto.CompactTextString(m) }
func (*Upload) ProtoMessage()    {}
func (*Upload) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611899297971007, []int{4}
}

func (m *Upload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Upload.Unmarshal(m, b)
}
func (m *Upload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Upload.Marshal(b, m, deterministic)
}
func (m *Upload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Upload.Merge(m, src)
}
func (m *Upload) XXX_Size() int {
	return xxx_messageInfo_Upload.Size(m)
}
func (m *Upload) XXX_DiscardUnknown() {
	xxx_messageInfo_Upload.DiscardUnknown(m)
}

var xxx_messageInfo_Upload proto.InternalMessageInfo

func (m *Upload) GetUploadId() int32 {
	if m != nil {
		return m.UploadId
	}
	return 0
}

func (m *Upload) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

func (m *Upload) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *Upload) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Upload) GetUploadedBy() string {
	if m != nil {
		return m.UploadedBy
	}
	return ""
}

func (m *Upload) GetUploadedOn() *timestamp.Timestamp {
	if m != nil {
		return m.UploadedOn
	}
	return nil
}

func (m *Upload) GetTotalRecords() int32 {
	if m != nil {
		return m.TotalRecords
	}
	return 0
}

func (m *Upload) GetSuccessRecords() int32 {
	if m != nil {
		return m.SuccessRecords
	}
	return 0
}

func (m *Upload) GetFailedRecords() int32 {
	if m != nil {
		return m.FailedRecords
	}
	return 0
}

func (m *Upload) GetInvalidRecords() int32 {
	if m != nil {
		return m.InvalidRecords
	}
	return 0
}

func init() {
	proto.RegisterEnum("v1.ListUploadRequest_SortBy", ListUploadRequest_SortBy_name, ListUploadRequest_SortBy_value)
	proto.RegisterEnum("v1.ListUploadRequest_SortOrder", ListUploadRequest_SortOrder_name, ListUploadRequest_SortOrder_value)
	proto.RegisterType((*NotifyUploadRequest)(nil), "v1.NotifyUploadRequest")
	proto.RegisterType((*NotifyUploadResponse)(nil), "v1.NotifyUploadResponse")
	proto.RegisterType((*ListUploadRequest)(nil), "v1.ListUploadRequest")
	proto.RegisterType((*ListUploadResponse)(nil), "v1.ListUploadResponse")
	proto.RegisterType((*Upload)(nil), "v1.Upload")
}

func init() { proto.RegisterFile("dps.proto", fileDescriptor_a611899297971007) }

var fileDescriptor_a611899297971007 = []byte{
	// 811 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0x41, 0x8f, 0xdb, 0x44,
	0x14, 0x8e, 0x9d, 0x38, 0xb6, 0xdf, 0x76, 0x53, 0x33, 0x6c, 0x53, 0xcb, 0xbb, 0x6a, 0x8c, 0x29,
	0x22, 0xa0, 0x36, 0x21, 0xe1, 0x06, 0x87, 0x2e, 0x56, 0x25, 0x58, 0x09, 0xb6, 0xc8, 0x0b, 0x87,
	0x22, 0x41, 0x34, 0xb1, 0x27, 0x91, 0xa5, 0xd8, 0x63, 0x3c, 0xe3, 0xa0, 0xf4, 0xd8, 0x3f, 0x80,
	0x54, 0x7e, 0x0a, 0x1c, 0xf8, 0x1f, 0xfc, 0x05, 0x0e, 0x1c, 0x38, 0x70, 0xce, 0x09, 0x79, 0x3c,
	0xce, 0x3a, 0xc9, 0x72, 0x21, 0x97, 0xcc, 0x7c, 0xf3, 0xcd, 0xf7, 0x9e, 0xbf, 0xf7, 0xde, 0x80,
	0x19, 0x65, 0x6c, 0x94, 0xe5, 0x94, 0x53, 0xa4, 0xae, 0x27, 0xce, 0xc5, 0x92, 0xd2, 0xe5, 0x8a,
	0x8c, 0x71, 0x16, 0x8f, 0x71, 0x9a, 0x52, 0x8e, 0x79, 0x4c, 0x53, 0xc9, 0x70, 0x1e, 0xae, 0xf1,
	0x2a, 0x8e, 0x30, 0x27, 0xe3, 0x7a, 0x21, 0x0f, 0x06, 0xf2, 0x9a, 0xd8, 0xcd, 0x8b, 0xc5, 0x98,
	0xc7, 0x09, 0x61, 0x1c, 0x27, 0x99, 0x24, 0x3c, 0x11, 0x7f, 0xe1, 0xd3, 0x25, 0x49, 0x9f, 0xb2,
	0x9f, 0xf0, 0x72, 0x49, 0xf2, 0x31, 0xcd, 0x84, 0xf6, 0x71, 0x1c, 0xef, 0x37, 0x05, 0xde, 0xbe,
	0xa6, 0x3c, 0x5e, 0x6c, 0xbe, 0xcd, 0x56, 0x14, 0x47, 0x01, 0xf9, 0xb1, 0x20, 0x8c, 0xa3, 0x33,
	0xd0, 0x58, 0x48, 0x33, 0x62, 0x2b, 0xae, 0x32, 0x34, 0x83, 0x6a, 0x83, 0x3e, 0x80, 0x0e, 0xdf,
	0x64, 0xc4, 0x56, 0x4b, 0xd0, 0x7f, 0xb0, 0xf5, 0x51, 0x6e, 0x05, 0x9d, 0x08, 0x73, 0x1c, 0x18,
	0x09, 0xe1, 0x58, 0xac, 0x04, 0x05, 0x9d, 0x83, 0x59, 0x08, 0xc5, 0x59, 0x1c, 0xd9, 0x6d, 0x57,
	0x19, 0x6a, 0x81, 0x51, 0x01, 0x57, 0x11, 0x1a, 0xc0, 0x49, 0xb5, 0x26, 0xd1, 0x6c, 0xbe, 0xb1,
	0x3b, 0x22, 0x06, 0xd4, 0x90, 0xbf, 0x41, 0x8f, 0x40, 0x5b, 0xc4, 0x2b, 0xc2, 0x6c, 0xcd, 0x6d,
	0x0f, 0x4d, 0xdf, 0xd8, 0xfa, 0xda, 0x1b, 0x45, 0x35, 0x94, 0xa0, 0x82, 0xbd, 0x8f, 0xe0, 0x6c,
	0x3f, 0x6b, 0x96, 0xd1, 0x94, 0x11, 0x64, 0x83, 0xce, 0x8a, 0x30, 0x24, 0x8c, 0x89, 0xc4, 0x8d,
	0xa0, 0xde, 0x7a, 0xbf, 0xb6, 0xe1, 0xad, 0x2f, 0x63, 0xc6, 0xf7, 0x3f, 0xf3, 0x73, 0x30, 0x32,
	0xbc, 0x24, 0xb3, 0xb4, 0x48, 0xc4, 0x05, 0xcd, 0x7f, 0xf2, 0xe6, 0xb3, 0xc1, 0xf4, 0xe4, 0x6b,
	0xbc, 0x24, 0x6e, 0x5a, 0x24, 0x73, 0x92, 0xbf, 0x6c, 0x95, 0xbf, 0xcb, 0x9f, 0x2f, 0x63, 0xb1,
	0x68, 0xfd, 0xf3, 0x6c, 0xeb, 0xeb, 0x8e, 0x66, 0xfd, 0xa5, 0x0f, 0x95, 0x40, 0x2f, 0x6f, 0x5f,
	0x17, 0x09, 0xba, 0x02, 0x53, 0x08, 0xb1, 0xf8, 0x55, 0x65, 0x8f, 0x50, 0xf2, 0xa6, 0xbd, 0x2b,
	0x4e, 0x12, 0xe6, 0x66, 0x24, 0x77, 0xcb, 0xf3, 0x4a, 0xac, 0xf5, 0xb2, 0x16, 0x7b, 0x7c, 0xb9,
	0xf5, 0x3b, 0x8e, 0x3a, 0x84, 0x40, 0xe4, 0x71, 0x13, 0xbf, 0x22, 0xe8, 0x19, 0xe8, 0x8c, 0xe6,
	0xbc, 0x34, 0xa6, 0xf4, 0xad, 0x37, 0xbd, 0x18, 0xad, 0x27, 0xa3, 0xa3, 0xdc, 0x47, 0x37, 0x34,
	0xe7, 0xfe, 0x46, 0x78, 0xf3, 0x5a, 0x51, 0x2d, 0x25, 0xe8, 0x32, 0x81, 0xa0, 0x2f, 0x00, 0x84,
	0x00, 0xcd, 0x23, 0x92, 0x0b, 0x73, 0x7b, 0xd3, 0xc1, 0x7f, 0x6b, 0xbc, 0x28, 0x69, 0x0d, 0x19,
	0x93, 0xd5, 0xa0, 0x37, 0x83, 0x6e, 0x15, 0x05, 0x9d, 0x36, 0xca, 0x69, 0xb5, 0x90, 0x29, 0xdb,
	0xc3, 0x52, 0xca, 0x93, 0xb2, 0x26, 0xb3, 0x14, 0x27, 0xc4, 0x52, 0x11, 0x40, 0x97, 0x71, 0xcc,
	0x0b, 0x66, 0xb5, 0xd1, 0xfd, 0xbd, 0x32, 0x5b, 0x9d, 0x3d, 0x80, 0xa6, 0x96, 0xe6, 0x3d, 0x02,
	0x73, 0x97, 0x02, 0xd2, 0xa1, 0x8d, 0x59, 0x68, 0xb5, 0x90, 0x01, 0x9d, 0x88, 0xb0, 0xd0, 0x52,
	0xbc, 0x1f, 0x00, 0x35, 0x93, 0x96, 0x55, 0xf6, 0xe0, 0x1e, 0xa7, 0x1c, 0xaf, 0x02, 0x12, 0xd2,
	0x3c, 0xaa, 0x4a, 0xad, 0x05, 0x7b, 0x18, 0x7a, 0x0c, 0x7a, 0x15, 0x8a, 0xd9, 0xaa, 0xdb, 0x1e,
	0x9e, 0x4c, 0xa1, 0x74, 0x40, 0x0a, 0xd5, 0x47, 0xde, 0xdf, 0x2a, 0x74, 0x2b, 0x6c, 0xbf, 0x61,
	0x95, 0x83, 0x86, 0xdd, 0x8d, 0x83, 0xda, 0x1c, 0x87, 0xf3, 0xc6, 0xa7, 0x8b, 0x5a, 0x99, 0x81,
	0x51, 0x02, 0xd7, 0x38, 0x21, 0xa8, 0x5f, 0x1b, 0x21, 0xdb, 0x5b, 0xee, 0x0e, 0x7b, 0x5f, 0x3b,
	0xea, 0xfd, 0x4f, 0xf7, 0x4c, 0xb2, 0xbb, 0xae, 0x32, 0x3c, 0x99, 0x3a, 0xa3, 0x6a, 0xee, 0x47,
	0xf5, 0xdc, 0x8f, 0xbe, 0xa9, 0xe7, 0xfe, 0xf6, 0xf2, 0x8b, 0x14, 0xbd, 0x0b, 0xa7, 0xc2, 0x86,
	0x59, 0x2e, 0xbd, 0xd1, 0xef, 0xf0, 0xe6, 0x7d, 0xb8, 0x2f, 0xc7, 0x62, 0x47, 0x33, 0x04, 0xad,
	0x27, 0xe1, 0x9a, 0xf8, 0x1e, 0xf4, 0x16, 0x38, 0x5e, 0x91, 0x68, 0xc7, 0x33, 0x05, 0xef, 0xb4,
	0x42, 0x1b, 0x7a, 0x71, 0x2a, 0xde, 0xa9, 0x1d, 0x0f, 0x2a, 0x3d, 0x09, 0x4b, 0xe2, 0xf4, 0x77,
	0x15, 0xe0, 0x79, 0xc6, 0x6e, 0x48, 0xbe, 0x8e, 0x43, 0x82, 0x22, 0xb8, 0xd7, 0x9c, 0x62, 0xf4,
	0xb0, 0x2c, 0xd1, 0x1d, 0xaf, 0x91, 0x63, 0x1f, 0x1f, 0x54, 0xad, 0xe0, 0xbd, 0xf3, 0xfa, 0x8f,
	0x3f, 0x7f, 0x51, 0xcf, 0xbd, 0xbe, 0x78, 0x47, 0xd7, 0x93, 0xb1, 0xac, 0xec, 0x38, 0x15, 0xec,
	0x4f, 0x94, 0x0f, 0xd1, 0xf7, 0xd0, 0xbb, 0xed, 0xa1, 0xe7, 0x98, 0x63, 0xf4, 0xe0, 0xce, 0x61,
	0x70, 0xfa, 0x87, 0xb0, 0x8c, 0x71, 0x21, 0x62, 0xf4, 0xd1, 0xd9, 0x61, 0x8c, 0xf2, 0xb9, 0x43,
	0xa4, 0xd9, 0xa2, 0x5f, 0x11, 0x8e, 0xff, 0x4f, 0x08, 0x57, 0x84, 0x70, 0x90, 0x7d, 0x18, 0xa2,
	0x7e, 0x55, 0xfd, 0xce, 0x77, 0xea, 0x7a, 0x32, 0xef, 0x8a, 0xf2, 0x7f, 0xfc, 0x6f, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x2d, 0xd7, 0x43, 0xd3, 0x4c, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DpsServiceClient is the client API for DpsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DpsServiceClient interface {
	NotifyUpload(ctx context.Context, in *NotifyUploadRequest, opts ...grpc.CallOption) (*NotifyUploadResponse, error)
	ListUploadData(ctx context.Context, in *ListUploadRequest, opts ...grpc.CallOption) (*ListUploadResponse, error)
	ListUploadMetaData(ctx context.Context, in *ListUploadRequest, opts ...grpc.CallOption) (*ListUploadResponse, error)
}

type dpsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDpsServiceClient(cc grpc.ClientConnInterface) DpsServiceClient {
	return &dpsServiceClient{cc}
}

func (c *dpsServiceClient) NotifyUpload(ctx context.Context, in *NotifyUploadRequest, opts ...grpc.CallOption) (*NotifyUploadResponse, error) {
	out := new(NotifyUploadResponse)
	err := c.cc.Invoke(ctx, "/v1.DpsService/NotifyUpload", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dpsServiceClient) ListUploadData(ctx context.Context, in *ListUploadRequest, opts ...grpc.CallOption) (*ListUploadResponse, error) {
	out := new(ListUploadResponse)
	err := c.cc.Invoke(ctx, "/v1.DpsService/ListUploadData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dpsServiceClient) ListUploadMetaData(ctx context.Context, in *ListUploadRequest, opts ...grpc.CallOption) (*ListUploadResponse, error) {
	out := new(ListUploadResponse)
	err := c.cc.Invoke(ctx, "/v1.DpsService/ListUploadMetaData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DpsServiceServer is the server API for DpsService service.
type DpsServiceServer interface {
	NotifyUpload(context.Context, *NotifyUploadRequest) (*NotifyUploadResponse, error)
	ListUploadData(context.Context, *ListUploadRequest) (*ListUploadResponse, error)
	ListUploadMetaData(context.Context, *ListUploadRequest) (*ListUploadResponse, error)
}

// UnimplementedDpsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDpsServiceServer struct {
}

func (*UnimplementedDpsServiceServer) NotifyUpload(ctx context.Context, req *NotifyUploadRequest) (*NotifyUploadResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NotifyUpload not implemented")
}
func (*UnimplementedDpsServiceServer) ListUploadData(ctx context.Context, req *ListUploadRequest) (*ListUploadResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListUploadData not implemented")
}
func (*UnimplementedDpsServiceServer) ListUploadMetaData(ctx context.Context, req *ListUploadRequest) (*ListUploadResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListUploadMetaData not implemented")
}

func RegisterDpsServiceServer(s *grpc.Server, srv DpsServiceServer) {
	s.RegisterService(&_DpsService_serviceDesc, srv)
}

func _DpsService_NotifyUpload_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NotifyUploadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DpsServiceServer).NotifyUpload(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.DpsService/NotifyUpload",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DpsServiceServer).NotifyUpload(ctx, req.(*NotifyUploadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DpsService_ListUploadData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListUploadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DpsServiceServer).ListUploadData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.DpsService/ListUploadData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DpsServiceServer).ListUploadData(ctx, req.(*ListUploadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DpsService_ListUploadMetaData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListUploadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DpsServiceServer).ListUploadMetaData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.DpsService/ListUploadMetaData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DpsServiceServer).ListUploadMetaData(ctx, req.(*ListUploadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DpsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.DpsService",
	HandlerType: (*DpsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NotifyUpload",
			Handler:    _DpsService_NotifyUpload_Handler,
		},
		{
			MethodName: "ListUploadData",
			Handler:    _DpsService_ListUploadData_Handler,
		},
		{
			MethodName: "ListUploadMetaData",
			Handler:    _DpsService_ListUploadMetaData_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dps.proto",
}
