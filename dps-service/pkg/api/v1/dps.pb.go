// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: dps.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ListDeletionRequest_SortBy int32

const (
	ListDeletionRequest_deletion_type ListDeletionRequest_SortBy = 0
	ListDeletionRequest_status        ListDeletionRequest_SortBy = 1
	ListDeletionRequest_created_by    ListDeletionRequest_SortBy = 2
	ListDeletionRequest_created_on    ListDeletionRequest_SortBy = 3
)

// Enum value maps for ListDeletionRequest_SortBy.
var (
	ListDeletionRequest_SortBy_name = map[int32]string{
		0: "deletion_type",
		1: "status",
		2: "created_by",
		3: "created_on",
	}
	ListDeletionRequest_SortBy_value = map[string]int32{
		"deletion_type": 0,
		"status":        1,
		"created_by":    2,
		"created_on":    3,
	}
)

func (x ListDeletionRequest_SortBy) Enum() *ListDeletionRequest_SortBy {
	p := new(ListDeletionRequest_SortBy)
	*p = x
	return p
}

func (x ListDeletionRequest_SortBy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListDeletionRequest_SortBy) Descriptor() protoreflect.EnumDescriptor {
	return file_dps_proto_enumTypes[0].Descriptor()
}

func (ListDeletionRequest_SortBy) Type() protoreflect.EnumType {
	return &file_dps_proto_enumTypes[0]
}

func (x ListDeletionRequest_SortBy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListDeletionRequest_SortBy.Descriptor instead.
func (ListDeletionRequest_SortBy) EnumDescriptor() ([]byte, []int) {
	return file_dps_proto_rawDescGZIP(), []int{14, 0}
}

type ListDeletionRequest_SortOrder int32

const (
	ListDeletionRequest_asc  ListDeletionRequest_SortOrder = 0
	ListDeletionRequest_desc ListDeletionRequest_SortOrder = 1
)

// Enum value maps for ListDeletionRequest_SortOrder.
var (
	ListDeletionRequest_SortOrder_name = map[int32]string{
		0: "asc",
		1: "desc",
	}
	ListDeletionRequest_SortOrder_value = map[string]int32{
		"asc":  0,
		"desc": 1,
	}
)

func (x ListDeletionRequest_SortOrder) Enum() *ListDeletionRequest_SortOrder {
	p := new(ListDeletionRequest_SortOrder)
	*p = x
	return p
}

func (x ListDeletionRequest_SortOrder) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListDeletionRequest_SortOrder) Descriptor() protoreflect.EnumDescriptor {
	return file_dps_proto_enumTypes[1].Descriptor()
}

func (ListDeletionRequest_SortOrder) Type() protoreflect.EnumType {
	return &file_dps_proto_enumTypes[1]
}

func (x ListDeletionRequest_SortOrder) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListDeletionRequest_SortOrder.Descriptor instead.
func (ListDeletionRequest_SortOrder) EnumDescriptor() ([]byte, []int) {
	return file_dps_proto_rawDescGZIP(), []int{14, 1}
}

type DashboardQualityOverviewRequest_Frequency int32

const (
	DashboardQualityOverviewRequest_DAILY   DashboardQualityOverviewRequest_Frequency = 0
	DashboardQualityOverviewRequest_MONTHLY DashboardQualityOverviewRequest_Frequency = 1
)

// Enum value maps for DashboardQualityOverviewRequest_Frequency.
var (
	DashboardQualityOverviewRequest_Frequency_name = map[int32]string{
		0: "DAILY",
		1: "MONTHLY",
	}
	DashboardQualityOverviewRequest_Frequency_value = map[string]int32{
		"DAILY":   0,
		"MONTHLY": 1,
	}
)

func (x DashboardQualityOverviewRequest_Frequency) Enum() *DashboardQualityOverviewRequest_Frequency {
	p := new(DashboardQualityOverviewRequest_Frequency)
	*p = x
	return p
}

func (x DashboardQualityOverviewRequest_Frequency) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DashboardQualityOverviewRequest_Frequency) Descriptor() protoreflect.EnumDescriptor {
	return file_dps_proto_enumTypes[2].Descriptor()
}

func (DashboardQualityOverviewRequest_Frequency) Type() protoreflect.EnumType {
	return &file_dps_proto_enumTypes[2]
}

func (x DashboardQualityOverviewRequest_Frequency) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DashboardQualityOverviewRequest_Frequency.Descriptor instead.
func (DashboardQualityOverviewRequest_Frequency) EnumDescriptor() ([]byte, []int) {
	return file_dps_proto_rawDescGZIP(), []int{19, 0}
}

type NotifyUploadRequestScopeTypes int32

const (
	NotifyUploadRequest_GENERIC  NotifyUploadRequestScopeTypes = 0
	NotifyUploadRequest_SPECIFIC NotifyUploadRequestScopeTypes = 1
)

// Enum value maps for NotifyUploadRequestScopeTypes.
var (
	NotifyUploadRequestScopeTypes_name = map[int32]string{
		0: "GENERIC",
		1: "SPECIFIC",
	}
	NotifyUploadRequestScopeTypes_value = map[string]int32{
		"GENERIC":  0,
		"SPECIFIC": 1,
	}
)

func (x NotifyUploadRequestScopeTypes) Enum() *NotifyUploadRequestScopeTypes {
	p := new(NotifyUploadRequestScopeTypes)
	*p = x
	return p
}

func (x NotifyUploadRequestScopeTypes) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotifyUploadRequestScopeTypes) Descriptor() protoreflect.EnumDescriptor {
	return file_dps_proto_enumTypes[3].Descriptor()
}

func (NotifyUploadRequestScopeTypes) Type() protoreflect.EnumType {
	return &file_dps_proto_enumTypes[3]
}

func (x NotifyUploadRequestScopeTypes) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotifyUploadRequestScopeTypes.Descriptor instead.
func (NotifyUploadRequestScopeTypes) EnumDescriptor() ([]byte, []int) {
	return file_dps_proto_rawDescGZIP(), []int{21, 0}
}

type ListUploadRequest_SortBy int32

const (
	ListUploadRequest_upload_id   ListUploadRequest_SortBy = 0
	ListUploadRequest_file_name   ListUploadRequest_SortBy = 1
	ListUploadRequest_status      ListUploadRequest_SortBy = 2
	ListUploadRequest_uploaded_by ListUploadRequest_SortBy = 3
	ListUploadRequest_uploaded_on ListUploadRequest_SortBy = 4
)

// Enum value maps for ListUploadRequest_SortBy.
var (
	ListUploadRequest_SortBy_name = map[int32]string{
		0: "upload_id",
		1: "file_name",
		2: "status",
		3: "uploaded_by",
		4: "uploaded_on",
	}
	ListUploadRequest_SortBy_value = map[string]int32{
		"upload_id":   0,
		"file_name":   1,
		"status":      2,
		"uploaded_by": 3,
		"uploaded_on": 4,
	}
)

func (x ListUploadRequest_SortBy) Enum() *ListUploadRequest_SortBy {
	p := new(ListUploadRequest_SortBy)
	*p = x
	return p
}

func (x ListUploadRequest_SortBy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListUploadRequest_SortBy) Descriptor() protoreflect.EnumDescriptor {
	return file_dps_proto_enumTypes[4].Descriptor()
}

func (ListUploadRequest_SortBy) Type() protoreflect.EnumType {
	return &file_dps_proto_enumTypes[4]
}

func (x ListUploadRequest_SortBy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListUploadRequest_SortBy.Descriptor instead.
func (ListUploadRequest_SortBy) EnumDescriptor() ([]byte, []int) {
	return file_dps_proto_rawDescGZIP(), []int{26, 0}
}

type ListUploadRequest_SortOrder int32

const (
	ListUploadRequest_asc  ListUploadRequest_SortOrder = 0
	ListUploadRequest_desc ListUploadRequest_SortOrder = 1
)

// Enum value maps for ListUploadRequest_SortOrder.
var (
	ListUploadRequest_SortOrder_name = map[int32]string{
		0: "asc",
		1: "desc",
	}
	ListUploadRequest_SortOrder_value = map[string]int32{
		"asc":  0,
		"desc": 1,
	}
)

func (x ListUploadRequest_SortOrder) Enum() *ListUploadRequest_SortOrder {
	p := new(ListUploadRequest_SortOrder)
	*p = x
	return p
}

func (x ListUploadRequest_SortOrder) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListUploadRequest_SortOrder) Descriptor() protoreflect.EnumDescriptor {
	return file_dps_proto_enumTypes[5].Descriptor()
}

func (ListUploadRequest_SortOrder) Type() protoreflect.EnumType {
	return &file_dps_proto_enumTypes[5]
}

func (x ListUploadRequest_SortOrder) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListUploadRequest_SortOrder.Descriptor instead.
func (ListUploadRequest_SortOrder) EnumDescriptor() ([]byte, []int) {
	return file_dps_proto_rawDescGZIP(), []int{26, 1}
}

type DeleteInventoryRequestDeletionTypes int32

const (
	DeleteInventoryRequest_ACQRIGHTS DeleteInventoryRequestDeletionTypes = 0
	DeleteInventoryRequest_FULL      DeleteInventoryRequestDeletionTypes = 1
	DeleteInventoryRequest_PARK      DeleteInventoryRequestDeletionTypes = 2
)

// Enum value maps for DeleteInventoryRequestDeletionTypes.
var (
	DeleteInventoryRequestDeletionTypes_name = map[int32]string{
		0: "ACQRIGHTS",
		1: "FULL",
		2: "PARK",
	}
	DeleteInventoryRequestDeletionTypes_value = map[string]int32{
		"ACQRIGHTS": 0,
		"FULL":      1,
		"PARK":      2,
	}
)

func (x DeleteInventoryRequestDeletionTypes) Enum() *DeleteInventoryRequestDeletionTypes {
	p := new(DeleteInventoryRequestDeletionTypes)
	*p = x
	return p
}

func (x DeleteInventoryRequestDeletionTypes) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeleteInventoryRequestDeletionTypes) Descriptor() protoreflect.EnumDescriptor {
	return file_dps_proto_enumTypes[6].Descriptor()
}

func (DeleteInventoryRequestDeletionTypes) Type() protoreflect.EnumType {
	return &file_dps_proto_enumTypes[6]
}

func (x DeleteInventoryRequestDeletionTypes) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeleteInventoryRequestDeletionTypes.Descriptor instead.
func (DeleteInventoryRequestDeletionTypes) EnumDescriptor() ([]byte, []int) {
	return file_dps_proto_rawDescGZIP(), []int{29, 0}
}

type GetAnalysisFileInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UploadId int32  `protobuf:"varint,1,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`
	Scope    string `protobuf:"bytes,2,opt,name=scope,proto3" json:"scope,omitempty"`
	FileType string `protobuf:"bytes,3,opt,name=fileType,proto3" json:"fileType,omitempty"`
}

func (x *GetAnalysisFileInfoRequest) Reset() {
	*x = GetAnalysisFileInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dps_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAnalysisFileInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAnalysisFileInfoRequest) ProtoMessage() {}

func (x *GetAnalysisFileInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dps_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAnalysisFileInfoRequest.ProtoReflect.Descriptor instead.
func (*GetAnalysisFileInfoRequest) Descriptor() ([]byte, []int) {
	return file_dps_proto_rawDescGZIP(), []int{0}
}

func (x *GetAnalysisFileInfoRequest) GetUploadId() int32 {
	if x != nil {
		return x.UploadId
	}
	return 0
}

func (x *GetAnalysisFileInfoRequest) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *GetAnalysisFileInfoRequest) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

type GetAnalysisFileInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName       string `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	ScopeType      string `protobuf:"bytes,2,opt,name=scope_type,json=scopeType,proto3" json:"scope_type,omitempty"`
	IsOlderGeneric bool   `protobuf:"varint,3,opt,name=is_older_generic,json=isOlderGeneric,proto3" json:"is_older_generic,omitempty"`
}

func (x *GetAnalysisFileInfoResponse) Reset() {
	*x = GetAnalysisFileInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dps_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAnalysisFileInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAnalysisFileInfoResponse) ProtoMessage() {}

func (x *GetAnalysisFileInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dps_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAnalysisFileInfoResponse.ProtoReflect.Descriptor instead.
func (*GetAnalysisFileInfoResponse) Descriptor() ([]byte, []int) {
	return file_dps_proto_rawDescGZIP(), []int{1}
}

func (x *GetAnalysisFileInfoResponse) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *GetAnalysisFileInfoResponse) GetScopeType() string {
	if x != nil {
		return x.ScopeType
	}
	return ""
}

func (x *GetAnalysisFileInfoResponse) GetIsOlderGeneric() bool {
	if x != nil {
		return x.IsOlderGeneric
	}
	return false
}

type ViewCoreFactorLogsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ViewCoreFactorLogsRequest) Reset() {
	*x = ViewCoreFactorLogsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dps_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewCoreFactorLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewCoreFactorLogsRequest) ProtoMessage() {}

func (x *ViewCoreFactorLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dps_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewCoreFactorLogsRequest.ProtoReflect.Descriptor instead.
func (*ViewCoreFactorLogsRequest) Descriptor() ([]byte, []int) {
	return file_dps_proto_rawDescGZIP(), []int{2}
}

type CoreFactorlogs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename   string               `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	UploadedOn *timestamp.Timestamp `protobuf:"bytes,2,opt,name=uploaded_on,json=uploadedOn,proto3" json:"uploaded_on,omitempty"`
}

func (x *CoreFactorlogs) Reset() {
	*x = CoreFactorlogs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dps_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoreFactorlogs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreFactorlogs) ProtoMessage() {}

func (x *CoreFactorlogs) ProtoReflect() protoreflect.Message {
	mi := &file_dps_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreFactorlogs.ProtoReflect.Descriptor instead.
func (*CoreFactorlogs) Descriptor() ([]byte, []int) {
	return file_dps_proto_rawDescGZIP(), []int{3}
}

func (x *CoreFactorlogs) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *CoreFactorlogs) GetUploadedOn() *timestamp.Timestamp {
	if x != nil {
		return x.UploadedOn
	}
	return nil
}

type ViewCoreFactorLogsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Corefactorlogs []*CoreFactorlogs `protobuf:"bytes,1,rep,name=corefactorlogs,proto3" json:"corefactorlogs,omitempty"`
}

func (x *ViewCoreFactorLogsResponse) Reset() {
	*x = ViewCoreFactorLogsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dps_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewCoreFactorLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewCoreFactorLogsResponse) ProtoMessage() {}

func (x *ViewCoreFactorLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dps_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewCoreFactorLogsResponse.ProtoReflect.Descriptor instead.
func (*ViewCoreFactorLogsResponse) Descriptor() ([]byte, []int) {
	return file_dps_proto_rawDescGZIP(), []int{4}
}

func (x *ViewCoreFactorLogsResponse) GetCorefactorlogs() []*CoreFactorlogs {
	if x != nil {
		return x.Corefactorlogs
	}
	return nil
}

type CoreFactorReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Manufacturer string `protobuf:"bytes,1,opt,name=manufacturer,proto3" json:"manufacturer,omitempty"`
	Model        string `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`
	Corefactor   string `protobuf:"bytes,3,opt,name=corefactor,proto3" json:"corefactor,omitempty"`
}

func (x *CoreFactorReference) Reset() {
	*x = CoreFactorReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dps_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoreFactorReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreFactorReference) ProtoMessage() {}

func (x *CoreFactorReference) ProtoReflect() protoreflect.Message {
	mi := &file_dps_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreFactorReference.ProtoReflect.Descriptor instead.
func (*CoreFactorReference) Descriptor() ([]byte, []int) {
	return file_dps_proto_rawDescGZIP(), []int{5}
}

func (x *CoreFactorReference) GetManufacturer() string {
	if x != nil {
		return x.Manufacturer
	}
	return ""
}

func (x *CoreFactorReference) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *CoreFactorReference) GetCorefactor() string {
	if x != nil {
		return x.Corefactor
	}
	return ""
}

type ViewReferenceDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNo   int32 `protobuf:"varint,1,opt,name=pageNo,proto3" json:"pageNo,omitempty"`
	PageSize int32 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *ViewReferenceDataRequest) Reset() {
	*x = ViewReferenceDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dps_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewReferenceDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewReferenceDataRequest) ProtoMessage() {}

func (x *ViewReferenceDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dps_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewReferenceDataRequest.ProtoReflect.Descriptor instead.
func (*ViewReferenceDataRequest) Descriptor() ([]byte, []int) {
	return file_dps_proto_rawDescGZIP(), []int{6}
}

func (x *ViewReferenceDataRequest) GetPageNo() int32 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *ViewReferenceDataRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ViewReferenceDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	References  []*CoreFactorReference `protobuf:"bytes,1,rep,name=references,proto3" json:"references,omitempty"`
	TotalRecord int32                  `protobuf:"varint,2,opt,name=totalRecord,proto3" json:"totalRecord,omitempty"`
}

func (x *ViewReferenceDataResponse) Reset() {
	*x = ViewReferenceDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dps_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewReferenceDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewReferenceDataResponse) ProtoMessage() {}

func (x *ViewReferenceDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dps_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewReferenceDataResponse.ProtoReflect.Descriptor instead.
func (*ViewReferenceDataResponse) Descriptor() ([]byte, []int) {
	return file_dps_proto_rawDescGZIP(), []int{7}
}

func (x *ViewReferenceDataResponse) GetReferences() []*CoreFactorReference {
	if x != nil {
		return x.References
	}
	return nil
}

func (x *ViewReferenceDataResponse) GetTotalRecord() int32 {
	if x != nil {
		return x.TotalRecord
	}
	return 0
}

type GetAllocMetricDetailsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope string `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
}

func (x *GetAllocMetricDetailsRequest) Reset() {
	*x = GetAllocMetricDetailsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dps_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllocMetricDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllocMetricDetailsRequest) ProtoMessage() {}

func (x *GetAllocMetricDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dps_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllocMetricDetailsRequest.ProtoReflect.Descriptor instead.
func (*GetAllocMetricDetailsRequest) Descriptor() ([]byte, []int) {
	return file_dps_proto_rawDescGZIP(), []int{8}
}

func (x *GetAllocMetricDetailsRequest) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

type GetAllocMetricDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name []string `protobuf:"bytes,1,rep,name=name,proto3" json:"name,omitempty"`
	Type []string `protobuf:"bytes,2,rep,name=type,proto3" json:"type,omitempty"`
}

func (x *GetAllocMetricDetailsResponse) Reset() {
	*x = GetAllocMetricDetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dps_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllocMetricDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllocMetricDetailsResponse) ProtoMessage() {}

func (x *GetAllocMetricDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dps_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllocMetricDetailsResponse.ProtoReflect.Descriptor instead.
func (*GetAllocMetricDetailsResponse) Descriptor() ([]byte, []int) {
	return file_dps_proto_rawDescGZIP(), []int{9}
}

func (x *GetAllocMetricDetailsResponse) GetName() []string {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *GetAllocMetricDetailsResponse) GetType() []string {
	if x != nil {
		return x.Type
	}
	return nil
}

type StoreReferenceDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReferenceData []byte `protobuf:"bytes,1,opt,name=referenceData,proto3" json:"referenceData,omitempty"`
	Filename      string `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
}

func (x *StoreReferenceDataRequest) Reset() {
	*x = StoreReferenceDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dps_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreReferenceDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreReferenceDataRequest) ProtoMessage() {}

func (x *StoreReferenceDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dps_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreReferenceDataRequest.ProtoReflect.Descriptor instead.
func (*StoreReferenceDataRequest) Descriptor() ([]byte, []int) {
	return file_dps_proto_rawDescGZIP(), []int{10}
}

func (x *StoreReferenceDataRequest) GetReferenceData() []byte {
	if x != nil {
		return x.ReferenceData
	}
	return nil
}

func (x *StoreReferenceDataRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

type StoreReferenceDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
}

func (x *StoreReferenceDataResponse) Reset() {
	*x = StoreReferenceDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dps_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreReferenceDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreReferenceDataResponse) ProtoMessage() {}

func (x *StoreReferenceDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dps_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreReferenceDataResponse.ProtoReflect.Descriptor instead.
func (*StoreReferenceDataResponse) Descriptor() ([]byte, []int) {
	return file_dps_proto_rawDescGZIP(), []int{11}
}

func (x *StoreReferenceDataResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type DataAnalysisRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File  string `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	Scope string `protobuf:"bytes,2,opt,name=scope,proto3" json:"scope,omitempty"`
}

func (x *DataAnalysisRequest) Reset() {
	*x = DataAnalysisRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dps_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataAnalysisRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataAnalysisRequest) ProtoMessage() {}

func (x *DataAnalysisRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dps_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataAnalysisRequest.ProtoReflect.Descriptor instead.
func (*DataAnalysisRequest) Descriptor() ([]byte, []int) {
	return file_dps_proto_rawDescGZIP(), []int{12}
}

func (x *DataAnalysisRequest) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

func (x *DataAnalysisRequest) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

type DataAnalysisResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Report      string `protobuf:"bytes,2,opt,name=report,proto3" json:"report,omitempty"`
	TargetFile  string `protobuf:"bytes,3,opt,name=targetFile,proto3" json:"targetFile,omitempty"`
	ErrorFile   string `protobuf:"bytes,4,opt,name=errorFile,proto3" json:"errorFile,omitempty"`
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *DataAnalysisResponse) Reset() {
	*x = DataAnalysisResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dps_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataAnalysisResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataAnalysisResponse) ProtoMessage() {}

func (x *DataAnalysisResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dps_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataAnalysisResponse.ProtoReflect.Descriptor instead.
func (*DataAnalysisResponse) Descriptor() ([]byte, []int) {
	return file_dps_proto_rawDescGZIP(), []int{13}
}

func (x *DataAnalysisResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *DataAnalysisResponse) GetReport() string {
	if x != nil {
		return x.Report
	}
	return ""
}

func (x *DataAnalysisResponse) GetTargetFile() string {
	if x != nil {
		return x.TargetFile
	}
	return ""
}

func (x *DataAnalysisResponse) GetErrorFile() string {
	if x != nil {
		return x.ErrorFile
	}
	return ""
}

func (x *DataAnalysisResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ListDeletionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum   int32                         `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
	PageSize  int32                         `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	SortBy    ListDeletionRequest_SortBy    `protobuf:"varint,3,opt,name=sort_by,json=sortBy,proto3,enum=optisam.dps.v1.ListDeletionRequest_SortBy" json:"sort_by,omitempty"`
	SortOrder ListDeletionRequest_SortOrder `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=optisam.dps.v1.ListDeletionRequest_SortOrder" json:"sort_order,omitempty"`
	Scope     string                        `protobuf:"bytes,5,opt,name=scope,proto3" json:"scope,omitempty"`
}

func (x *ListDeletionRequest) Reset() {
	*x = ListDeletionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dps_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDeletionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDeletionRequest) ProtoMessage() {}

func (x *ListDeletionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dps_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDeletionRequest.ProtoReflect.Descriptor instead.
func (*ListDeletionRequest) Descriptor() ([]byte, []int) {
	return file_dps_proto_rawDescGZIP(), []int{14}
}

func (x *ListDeletionRequest) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *ListDeletionRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListDeletionRequest) GetSortBy() ListDeletionRequest_SortBy {
	if x != nil {
		return x.SortBy
	}
	return ListDeletionRequest_deletion_type
}

func (x *ListDeletionRequest) GetSortOrder() ListDeletionRequest_SortOrder {
	if x != nil {
		return x.SortOrder
	}
	return ListDeletionRequest_asc
}

func (x *ListDeletionRequest) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

type ListDeletionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalRecords int32       `protobuf:"varint,1,opt,name=totalRecords,proto3" json:"totalRecords,omitempty"`
	Deletions    []*Deletion `protobuf:"bytes,2,rep,name=deletions,proto3" json:"deletions,omitempty"`
}

func (x *ListDeletionResponse) Reset() {
	*x = ListDeletionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dps_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDeletionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDeletionResponse) ProtoMessage() {}

func (x *ListDeletionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dps_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDeletionResponse.ProtoReflect.Descriptor instead.
func (*ListDeletionResponse) Descriptor() ([]byte, []int) {
	return file_dps_proto_rawDescGZIP(), []int{15}
}

func (x *ListDeletionResponse) GetTotalRecords() int32 {
	if x != nil {
		return x.TotalRecords
	}
	return 0
}

func (x *ListDeletionResponse) GetDeletions() []*Deletion {
	if x != nil {
		return x.Deletions
	}
	return nil
}

type Deletion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeletionType string               `protobuf:"bytes,1,opt,name=deletion_type,json=deletionType,proto3" json:"deletion_type,omitempty"`
	CreatedBy    string               `protobuf:"bytes,2,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	Status       string               `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	CreatedOn    *timestamp.Timestamp `protobuf:"bytes,4,opt,name=created_on,json=createdOn,proto3" json:"created_on,omitempty"`
}

func (x *Deletion) Reset() {
	*x = Deletion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dps_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Deletion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deletion) ProtoMessage() {}

func (x *Deletion) ProtoReflect() protoreflect.Message {
	mi := &file_dps_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deletion.ProtoReflect.Descriptor instead.
func (*Deletion) Descriptor() ([]byte, []int) {
	return file_dps_proto_rawDescGZIP(), []int{16}
}

func (x *Deletion) GetDeletionType() string {
	if x != nil {
		return x.DeletionType
	}
	return ""
}

func (x *Deletion) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *Deletion) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Deletion) GetCreatedOn() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedOn
	}
	return nil
}

type DropUploadedFileDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope string `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
}

func (x *DropUploadedFileDataRequest) Reset() {
	*x = DropUploadedFileDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dps_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropUploadedFileDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropUploadedFileDataRequest) ProtoMessage() {}

func (x *DropUploadedFileDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dps_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropUploadedFileDataRequest.ProtoReflect.Descriptor instead.
func (*DropUploadedFileDataRequest) Descriptor() ([]byte, []int) {
	return file_dps_proto_rawDescGZIP(), []int{17}
}

func (x *DropUploadedFileDataRequest) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

type DropUploadedFileDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DropUploadedFileDataResponse) Reset() {
	*x = DropUploadedFileDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dps_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropUploadedFileDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropUploadedFileDataResponse) ProtoMessage() {}

func (x *DropUploadedFileDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dps_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropUploadedFileDataResponse.ProtoReflect.Descriptor instead.
func (*DropUploadedFileDataResponse) Descriptor() ([]byte, []int) {
	return file_dps_proto_rawDescGZIP(), []int{18}
}

func (x *DropUploadedFileDataResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type DashboardQualityOverviewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Frequency      DashboardQualityOverviewRequest_Frequency `protobuf:"varint,1,opt,name=frequency,proto3,enum=optisam.dps.v1.DashboardQualityOverviewRequest_Frequency" json:"frequency,omitempty"`
	NoOfDataPoints int32                                     `protobuf:"varint,2,opt,name=noOfDataPoints,proto3" json:"noOfDataPoints,omitempty"`
	Scope          string                                    `protobuf:"bytes,3,opt,name=scope,proto3" json:"scope,omitempty"`
}

func (x *DashboardQualityOverviewRequest) Reset() {
	*x = DashboardQualityOverviewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dps_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DashboardQualityOverviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DashboardQualityOverviewRequest) ProtoMessage() {}

func (x *DashboardQualityOverviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dps_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DashboardQualityOverviewRequest.ProtoReflect.Descriptor instead.
func (*DashboardQualityOverviewRequest) Descriptor() ([]byte, []int) {
	return file_dps_proto_rawDescGZIP(), []int{19}
}

func (x *DashboardQualityOverviewRequest) GetFrequency() DashboardQualityOverviewRequest_Frequency {
	if x != nil {
		return x.Frequency
	}
	return DashboardQualityOverviewRequest_DAILY
}

func (x *DashboardQualityOverviewRequest) GetNoOfDataPoints() int32 {
	if x != nil {
		return x.NoOfDataPoints
	}
	return 0
}

func (x *DashboardQualityOverviewRequest) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

type DashboardQualityOverviewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Applications []float32 `protobuf:"fixed32,1,rep,packed,name=applications,proto3" json:"applications,omitempty"`
	Products     []float32 `protobuf:"fixed32,2,rep,packed,name=products,proto3" json:"products,omitempty"`
	Equipments   []float32 `protobuf:"fixed32,3,rep,packed,name=equipments,proto3" json:"equipments,omitempty"`
	Acqrights    []float32 `protobuf:"fixed32,4,rep,packed,name=acqrights,proto3" json:"acqrights,omitempty"`
}

func (x *DashboardQualityOverviewResponse) Reset() {
	*x = DashboardQualityOverviewResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dps_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DashboardQualityOverviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DashboardQualityOverviewResponse) ProtoMessage() {}

func (x *DashboardQualityOverviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dps_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DashboardQualityOverviewResponse.ProtoReflect.Descriptor instead.
func (*DashboardQualityOverviewResponse) Descriptor() ([]byte, []int) {
	return file_dps_proto_rawDescGZIP(), []int{20}
}

func (x *DashboardQualityOverviewResponse) GetApplications() []float32 {
	if x != nil {
		return x.Applications
	}
	return nil
}

func (x *DashboardQualityOverviewResponse) GetProducts() []float32 {
	if x != nil {
		return x.Products
	}
	return nil
}

func (x *DashboardQualityOverviewResponse) GetEquipments() []float32 {
	if x != nil {
		return x.Equipments
	}
	return nil
}

func (x *DashboardQualityOverviewResponse) GetAcqrights() []float32 {
	if x != nil {
		return x.Acqrights
	}
	return nil
}

type NotifyUploadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope      string                        `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Type       string                        `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	UploadId   int32                         `protobuf:"varint,3,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`
	UploadedBy string                        `protobuf:"bytes,4,opt,name=uploaded_by,json=uploadedBy,proto3" json:"uploaded_by,omitempty"`
	Files      []string                      `protobuf:"bytes,5,rep,name=files,proto3" json:"files,omitempty"`
	ScopeType  NotifyUploadRequestScopeTypes `protobuf:"varint,6,opt,name=scope_type,json=scopeType,proto3,enum=optisam.dps.v1.NotifyUploadRequestScopeTypes" json:"scope_type,omitempty"`
	AnalysisId string                        `protobuf:"bytes,7,opt,name=analysis_id,json=analysisId,proto3" json:"analysis_id,omitempty"`
}

func (x *NotifyUploadRequest) Reset() {
	*x = NotifyUploadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dps_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyUploadRequest) ProtoMessage() {}

func (x *NotifyUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dps_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyUploadRequest.ProtoReflect.Descriptor instead.
func (*NotifyUploadRequest) Descriptor() ([]byte, []int) {
	return file_dps_proto_rawDescGZIP(), []int{21}
}

func (x *NotifyUploadRequest) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *NotifyUploadRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *NotifyUploadRequest) GetUploadId() int32 {
	if x != nil {
		return x.UploadId
	}
	return 0
}

func (x *NotifyUploadRequest) GetUploadedBy() string {
	if x != nil {
		return x.UploadedBy
	}
	return ""
}

func (x *NotifyUploadRequest) GetFiles() []string {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *NotifyUploadRequest) GetScopeType() NotifyUploadRequestScopeTypes {
	if x != nil {
		return x.ScopeType
	}
	return NotifyUploadRequest_GENERIC
}

func (x *NotifyUploadRequest) GetAnalysisId() string {
	if x != nil {
		return x.AnalysisId
	}
	return ""
}

type NotifyUploadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success      bool             `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	FileUploadId map[string]int32 `protobuf:"bytes,2,rep,name=fileUploadId,proto3" json:"fileUploadId,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *NotifyUploadResponse) Reset() {
	*x = NotifyUploadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dps_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyUploadResponse) ProtoMessage() {}

func (x *NotifyUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dps_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyUploadResponse.ProtoReflect.Descriptor instead.
func (*NotifyUploadResponse) Descriptor() ([]byte, []int) {
	return file_dps_proto_rawDescGZIP(), []int{22}
}

func (x *NotifyUploadResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *NotifyUploadResponse) GetFileUploadId() map[string]int32 {
	if x != nil {
		return x.FileUploadId
	}
	return nil
}

type ListFailedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope    string `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	UploadId int32  `protobuf:"varint,2,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`
	PageNum  int32  `protobuf:"varint,3,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
	PageSize int32  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *ListFailedRequest) Reset() {
	*x = ListFailedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dps_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFailedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFailedRequest) ProtoMessage() {}

func (x *ListFailedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dps_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFailedRequest.ProtoReflect.Descriptor instead.
func (*ListFailedRequest) Descriptor() ([]byte, []int) {
	return file_dps_proto_rawDescGZIP(), []int{23}
}

func (x *ListFailedRequest) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *ListFailedRequest) GetUploadId() int32 {
	if x != nil {
		return x.UploadId
	}
	return 0
}

func (x *ListFailedRequest) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *ListFailedRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListFailedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FailedRecords []*FailedRecord `protobuf:"bytes,1,rep,name=failedRecords,proto3" json:"failedRecords,omitempty"`
	TotalRecords  int32           `protobuf:"varint,2,opt,name=totalRecords,proto3" json:"totalRecords,omitempty"`
}

func (x *ListFailedResponse) Reset() {
	*x = ListFailedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dps_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFailedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFailedResponse) ProtoMessage() {}

func (x *ListFailedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dps_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFailedResponse.ProtoReflect.Descriptor instead.
func (*ListFailedResponse) Descriptor() ([]byte, []int) {
	return file_dps_proto_rawDescGZIP(), []int{24}
}

func (x *ListFailedResponse) GetFailedRecords() []*FailedRecord {
	if x != nil {
		return x.FailedRecords
	}
	return nil
}

func (x *ListFailedResponse) GetTotalRecords() int32 {
	if x != nil {
		return x.TotalRecords
	}
	return 0
}

type FailedRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   map[string]string `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Reason string            `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *FailedRecord) Reset() {
	*x = FailedRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dps_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FailedRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FailedRecord) ProtoMessage() {}

func (x *FailedRecord) ProtoReflect() protoreflect.Message {
	mi := &file_dps_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FailedRecord.ProtoReflect.Descriptor instead.
func (*FailedRecord) Descriptor() ([]byte, []int) {
	return file_dps_proto_rawDescGZIP(), []int{25}
}

func (x *FailedRecord) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *FailedRecord) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type ListUploadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum      int32                       `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
	PageSize     int32                       `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	SortBy       ListUploadRequest_SortBy    `protobuf:"varint,3,opt,name=sort_by,json=sortBy,proto3,enum=optisam.dps.v1.ListUploadRequest_SortBy" json:"sort_by,omitempty"`
	SortOrder    ListUploadRequest_SortOrder `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=optisam.dps.v1.ListUploadRequest_SortOrder" json:"sort_order,omitempty"`
	Scope        string                      `protobuf:"bytes,5,opt,name=scope,proto3" json:"scope,omitempty"`
	GlobalFileId int32                       `protobuf:"varint,6,opt,name=global_file_id,json=globalFileId,proto3" json:"global_file_id,omitempty"`
}

func (x *ListUploadRequest) Reset() {
	*x = ListUploadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dps_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUploadRequest) ProtoMessage() {}

func (x *ListUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dps_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUploadRequest.ProtoReflect.Descriptor instead.
func (*ListUploadRequest) Descriptor() ([]byte, []int) {
	return file_dps_proto_rawDescGZIP(), []int{26}
}

func (x *ListUploadRequest) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *ListUploadRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListUploadRequest) GetSortBy() ListUploadRequest_SortBy {
	if x != nil {
		return x.SortBy
	}
	return ListUploadRequest_upload_id
}

func (x *ListUploadRequest) GetSortOrder() ListUploadRequest_SortOrder {
	if x != nil {
		return x.SortOrder
	}
	return ListUploadRequest_asc
}

func (x *ListUploadRequest) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *ListUploadRequest) GetGlobalFileId() int32 {
	if x != nil {
		return x.GlobalFileId
	}
	return 0
}

type ListUploadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalRecords int32     `protobuf:"varint,1,opt,name=totalRecords,proto3" json:"totalRecords,omitempty"`
	Uploads      []*Upload `protobuf:"bytes,2,rep,name=uploads,proto3" json:"uploads,omitempty"`
}

func (x *ListUploadResponse) Reset() {
	*x = ListUploadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dps_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUploadResponse) ProtoMessage() {}

func (x *ListUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dps_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUploadResponse.ProtoReflect.Descriptor instead.
func (*ListUploadResponse) Descriptor() ([]byte, []int) {
	return file_dps_proto_rawDescGZIP(), []int{27}
}

func (x *ListUploadResponse) GetTotalRecords() int32 {
	if x != nil {
		return x.TotalRecords
	}
	return 0
}

func (x *ListUploadResponse) GetUploads() []*Upload {
	if x != nil {
		return x.Uploads
	}
	return nil
}

type Upload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UploadId       int32                `protobuf:"varint,1,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`
	Scope          string               `protobuf:"bytes,2,opt,name=scope,proto3" json:"scope,omitempty"`
	FileName       string               `protobuf:"bytes,3,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	Status         string               `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	UploadedBy     string               `protobuf:"bytes,5,opt,name=uploaded_by,json=uploadedBy,proto3" json:"uploaded_by,omitempty"`
	UploadedOn     *timestamp.Timestamp `protobuf:"bytes,6,opt,name=uploaded_on,json=uploadedOn,proto3" json:"uploaded_on,omitempty"`
	TotalRecords   int32                `protobuf:"varint,7,opt,name=total_records,json=totalRecords,proto3" json:"total_records,omitempty"`
	SuccessRecords int32                `protobuf:"varint,8,opt,name=success_records,json=successRecords,proto3" json:"success_records,omitempty"`
	FailedRecords  int32                `protobuf:"varint,9,opt,name=failed_records,json=failedRecords,proto3" json:"failed_records,omitempty"`
	Comments       string               `protobuf:"bytes,10,opt,name=comments,proto3" json:"comments,omitempty"`
	ErrorFileApi   string               `protobuf:"bytes,11,opt,name=error_file_api,json=errorFileApi,proto3" json:"error_file_api,omitempty"`
}

func (x *Upload) Reset() {
	*x = Upload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dps_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Upload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Upload) ProtoMessage() {}

func (x *Upload) ProtoReflect() protoreflect.Message {
	mi := &file_dps_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Upload.ProtoReflect.Descriptor instead.
func (*Upload) Descriptor() ([]byte, []int) {
	return file_dps_proto_rawDescGZIP(), []int{28}
}

func (x *Upload) GetUploadId() int32 {
	if x != nil {
		return x.UploadId
	}
	return 0
}

func (x *Upload) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *Upload) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *Upload) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Upload) GetUploadedBy() string {
	if x != nil {
		return x.UploadedBy
	}
	return ""
}

func (x *Upload) GetUploadedOn() *timestamp.Timestamp {
	if x != nil {
		return x.UploadedOn
	}
	return nil
}

func (x *Upload) GetTotalRecords() int32 {
	if x != nil {
		return x.TotalRecords
	}
	return 0
}

func (x *Upload) GetSuccessRecords() int32 {
	if x != nil {
		return x.SuccessRecords
	}
	return 0
}

func (x *Upload) GetFailedRecords() int32 {
	if x != nil {
		return x.FailedRecords
	}
	return 0
}

func (x *Upload) GetComments() string {
	if x != nil {
		return x.Comments
	}
	return ""
}

func (x *Upload) GetErrorFileApi() string {
	if x != nil {
		return x.ErrorFileApi
	}
	return ""
}

type DeleteInventoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope        string                              `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	DeletionType DeleteInventoryRequestDeletionTypes `protobuf:"varint,2,opt,name=deletion_type,json=deletionType,proto3,enum=optisam.dps.v1.DeleteInventoryRequestDeletionTypes" json:"deletion_type,omitempty"`
}

func (x *DeleteInventoryRequest) Reset() {
	*x = DeleteInventoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dps_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInventoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInventoryRequest) ProtoMessage() {}

func (x *DeleteInventoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dps_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInventoryRequest.ProtoReflect.Descriptor instead.
func (*DeleteInventoryRequest) Descriptor() ([]byte, []int) {
	return file_dps_proto_rawDescGZIP(), []int{29}
}

func (x *DeleteInventoryRequest) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *DeleteInventoryRequest) GetDeletionType() DeleteInventoryRequestDeletionTypes {
	if x != nil {
		return x.DeletionType
	}
	return DeleteInventoryRequest_ACQRIGHTS
}

type DeleteInventoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DeleteInventoryResponse) Reset() {
	*x = DeleteInventoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dps_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInventoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInventoryResponse) ProtoMessage() {}

func (x *DeleteInventoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dps_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInventoryResponse.ProtoReflect.Descriptor instead.
func (*DeleteInventoryResponse) Descriptor() ([]byte, []int) {
	return file_dps_proto_rawDescGZIP(), []int{30}
}

func (x *DeleteInventoryResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_dps_proto protoreflect.FileDescriptor

var file_dps_proto_rawDesc = []byte{
	0x0a, 0x09, 0x64, 0x70, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x6f, 0x70, 0x74,
	0x69, 0x73, 0x61, 0x6d, 0x2e, 0x64, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d,
	0x73, 0x77, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x6b, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73,
	0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x83,
	0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x46, 0x69,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x63, 0x6f, 0x70, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73,
	0x5f, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x4f, 0x6c, 0x64, 0x65, 0x72, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x69, 0x63, 0x22, 0x1b, 0x0a, 0x19, 0x56, 0x69, 0x65, 0x77, 0x43, 0x6f, 0x72, 0x65,
	0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x69, 0x0a, 0x0e, 0x43, 0x6f, 0x72, 0x65, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x6c,
	0x6f, 0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x5f, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x4f, 0x6e, 0x22, 0x64, 0x0a, 0x1a,
	0x56, 0x69, 0x65, 0x77, 0x43, 0x6f, 0x72, 0x65, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x4c, 0x6f,
	0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0e, 0x63, 0x6f,
	0x72, 0x65, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x64, 0x70, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x6c, 0x6f,
	0x67, 0x73, 0x52, 0x0e, 0x63, 0x6f, 0x72, 0x65, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x6c, 0x6f,
	0x67, 0x73, 0x22, 0x6f, 0x0a, 0x13, 0x43, 0x6f, 0x72, 0x65, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x6e,
	0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x72, 0x65, 0x66, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x72, 0x65, 0x66, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x22, 0x4e, 0x0a, 0x18, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x22, 0x82, 0x01, 0x0a, 0x19, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x43, 0x0a, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e,
	0x64, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x46, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0x34, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x6f, 0x63, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x22, 0x47,
	0x0a, 0x1d, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x5d, 0x0a, 0x19, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x36, 0x0a, 0x1a, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x54,
	0x0a, 0x13, 0x44, 0x61, 0x74, 0x61, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xfa, 0x42, 0x10, 0x72, 0x0e, 0x32,
	0x0c, 0x5c, 0x62, 0x5b, 0x41, 0x2d, 0x5a, 0x5d, 0x7b, 0x33, 0x7d, 0x5c, 0x62, 0x52, 0x05, 0x73,
	0x63, 0x6f, 0x70, 0x65, 0x22, 0xa6, 0x01, 0x0a, 0x14, 0x44, 0x61, 0x74, 0x61, 0x41, 0x6e, 0x61,
	0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xe7, 0x03,
	0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x2c, 0xfa, 0x42, 0x07, 0x1a, 0x05, 0x10, 0xe8,
	0x07, 0x28, 0x01, 0x92, 0x41, 0x1f, 0x32, 0x0b, 0x50, 0x61, 0x67, 0x65, 0x20, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x59, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x8f, 0x40, 0x69, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0xf0, 0x3f, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x4c,
	0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x2f, 0xfa, 0x42, 0x07, 0x1a, 0x05, 0x18, 0xc8, 0x01, 0x28, 0x0a, 0x92, 0x41, 0x22,
	0x32, 0x0e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x20, 0x70, 0x65, 0x72, 0x20, 0x70, 0x61, 0x67, 0x65,
	0x59, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x69, 0x40, 0x69, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x24, 0x40, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x4d, 0x0a, 0x07,
	0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e,
	0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x64, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x82, 0x01,
	0x02, 0x10, 0x01, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x56, 0x0a, 0x0a, 0x73,
	0x6f, 0x72, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2d, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x64, 0x70, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x08,
	0xfa, 0x42, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x13, 0xfa, 0x42, 0x10, 0x72, 0x0e, 0x32, 0x0c, 0x5c, 0x62, 0x5b, 0x41, 0x2d,
	0x5a, 0x5d, 0x7b, 0x33, 0x7d, 0x5c, 0x62, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x22, 0x47,
	0x0a, 0x06, 0x53, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x11, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x62, 0x79, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x6f, 0x6e, 0x10, 0x03, 0x22, 0x1e, 0x0a, 0x09, 0x53, 0x6f, 0x72, 0x74, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x07, 0x0a, 0x03, 0x61, 0x73, 0x63, 0x10, 0x00, 0x12, 0x08, 0x0a,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x10, 0x01, 0x22, 0x72, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x73, 0x12, 0x36, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d,
	0x2e, 0x64, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xa1, 0x01, 0x0a, 0x08,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4f, 0x6e, 0x22,
	0x48, 0x0a, 0x1b, 0x44, 0x72, 0x6f, 0x70, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x46,
	0x69, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29,
	0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xfa,
	0x42, 0x10, 0x72, 0x0e, 0x32, 0x0c, 0x5c, 0x62, 0x5b, 0x41, 0x2d, 0x5a, 0x5d, 0x7b, 0x33, 0x7d,
	0x5c, 0x62, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x22, 0x38, 0x0a, 0x1c, 0x44, 0x72, 0x6f,
	0x70, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x22, 0x87, 0x02, 0x0a, 0x1f, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x63, 0x0a, 0x09, 0x66, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x39, 0x2e, 0x6f, 0x70, 0x74,
	0x69, 0x73, 0x61, 0x6d, 0x2e, 0x64, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x4f, 0x76, 0x65, 0x72,
	0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x79, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x82, 0x01, 0x04, 0x18, 0x00, 0x18,
	0x01, 0x52, 0x09, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x2f, 0x0a, 0x0e,
	0x6e, 0x6f, 0x4f, 0x66, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x18, 0x0c, 0x52, 0x0e, 0x6e,
	0x6f, 0x4f, 0x66, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x29, 0x0a,
	0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xfa, 0x42,
	0x10, 0x72, 0x0e, 0x32, 0x0c, 0x5c, 0x62, 0x5b, 0x41, 0x2d, 0x5a, 0x5d, 0x7b, 0x33, 0x7d, 0x5c,
	0x62, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x22, 0x23, 0x0a, 0x09, 0x46, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x41, 0x49, 0x4c, 0x59, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x4f, 0x4e, 0x54, 0x48, 0x4c, 0x59, 0x10, 0x01, 0x22, 0xa0, 0x01,
	0x0a, 0x20, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x51, 0x75, 0x61, 0x6c, 0x69,
	0x74, 0x79, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x02, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x02, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x02, 0x52, 0x0a, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x71, 0x72, 0x69, 0x67, 0x68, 0x74, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x02, 0x52, 0x09, 0x61, 0x63, 0x71, 0x72, 0x69, 0x67, 0x68, 0x74, 0x73,
	0x22, 0xdb, 0x02, 0x0a, 0x13, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x35,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x21, 0xfa, 0x42,
	0x1e, 0x72, 0x1c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x0a, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x5f, 0x62,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65,
	0x64, 0x42, 0x79, 0x12, 0x1e, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x08, 0x01, 0x52, 0x05, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x12, 0x4e, 0x0a, 0x0a, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61,
	0x6d, 0x2e, 0x64, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x52, 0x09, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x5f,
	0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73,
	0x69, 0x73, 0x49, 0x64, 0x22, 0x28, 0x0a, 0x0b, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x49, 0x43, 0x10, 0x00,
	0x12, 0x0c, 0x0a, 0x08, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x43, 0x10, 0x01, 0x22, 0xcd,
	0x01, 0x0a, 0x14, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x5a, 0x0a, 0x0c, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61,
	0x6d, 0x2e, 0x64, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0c, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64, 0x1a, 0x3f, 0x0a,
	0x11, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa2,
	0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x05, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x09, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52,
	0x08, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x1a, 0x02, 0x28, 0x01, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x24, 0x0a,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x28, 0x01, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x22, 0x7c, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x65,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0d, 0x66, 0x61, 0x69,
	0x6c, 0x65, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x64, 0x70, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x0d,
	0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x22, 0x0a,
	0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x22, 0x9b, 0x01, 0x0a, 0x0c, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x12, 0x3a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x64, 0x70, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x9d, 0x04, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x2c, 0xfa, 0x42, 0x07, 0x1a, 0x05, 0x10, 0xe8,
	0x07, 0x28, 0x01, 0x92, 0x41, 0x1f, 0x32, 0x0b, 0x50, 0x61, 0x67, 0x65, 0x20, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x59, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x8f, 0x40, 0x69, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0xf0, 0x3f, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x4c,
	0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x2f, 0xfa, 0x42, 0x07, 0x1a, 0x05, 0x18, 0xc8, 0x01, 0x28, 0x0a, 0x92, 0x41, 0x22,
	0x32, 0x0e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x20, 0x70, 0x65, 0x72, 0x20, 0x70, 0x61, 0x67, 0x65,
	0x59, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x69, 0x40, 0x69, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x24, 0x40, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x4b, 0x0a, 0x07,
	0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e,
	0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x64, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x53, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02, 0x10,
	0x01, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x54, 0x0a, 0x0a, 0x73, 0x6f, 0x72,
	0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e,
	0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x64, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x53, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x82,
	0x01, 0x02, 0x10, 0x01, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x29, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13,
	0xfa, 0x42, 0x10, 0x72, 0x0e, 0x32, 0x0c, 0x5c, 0x62, 0x5b, 0x41, 0x2d, 0x5a, 0x5d, 0x7b, 0x33,
	0x7d, 0x5c, 0x62, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x2d, 0x0a, 0x0e, 0x67, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x28, 0x00, 0x52, 0x0c, 0x67, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x54, 0x0a, 0x06, 0x53, 0x6f, 0x72,
	0x74, 0x42, 0x79, 0x12, 0x0d, 0x0a, 0x09, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x69, 0x64,
	0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x10,
	0x01, 0x12, 0x0a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x10, 0x02, 0x12, 0x0f, 0x0a,
	0x0b, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x10, 0x03, 0x12, 0x0f,
	0x0a, 0x0b, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x5f, 0x6f, 0x6e, 0x10, 0x04, 0x22,
	0x1e, 0x0a, 0x09, 0x53, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x07, 0x0a, 0x03,
	0x61, 0x73, 0x63, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x10, 0x01, 0x22,
	0x6a, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x30, 0x0a, 0x07, 0x75, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6f, 0x70, 0x74,
	0x69, 0x73, 0x61, 0x6d, 0x2e, 0x64, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x52, 0x07, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x22, 0x85, 0x03, 0x0a, 0x06,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x75, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x42, 0x79, 0x12,
	0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x5f, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x4f, 0x6e, 0x12, 0x23, 0x0a, 0x0d,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x61,
	0x69, 0x6c, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x24, 0x0a,
	0x0e, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x46, 0x69, 0x6c, 0x65,
	0x41, 0x70, 0x69, 0x22, 0xe2, 0x01, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29,
	0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xfa,
	0x42, 0x10, 0x72, 0x0e, 0x32, 0x0c, 0x5c, 0x62, 0x5b, 0x41, 0x2d, 0x5a, 0x5d, 0x7b, 0x33, 0x7d,
	0x5c, 0x62, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x68, 0x0a, 0x0d, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x35, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x64, 0x70, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x42, 0x0c, 0xfa, 0x42, 0x09, 0x82, 0x01, 0x06, 0x18,
	0x00, 0x18, 0x01, 0x18, 0x02, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x33, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x43, 0x51, 0x52, 0x49, 0x47, 0x48,
	0x54, 0x53, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x55, 0x4c, 0x4c, 0x10, 0x01, 0x12, 0x08,
	0x0a, 0x04, 0x50, 0x41, 0x52, 0x4b, 0x10, 0x02, 0x22, 0x33, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x32, 0x98, 0x10,
	0x0a, 0x0a, 0x44, 0x70, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x94, 0x01, 0x0a,
	0x18, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x29, 0x2e, 0x6f, 0x70, 0x74, 0x69,
	0x73, 0x61, 0x6d, 0x2e, 0x64, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x64,
	0x70, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x64, 0x70, 0x73, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x3a, 0x01, 0x2a, 0x12, 0x70, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73,
	0x69, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2a, 0x2e, 0x6f, 0x70, 0x74,
	0x69, 0x73, 0x61, 0x6d, 0x2e, 0x64, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d,
	0x2e, 0x64, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x61, 0x6c, 0x79,
	0x73, 0x69, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8a, 0x01, 0x0a, 0x13, 0x56, 0x69, 0x65, 0x77, 0x46, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x28, 0x2e,
	0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x64, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56,
	0x69, 0x65, 0x77, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61,
	0x6d, 0x2e, 0x64, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x64, 0x70, 0x73, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x66, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x12, 0x91, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x2c, 0x2e, 0x6f,
	0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x64, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x6f, 0x70, 0x74,
	0x69, 0x73, 0x61, 0x6d, 0x2e, 0x64, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x6f, 0x63, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x15, 0x12, 0x13, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x70, 0x73, 0x2f, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x8f, 0x01, 0x0a, 0x12, 0x56, 0x69, 0x65, 0x77, 0x43,
	0x6f, 0x72, 0x65, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x29, 0x2e,
	0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x64, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56,
	0x69, 0x65, 0x77, 0x43, 0x6f, 0x72, 0x65, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x4c, 0x6f, 0x67,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73,
	0x61, 0x6d, 0x2e, 0x64, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x43, 0x6f,
	0x72, 0x65, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x70, 0x73, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x66, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x6c, 0x6f, 0x67, 0x73, 0x12, 0x7f, 0x0a, 0x0c, 0x44, 0x61, 0x74, 0x61,
	0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x12, 0x23, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73,
	0x61, 0x6d, 0x2e, 0x64, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x41, 0x6e,
	0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e,
	0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x64, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x22, 0x19, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x70, 0x73, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x61, 0x6e,
	0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x80, 0x01, 0x0a, 0x0c, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x23, 0x2e, 0x6f, 0x70, 0x74,
	0x69, 0x73, 0x61, 0x6d, 0x2e, 0x64, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x24, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x64, 0x70, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x22, 0x1a, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x70, 0x73, 0x2f, 0x75, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x73, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x3a, 0x01, 0x2a, 0x12, 0xa4, 0x01, 0x0a,
	0x18, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74,
	0x79, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x12, 0x2f, 0x2e, 0x6f, 0x70, 0x74, 0x69,
	0x73, 0x61, 0x6d, 0x2e, 0x64, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x73, 0x68, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x4f, 0x76, 0x65, 0x72, 0x76,
	0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x6f, 0x70, 0x74,
	0x69, 0x73, 0x61, 0x6d, 0x2e, 0x64, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x4f, 0x76, 0x65, 0x72,
	0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x70,
	0x73, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x71, 0x75, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x12, 0x79, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e,
	0x64, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73,
	0x61, 0x6d, 0x2e, 0x64, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1a, 0x12, 0x18, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x70,
	0x73, 0x2f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x12, 0x81,
	0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4d, 0x65, 0x74,
	0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e,
	0x64, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73,
	0x61, 0x6d, 0x2e, 0x64, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1e, 0x12, 0x1c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x70,
	0x73, 0x2f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x85, 0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x2e, 0x6f, 0x70,
	0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x64, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22,
	0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x64, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x12, 0x1e, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x64, 0x70, 0x73, 0x2f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x2f,
	0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x64, 0x61, 0x74, 0x61, 0x12, 0x7a, 0x0a, 0x10, 0x4c, 0x69,
	0x73, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x21,
	0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x64, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x22, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x64, 0x70, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12, 0x17, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x70, 0x73, 0x2f, 0x66, 0x61, 0x69, 0x6c, 0x65,
	0x64, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x12, 0x84, 0x01, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x26, 0x2e, 0x6f, 0x70, 0x74,
	0x69, 0x73, 0x61, 0x6d, 0x2e, 0x64, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x64, 0x70, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1a, 0x2a, 0x18, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x70, 0x73,
	0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x7b, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x7d, 0x12, 0x97, 0x01,
	0x0a, 0x14, 0x44, 0x72, 0x6f, 0x70, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x46, 0x69,
	0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2b, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d,
	0x2e, 0x64, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x72, 0x6f, 0x70, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x64, 0x70,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x72, 0x6f, 0x70, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65,
	0x64, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x2a, 0x1c, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x64, 0x70, 0x73, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f,
	0x7b, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x7d, 0x12, 0x7f, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x23,
	0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x64, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x64, 0x70,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x17, 0x12, 0x15, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x70, 0x73, 0x2f, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x28, 0x5a, 0x26, 0x6f, 0x70, 0x74, 0x69,
	0x73, 0x61, 0x6d, 0x2d, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x64, 0x70, 0x73, 0x2d,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dps_proto_rawDescOnce sync.Once
	file_dps_proto_rawDescData = file_dps_proto_rawDesc
)

func file_dps_proto_rawDescGZIP() []byte {
	file_dps_proto_rawDescOnce.Do(func() {
		file_dps_proto_rawDescData = protoimpl.X.CompressGZIP(file_dps_proto_rawDescData)
	})
	return file_dps_proto_rawDescData
}

var file_dps_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_dps_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_dps_proto_goTypes = []interface{}{
	(ListDeletionRequest_SortBy)(0),                // 0: optisam.dps.v1.ListDeletionRequest.SortBy
	(ListDeletionRequest_SortOrder)(0),             // 1: optisam.dps.v1.ListDeletionRequest.SortOrder
	(DashboardQualityOverviewRequest_Frequency)(0), // 2: optisam.dps.v1.DashboardQualityOverviewRequest.Frequency
	(NotifyUploadRequestScopeTypes)(0),             // 3: optisam.dps.v1.NotifyUploadRequest.scope_types
	(ListUploadRequest_SortBy)(0),                  // 4: optisam.dps.v1.ListUploadRequest.SortBy
	(ListUploadRequest_SortOrder)(0),               // 5: optisam.dps.v1.ListUploadRequest.SortOrder
	(DeleteInventoryRequestDeletionTypes)(0),       // 6: optisam.dps.v1.DeleteInventoryRequest.deletion_types
	(*GetAnalysisFileInfoRequest)(nil),             // 7: optisam.dps.v1.GetAnalysisFileInfoRequest
	(*GetAnalysisFileInfoResponse)(nil),            // 8: optisam.dps.v1.GetAnalysisFileInfoResponse
	(*ViewCoreFactorLogsRequest)(nil),              // 9: optisam.dps.v1.ViewCoreFactorLogsRequest
	(*CoreFactorlogs)(nil),                         // 10: optisam.dps.v1.CoreFactorlogs
	(*ViewCoreFactorLogsResponse)(nil),             // 11: optisam.dps.v1.ViewCoreFactorLogsResponse
	(*CoreFactorReference)(nil),                    // 12: optisam.dps.v1.CoreFactorReference
	(*ViewReferenceDataRequest)(nil),               // 13: optisam.dps.v1.ViewReferenceDataRequest
	(*ViewReferenceDataResponse)(nil),              // 14: optisam.dps.v1.ViewReferenceDataResponse
	(*GetAllocMetricDetailsRequest)(nil),           // 15: optisam.dps.v1.GetAllocMetricDetailsRequest
	(*GetAllocMetricDetailsResponse)(nil),          // 16: optisam.dps.v1.GetAllocMetricDetailsResponse
	(*StoreReferenceDataRequest)(nil),              // 17: optisam.dps.v1.StoreReferenceDataRequest
	(*StoreReferenceDataResponse)(nil),             // 18: optisam.dps.v1.StoreReferenceDataResponse
	(*DataAnalysisRequest)(nil),                    // 19: optisam.dps.v1.DataAnalysisRequest
	(*DataAnalysisResponse)(nil),                   // 20: optisam.dps.v1.DataAnalysisResponse
	(*ListDeletionRequest)(nil),                    // 21: optisam.dps.v1.ListDeletionRequest
	(*ListDeletionResponse)(nil),                   // 22: optisam.dps.v1.ListDeletionResponse
	(*Deletion)(nil),                               // 23: optisam.dps.v1.Deletion
	(*DropUploadedFileDataRequest)(nil),            // 24: optisam.dps.v1.DropUploadedFileDataRequest
	(*DropUploadedFileDataResponse)(nil),           // 25: optisam.dps.v1.DropUploadedFileDataResponse
	(*DashboardQualityOverviewRequest)(nil),        // 26: optisam.dps.v1.DashboardQualityOverviewRequest
	(*DashboardQualityOverviewResponse)(nil),       // 27: optisam.dps.v1.DashboardQualityOverviewResponse
	(*NotifyUploadRequest)(nil),                    // 28: optisam.dps.v1.NotifyUploadRequest
	(*NotifyUploadResponse)(nil),                   // 29: optisam.dps.v1.NotifyUploadResponse
	(*ListFailedRequest)(nil),                      // 30: optisam.dps.v1.ListFailedRequest
	(*ListFailedResponse)(nil),                     // 31: optisam.dps.v1.ListFailedResponse
	(*FailedRecord)(nil),                           // 32: optisam.dps.v1.FailedRecord
	(*ListUploadRequest)(nil),                      // 33: optisam.dps.v1.ListUploadRequest
	(*ListUploadResponse)(nil),                     // 34: optisam.dps.v1.ListUploadResponse
	(*Upload)(nil),                                 // 35: optisam.dps.v1.Upload
	(*DeleteInventoryRequest)(nil),                 // 36: optisam.dps.v1.DeleteInventoryRequest
	(*DeleteInventoryResponse)(nil),                // 37: optisam.dps.v1.DeleteInventoryResponse
	nil,                                            // 38: optisam.dps.v1.NotifyUploadResponse.FileUploadIdEntry
	nil,                                            // 39: optisam.dps.v1.FailedRecord.DataEntry
	(*timestamp.Timestamp)(nil),                    // 40: google.protobuf.Timestamp
}
var file_dps_proto_depIdxs = []int32{
	40, // 0: optisam.dps.v1.CoreFactorlogs.uploaded_on:type_name -> google.protobuf.Timestamp
	10, // 1: optisam.dps.v1.ViewCoreFactorLogsResponse.corefactorlogs:type_name -> optisam.dps.v1.CoreFactorlogs
	12, // 2: optisam.dps.v1.ViewReferenceDataResponse.references:type_name -> optisam.dps.v1.CoreFactorReference
	0,  // 3: optisam.dps.v1.ListDeletionRequest.sort_by:type_name -> optisam.dps.v1.ListDeletionRequest.SortBy
	1,  // 4: optisam.dps.v1.ListDeletionRequest.sort_order:type_name -> optisam.dps.v1.ListDeletionRequest.SortOrder
	23, // 5: optisam.dps.v1.ListDeletionResponse.deletions:type_name -> optisam.dps.v1.Deletion
	40, // 6: optisam.dps.v1.Deletion.created_on:type_name -> google.protobuf.Timestamp
	2,  // 7: optisam.dps.v1.DashboardQualityOverviewRequest.frequency:type_name -> optisam.dps.v1.DashboardQualityOverviewRequest.Frequency
	3,  // 8: optisam.dps.v1.NotifyUploadRequest.scope_type:type_name -> optisam.dps.v1.NotifyUploadRequest.scope_types
	38, // 9: optisam.dps.v1.NotifyUploadResponse.fileUploadId:type_name -> optisam.dps.v1.NotifyUploadResponse.FileUploadIdEntry
	32, // 10: optisam.dps.v1.ListFailedResponse.failedRecords:type_name -> optisam.dps.v1.FailedRecord
	39, // 11: optisam.dps.v1.FailedRecord.data:type_name -> optisam.dps.v1.FailedRecord.DataEntry
	4,  // 12: optisam.dps.v1.ListUploadRequest.sort_by:type_name -> optisam.dps.v1.ListUploadRequest.SortBy
	5,  // 13: optisam.dps.v1.ListUploadRequest.sort_order:type_name -> optisam.dps.v1.ListUploadRequest.SortOrder
	35, // 14: optisam.dps.v1.ListUploadResponse.uploads:type_name -> optisam.dps.v1.Upload
	40, // 15: optisam.dps.v1.Upload.uploaded_on:type_name -> google.protobuf.Timestamp
	6,  // 16: optisam.dps.v1.DeleteInventoryRequest.deletion_type:type_name -> optisam.dps.v1.DeleteInventoryRequest.deletion_types
	17, // 17: optisam.dps.v1.DpsService.StoreCoreFactorReference:input_type -> optisam.dps.v1.StoreReferenceDataRequest
	7,  // 18: optisam.dps.v1.DpsService.GetAnalysisFileInfo:input_type -> optisam.dps.v1.GetAnalysisFileInfoRequest
	13, // 19: optisam.dps.v1.DpsService.ViewFactorReference:input_type -> optisam.dps.v1.ViewReferenceDataRequest
	15, // 20: optisam.dps.v1.DpsService.GetAllocMetricDetails:input_type -> optisam.dps.v1.GetAllocMetricDetailsRequest
	9,  // 21: optisam.dps.v1.DpsService.ViewCoreFactorLogs:input_type -> optisam.dps.v1.ViewCoreFactorLogsRequest
	19, // 22: optisam.dps.v1.DpsService.DataAnalysis:input_type -> optisam.dps.v1.DataAnalysisRequest
	28, // 23: optisam.dps.v1.DpsService.NotifyUpload:input_type -> optisam.dps.v1.NotifyUploadRequest
	26, // 24: optisam.dps.v1.DpsService.DashboardQualityOverview:input_type -> optisam.dps.v1.DashboardQualityOverviewRequest
	33, // 25: optisam.dps.v1.DpsService.ListUploadData:input_type -> optisam.dps.v1.ListUploadRequest
	33, // 26: optisam.dps.v1.DpsService.ListUploadMetaData:input_type -> optisam.dps.v1.ListUploadRequest
	33, // 27: optisam.dps.v1.DpsService.ListUploadGlobalData:input_type -> optisam.dps.v1.ListUploadRequest
	30, // 28: optisam.dps.v1.DpsService.ListFailedRecord:input_type -> optisam.dps.v1.ListFailedRequest
	36, // 29: optisam.dps.v1.DpsService.DeleteInventory:input_type -> optisam.dps.v1.DeleteInventoryRequest
	24, // 30: optisam.dps.v1.DpsService.DropUploadedFileData:input_type -> optisam.dps.v1.DropUploadedFileDataRequest
	21, // 31: optisam.dps.v1.DpsService.ListDeletionRecords:input_type -> optisam.dps.v1.ListDeletionRequest
	18, // 32: optisam.dps.v1.DpsService.StoreCoreFactorReference:output_type -> optisam.dps.v1.StoreReferenceDataResponse
	8,  // 33: optisam.dps.v1.DpsService.GetAnalysisFileInfo:output_type -> optisam.dps.v1.GetAnalysisFileInfoResponse
	14, // 34: optisam.dps.v1.DpsService.ViewFactorReference:output_type -> optisam.dps.v1.ViewReferenceDataResponse
	16, // 35: optisam.dps.v1.DpsService.GetAllocMetricDetails:output_type -> optisam.dps.v1.GetAllocMetricDetailsResponse
	11, // 36: optisam.dps.v1.DpsService.ViewCoreFactorLogs:output_type -> optisam.dps.v1.ViewCoreFactorLogsResponse
	20, // 37: optisam.dps.v1.DpsService.DataAnalysis:output_type -> optisam.dps.v1.DataAnalysisResponse
	29, // 38: optisam.dps.v1.DpsService.NotifyUpload:output_type -> optisam.dps.v1.NotifyUploadResponse
	27, // 39: optisam.dps.v1.DpsService.DashboardQualityOverview:output_type -> optisam.dps.v1.DashboardQualityOverviewResponse
	34, // 40: optisam.dps.v1.DpsService.ListUploadData:output_type -> optisam.dps.v1.ListUploadResponse
	34, // 41: optisam.dps.v1.DpsService.ListUploadMetaData:output_type -> optisam.dps.v1.ListUploadResponse
	34, // 42: optisam.dps.v1.DpsService.ListUploadGlobalData:output_type -> optisam.dps.v1.ListUploadResponse
	31, // 43: optisam.dps.v1.DpsService.ListFailedRecord:output_type -> optisam.dps.v1.ListFailedResponse
	37, // 44: optisam.dps.v1.DpsService.DeleteInventory:output_type -> optisam.dps.v1.DeleteInventoryResponse
	25, // 45: optisam.dps.v1.DpsService.DropUploadedFileData:output_type -> optisam.dps.v1.DropUploadedFileDataResponse
	22, // 46: optisam.dps.v1.DpsService.ListDeletionRecords:output_type -> optisam.dps.v1.ListDeletionResponse
	32, // [32:47] is the sub-list for method output_type
	17, // [17:32] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_dps_proto_init() }
func file_dps_proto_init() {
	if File_dps_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dps_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAnalysisFileInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dps_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAnalysisFileInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dps_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewCoreFactorLogsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dps_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoreFactorlogs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dps_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewCoreFactorLogsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dps_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoreFactorReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dps_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewReferenceDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dps_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewReferenceDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dps_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllocMetricDetailsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dps_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllocMetricDetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dps_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreReferenceDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dps_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreReferenceDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dps_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataAnalysisRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dps_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataAnalysisResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dps_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDeletionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dps_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDeletionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dps_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Deletion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dps_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropUploadedFileDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dps_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropUploadedFileDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dps_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DashboardQualityOverviewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dps_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DashboardQualityOverviewResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dps_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyUploadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dps_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyUploadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dps_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFailedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dps_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFailedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dps_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FailedRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dps_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUploadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dps_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUploadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dps_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Upload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dps_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInventoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dps_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInventoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dps_proto_rawDesc,
			NumEnums:      7,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dps_proto_goTypes,
		DependencyIndexes: file_dps_proto_depIdxs,
		EnumInfos:         file_dps_proto_enumTypes,
		MessageInfos:      file_dps_proto_msgTypes,
	}.Build()
	File_dps_proto = out.File
	file_dps_proto_rawDesc = nil
	file_dps_proto_goTypes = nil
	file_dps_proto_depIdxs = nil
}
