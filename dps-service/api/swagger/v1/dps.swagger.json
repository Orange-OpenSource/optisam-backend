{
  "swagger": "2.0",
  "info": {
    "title": "dps.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "DpsService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/dps/corefactor": {
      "get": {
        "operationId": "DpsService_ViewFactorReference",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ViewReferenceDataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "pageNo",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "DpsService"
        ]
      },
      "post": {
        "operationId": "DpsService_StoreCoreFactorReference",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1StoreReferenceDataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1StoreReferenceDataRequest"
            }
          }
        ],
        "tags": [
          "DpsService"
        ]
      }
    },
    "/api/v1/dps/corefactorlogs": {
      "get": {
        "operationId": "DpsService_ViewCoreFactorLogs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ViewCoreFactorLogsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "DpsService"
        ]
      }
    },
    "/api/v1/dps/dashboard/quality": {
      "get": {
        "operationId": "DpsService_DashboardQualityOverview",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DashboardQualityOverviewResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "frequency",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DAILY",
              "MONTHLY"
            ],
            "default": "DAILY"
          },
          {
            "name": "noOfDataPoints",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "scope",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "DpsService"
        ]
      }
    },
    "/api/v1/dps/data/analysis": {
      "post": {
        "operationId": "DpsService_DataAnalysis",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DataAnalysisResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DataAnalysisRequest"
            }
          }
        ],
        "tags": [
          "DpsService"
        ]
      }
    },
    "/api/v1/dps/data/{scope}": {
      "delete": {
        "operationId": "DpsService_DeleteInventory",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteInventoryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "deletion_type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ACQRIGHTS",
              "FULL",
              "PARK"
            ],
            "default": "ACQRIGHTS"
          }
        ],
        "tags": [
          "DpsService"
        ]
      }
    },
    "/api/v1/dps/deletions": {
      "get": {
        "operationId": "DpsService_ListDeletionRecords",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListDeletionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "page_num",
            "description": "Page number",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_size",
            "description": "Items per page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "deletion_type",
              "status",
              "created_by",
              "created_on"
            ],
            "default": "deletion_type"
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "default": "asc"
          },
          {
            "name": "scope",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "DpsService"
        ]
      }
    },
    "/api/v1/dps/failed/data": {
      "get": {
        "operationId": "DpsService_ListFailedRecord",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListFailedResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "scope",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "upload_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_num",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "DpsService"
        ]
      }
    },
    "/api/v1/dps/resource/{scope}": {
      "delete": {
        "operationId": "DpsService_DropUploadedFileData",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DropUploadedFileDataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "DpsService"
        ]
      }
    },
    "/api/v1/dps/uploads/data": {
      "get": {
        "operationId": "DpsService_ListUploadData",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListUploadResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "page_num",
            "description": "Page number",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_size",
            "description": "Items per page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "upload_id",
              "file_name",
              "status",
              "uploaded_by",
              "uploaded_on"
            ],
            "default": "upload_id"
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "default": "asc"
          },
          {
            "name": "scope",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "global_file_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "DpsService"
        ]
      }
    },
    "/api/v1/dps/uploads/globaldata": {
      "get": {
        "operationId": "DpsService_ListUploadGlobalData",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListUploadResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "page_num",
            "description": "Page number",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_size",
            "description": "Items per page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "upload_id",
              "file_name",
              "status",
              "uploaded_by",
              "uploaded_on"
            ],
            "default": "upload_id"
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "default": "asc"
          },
          {
            "name": "scope",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "global_file_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "DpsService"
        ]
      }
    },
    "/api/v1/dps/uploads/metadata": {
      "get": {
        "operationId": "DpsService_ListUploadMetaData",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListUploadResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "page_num",
            "description": "Page number",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_size",
            "description": "Items per page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "upload_id",
              "file_name",
              "status",
              "uploaded_by",
              "uploaded_on"
            ],
            "default": "upload_id"
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "default": "asc"
          },
          {
            "name": "scope",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "global_file_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "DpsService"
        ]
      }
    },
    "/api/v1/dps/uploads/notify": {
      "post": {
        "operationId": "DpsService_NotifyUpload",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1NotifyUploadResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1NotifyUploadRequest"
            }
          }
        ],
        "tags": [
          "DpsService"
        ]
      }
    }
  },
  "definitions": {
    "DashboardQualityOverviewRequestFrequency": {
      "type": "string",
      "enum": [
        "DAILY",
        "MONTHLY"
      ],
      "default": "DAILY"
    },
    "DeleteInventoryRequestdeletion_types": {
      "type": "string",
      "enum": [
        "ACQRIGHTS",
        "FULL",
        "PARK"
      ],
      "default": "ACQRIGHTS"
    },
    "NotifyUploadRequestscope_types": {
      "type": "string",
      "enum": [
        "GENERIC",
        "SPECIFIC"
      ],
      "default": "GENERIC"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        },
        "value": {
          "type": "string",
          "format": "byte",
          "description": "Must be a valid serialized protocol buffer of the above specified type."
        }
      },
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := \u0026pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1CoreFactorReference": {
      "type": "object",
      "properties": {
        "manufacturer": {
          "type": "string"
        },
        "model": {
          "type": "string"
        },
        "corefactor": {
          "type": "string"
        }
      }
    },
    "v1CoreFactorlogs": {
      "type": "object",
      "properties": {
        "filename": {
          "type": "string"
        },
        "uploaded_on": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1DashboardQualityOverviewResponse": {
      "type": "object",
      "properties": {
        "applications": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "products": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "equipments": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "acqrights": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        }
      }
    },
    "v1DataAnalysisRequest": {
      "type": "object",
      "properties": {
        "file": {
          "type": "string"
        },
        "scope": {
          "type": "string"
        }
      }
    },
    "v1DataAnalysisResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "report": {
          "type": "string"
        },
        "targetFile": {
          "type": "string"
        },
        "errorFile": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "v1DeleteInventoryResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        }
      }
    },
    "v1Deletion": {
      "type": "object",
      "properties": {
        "deletion_type": {
          "type": "string"
        },
        "created_by": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "created_on": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1DropUploadedFileDataResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        }
      }
    },
    "v1FailedRecord": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "reason": {
          "type": "string"
        }
      }
    },
    "v1ListDeletionRequestSortBy": {
      "type": "string",
      "enum": [
        "deletion_type",
        "status",
        "created_by",
        "created_on"
      ],
      "default": "deletion_type"
    },
    "v1ListDeletionRequestSortOrder": {
      "type": "string",
      "enum": [
        "asc",
        "desc"
      ],
      "default": "asc"
    },
    "v1ListDeletionResponse": {
      "type": "object",
      "properties": {
        "totalRecords": {
          "type": "integer",
          "format": "int32"
        },
        "deletions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Deletion"
          }
        }
      }
    },
    "v1ListFailedResponse": {
      "type": "object",
      "properties": {
        "failedRecords": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1FailedRecord"
          }
        },
        "totalRecords": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1ListUploadRequestSortBy": {
      "type": "string",
      "enum": [
        "upload_id",
        "file_name",
        "status",
        "uploaded_by",
        "uploaded_on"
      ],
      "default": "upload_id"
    },
    "v1ListUploadRequestSortOrder": {
      "type": "string",
      "enum": [
        "asc",
        "desc"
      ],
      "default": "asc"
    },
    "v1ListUploadResponse": {
      "type": "object",
      "properties": {
        "totalRecords": {
          "type": "integer",
          "format": "int32"
        },
        "uploads": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Upload"
          }
        }
      }
    },
    "v1NotifyUploadRequest": {
      "type": "object",
      "properties": {
        "scope": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "upload_id": {
          "type": "integer",
          "format": "int32"
        },
        "uploaded_by": {
          "type": "string"
        },
        "files": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "scope_type": {
          "$ref": "#/definitions/NotifyUploadRequestscope_types"
        },
        "analyzed_error_file": {
          "type": "string"
        }
      }
    },
    "v1NotifyUploadResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "fileUploadId": {
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "v1StoreReferenceDataRequest": {
      "type": "object",
      "properties": {
        "referenceData": {
          "type": "string",
          "format": "byte"
        },
        "filename": {
          "type": "string"
        }
      }
    },
    "v1StoreReferenceDataResponse": {
      "type": "object",
      "properties": {
        "Success": {
          "type": "boolean"
        }
      }
    },
    "v1Upload": {
      "type": "object",
      "properties": {
        "upload_id": {
          "type": "integer",
          "format": "int32"
        },
        "scope": {
          "type": "string"
        },
        "file_name": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "uploaded_by": {
          "type": "string"
        },
        "uploaded_on": {
          "type": "string",
          "format": "date-time"
        },
        "total_records": {
          "type": "integer",
          "format": "int32"
        },
        "success_records": {
          "type": "integer",
          "format": "int32"
        },
        "failed_records": {
          "type": "integer",
          "format": "int32"
        },
        "comments": {
          "type": "string"
        },
        "error_file_api": {
          "type": "string"
        }
      }
    },
    "v1ViewCoreFactorLogsResponse": {
      "type": "object",
      "properties": {
        "corefactorlogs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1CoreFactorlogs"
          }
        }
      }
    },
    "v1ViewReferenceDataResponse": {
      "type": "object",
      "properties": {
        "references": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1CoreFactorReference"
          }
        },
        "totalRecord": {
          "type": "integer",
          "format": "int32"
        }
      }
    }
  }
}
