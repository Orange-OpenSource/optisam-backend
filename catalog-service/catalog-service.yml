kind: "Template"
apiVersion: "v1"
metadata:
  name: "deploy-template"
  annotations:
    description: "Template for deployment"
objects:
  - kind: Service
    apiVersion: v1
    metadata:
      name: svc-optisam-catalog-${ENV}
      annotations:
        description: Exposes and load balances the application pods
      labels:
        run: optisam-catalog-${ENV}
    spec:
      ports:
        - name: api
          port: 80
          targetPort: 8080
          protocol: TCP
        - name: instapi
          port: 81
          targetPort: 8081
          protocol: TCP
        - name: grpc
          port: 8090
          targetPort: 8090
          protocol: TCP
      selector:
        app: optisam-catalog-${ENV}
  - kind: Route
    apiVersion: v1
    metadata:
      name: route-svc-optisam-catalog-${ENV}
      labels:
        run: optisam-catalog-${ENV}
    spec:
      host: optisam-catalog-${ENV}.apps.fr01.paas.tech.orange
      to:
        kind: Service
        name: svc-optisam-catalog-${ENV}
      port:
        targetPort: api
      tls:
        termination: edge
  - kind: Route
    apiVersion: v1
    metadata:
      name: route-svc-optisam-catalog-instrumentation-${ENV}-${ENV}
      labels:
        run: optisam-catalog-${ENV}
    spec:
      host: optisam-catalog-inst-${ENV}.apps.fr01.paas.tech.orange
      to:
        kind: Service
        name: svc-optisam-catalog-${ENV}
      port:
        targetPort: instapi
      tls:
        termination: edge
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: optisam-catalog-${ENV}
      labels:
        app: optisam-catalog-${ENV}
    spec:
      replicas: ${{REPLICAS}}
      selector:
        app: optisam-catalog-${ENV}
      strategy:
        type: Rolling
      template:
        metadata:
          annotations:
            prometheus.io/port: '8081'
            prometheus.io/scrape: 'true'
          labels:
            app: optisam-catalog-${ENV}
            internal-elasticsearch: 'true'
          name: optisam-catalog-${ENV}
        spec:
          containers:
            - name: optisam-catalog-${ENV}
              image: ${DOCKER_REGISTRY}/optisam/catalog-service-${ENV}:${TAG}
              imagePullPolicy: Always
              env:
                - name: "ENV"
                  value: ${ENV}
                - name: "DB_PASSWORD"
                  value: ${DB_PASSWORD}
              envFrom:
                - secretRef:
                       name: user-access
              ports:
                - containerPort: 8080
                  protocol: TCP
                - containerPort: 8081
                  protocol: TCP
                - containerPort: 8090
                  protocol: TCP
              livenessProbe:
                failureThreshold: 3
                httpGet:
                  path: /healthz
                  port: 8081
                  scheme: HTTP
                initialDelaySeconds: 15
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 2
              readinessProbe:
                failureThreshold: 3
                httpGet:
                  path: /healthz
                  port: 8081
                  scheme: HTTP
                initialDelaySeconds: 15
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 2
              resources:
                requests:
                  cpu: "80m"
                  memory: "600Mi"
                limits:
                  cpu: "150m"
                  memory: "1200Mi"
              volumeMounts:
                - name: config-volume-${ENV}
                  mountPath: /opt/config/
                - name: secret-volume
                  mountPath: /opt/secret
                  readOnly: true
          volumes:
            - name: config-volume-${ENV}
              configMap:
                name: config-catalog-${ENV}
            - name: secret-volume
              secret:
                secretName: secret-apipublickey-${ENV}
parameters:
  - name: DB_PASSWORD
    description: Postgres Database Password
    required: true
  - name: TAG
    description: Tag for Docker image
    required: true
  - name: ENV
    description: Env for deployment
    required: true
  - name: REPLICAS
    description: Pod replica count
    value: "1"
    required: true
  - name: DOCKER_REGISTRY
    description: Artifactory URL to download images
    value: "optisam-it-virt-docker-unstable.repos.tech.orange"
    required: true
