{
  "swagger": "2.0",
  "info": {
    "title": "equipment.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/dashboard/types/equipments": {
      "get": {
        "operationId": "EquipmentsPerEquipmentType",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1EquipmentsPerEquipmentTypeResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "scope",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "EquipmentService"
        ]
      }
    },
    "/api/v1/equipments": {
      "post": {
        "operationId": "UpsertEquipment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpsertEquipmentResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpsertEquipmentRequest"
            }
          }
        ],
        "tags": [
          "EquipmentService"
        ]
      }
    },
    "/api/v1/equipments/metadata": {
      "get": {
        "operationId": "ListEquipmentsMetadata",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListEquipmentMetadataResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UN_MAPPED",
              "MAPPED",
              "ALL"
            ],
            "default": "UN_MAPPED"
          },
          {
            "name": "scopes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "EquipmentService"
        ]
      },
      "post": {
        "operationId": "UpsertMetadata",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpsertMetadataResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpsertMetadataRequest"
            }
          }
        ],
        "tags": [
          "EquipmentService"
        ]
      }
    },
    "/api/v1/equipments/metadata/{ID}": {
      "get": {
        "operationId": "GetEquipmentMetadata",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1EquipmentMetadata"
            }
          }
        },
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "attributes",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "All",
              "Mapped",
              "Unmapped"
            ],
            "default": "All"
          },
          {
            "name": "scopes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "EquipmentService"
        ]
      }
    },
    "/api/v1/equipments/types": {
      "get": {
        "operationId": "EquipmentsTypes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1EquipmentTypesResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "scopes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "EquipmentService"
        ]
      },
      "post": {
        "operationId": "CreateEquipmentType",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1EquipmentType"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1EquipmentType"
            }
          }
        ],
        "tags": [
          "EquipmentService"
        ]
      }
    },
    "/api/v1/equipments/types/{equip_type}": {
      "delete": {
        "operationId": "DeleteEquipmentType",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteEquipmentTypeResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "equip_type",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "scope",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "EquipmentService"
        ]
      }
    },
    "/api/v1/equipments/types/{id}": {
      "put": {
        "summary": "UpdateEquipmentType provides support for updating equipment\nonly addition of new attribyte is supported.\n1. Attributes added",
        "operationId": "UpdateEquipmentType",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1EquipmentType"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateEquipmentTypeRequest"
            }
          }
        ],
        "tags": [
          "EquipmentService"
        ]
      },
      "patch": {
        "summary": "UpdateEquipmentType provides support for updating equipment\nonly addition of new attribyte is supported.\n1. Attributes added",
        "operationId": "UpdateEquipmentType2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1EquipmentType"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateEquipmentTypeRequest"
            }
          }
        ],
        "tags": [
          "EquipmentService"
        ]
      }
    },
    "/api/v1/equipments/{scope}": {
      "delete": {
        "operationId": "DropEquipmentData",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DropEquipmentDataResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "EquipmentService"
        ]
      }
    },
    "/api/v1/equipments/{type_id}": {
      "get": {
        "operationId": "ListEquipments",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListEquipmentsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "type_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page_num",
            "description": "Page number",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_size",
            "description": "Items per page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "asc",
              "DESC",
              "desc"
            ],
            "default": "ASC"
          },
          {
            "name": "search_params",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.application_id.filteringOrder",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.application_id.filteringkey",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.application_id.filter_type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "REGEX",
              "EQ"
            ],
            "default": "REGEX"
          },
          {
            "name": "filter.application_id.filteringkey_multiple",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "filter.product_id.filteringOrder",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.product_id.filteringkey",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.product_id.filter_type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "REGEX",
              "EQ"
            ],
            "default": "REGEX"
          },
          {
            "name": "filter.product_id.filteringkey_multiple",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "filter.instance_id.filteringOrder",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.instance_id.filteringkey",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.instance_id.filter_type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "REGEX",
              "EQ"
            ],
            "default": "REGEX"
          },
          {
            "name": "filter.instance_id.filteringkey_multiple",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "scopes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "EquipmentService"
        ]
      }
    },
    "/api/v1/equipments/{type_id}/{equip_id}": {
      "get": {
        "operationId": "GetEquipment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetEquipmentResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "type_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "equip_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "scopes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "EquipmentService"
        ]
      }
    },
    "/api/v1/equipments/{type_id}/{equip_id}/childs/{children_type_id}": {
      "get": {
        "operationId": "ListEquipmentChildren",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListEquipmentsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "type_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "equip_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "children_type_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page_num",
            "description": "Page number",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_size",
            "description": "Items per page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "asc",
              "DESC",
              "desc"
            ],
            "default": "ASC"
          },
          {
            "name": "search_params",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "scopes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "EquipmentService"
        ]
      }
    },
    "/api/v1/equipments/{type_id}/{equip_id}/parents": {
      "get": {
        "operationId": "ListEquipmentParents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListEquipmentsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "type_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "equip_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "scopes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "EquipmentService"
        ]
      }
    },
    "/api/v1/products/aggregations/{name}/equipments/{eq_type_id}": {
      "get": {
        "operationId": "ListEquipmentsForProductAggregation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListEquipmentsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "eq_type_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page_num",
            "description": "Page number",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_size",
            "description": "Items per page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "asc",
              "DESC",
              "desc"
            ],
            "default": "ASC"
          },
          {
            "name": "search_params",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "scopes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "EquipmentService"
        ]
      }
    },
    "/api/v1/products/{swid_tag}/equipments/{eq_type_id}": {
      "get": {
        "operationId": "ListEquipmentsForProduct",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListEquipmentsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "swid_tag",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "eq_type_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page_num",
            "description": "Page number",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_size",
            "description": "Items per page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "asc",
              "DESC",
              "desc"
            ],
            "default": "ASC"
          },
          {
            "name": "search_params",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "scopes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "EquipmentService"
        ]
      }
    }
  },
  "definitions": {
    "EquipmentMetadataRequestAttributes": {
      "type": "string",
      "enum": [
        "All",
        "Mapped",
        "Unmapped"
      ],
      "default": "All"
    },
    "protobufListValue": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufValue"
          },
          "description": "Repeated field of dynamically typed values."
        }
      },
      "description": "`ListValue` is a wrapper around a repeated field of values.\n\nThe JSON representation for `ListValue` is JSON array."
    },
    "protobufNullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "protobufStruct": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/protobufValue"
          },
          "description": "Unordered map of dynamically typed values."
        }
      },
      "description": "`Struct` represents a structured data value, consisting of fields\nwhich map to dynamically typed values. In some languages, `Struct`\nmight be supported by a native representation. For example, in\nscripting languages like JS a struct is represented as an\nobject. The details of that representation are described together\nwith the proto support for the language.\n\nThe JSON representation for `Struct` is JSON object."
    },
    "protobufValue": {
      "type": "object",
      "properties": {
        "null_value": {
          "$ref": "#/definitions/protobufNullValue",
          "description": "Represents a null value."
        },
        "number_value": {
          "type": "number",
          "format": "double",
          "description": "Represents a double value."
        },
        "string_value": {
          "type": "string",
          "description": "Represents a string value."
        },
        "bool_value": {
          "type": "boolean",
          "format": "boolean",
          "description": "Represents a boolean value."
        },
        "struct_value": {
          "$ref": "#/definitions/protobufStruct",
          "description": "Represents a structured value."
        },
        "list_value": {
          "$ref": "#/definitions/protobufListValue",
          "description": "Represents a repeated `Value`."
        }
      },
      "description": "`Value` represents a dynamically typed value which can be either\nnull, a number, a string, a boolean, a recursive struct value, or a\nlist of values. A producer of value is expected to set one of that\nvariants, absence of any variant indicates an error.\n\nThe JSON representation for `Value` is JSON value."
    },
    "v1Attribute": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "data_type": {
          "$ref": "#/definitions/v1DataTypes"
        },
        "primary_key": {
          "type": "boolean",
          "format": "boolean"
        },
        "displayed": {
          "type": "boolean",
          "format": "boolean"
        },
        "searchable": {
          "type": "boolean",
          "format": "boolean"
        },
        "parent_identifier": {
          "type": "boolean",
          "format": "boolean"
        },
        "mapped_to": {
          "type": "string"
        },
        "simulated": {
          "type": "boolean",
          "format": "boolean"
        },
        "int_val": {
          "type": "integer",
          "format": "int32"
        },
        "float_val": {
          "type": "number",
          "format": "float"
        },
        "string_val": {
          "type": "string"
        },
        "int_val_old": {
          "type": "integer",
          "format": "int32"
        },
        "float_val_old": {
          "type": "number",
          "format": "float"
        },
        "string_val_old": {
          "type": "string"
        }
      }
    },
    "v1DataTypes": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "STRING",
        "INT",
        "FLOAT"
      ],
      "default": "UNKNOWN"
    },
    "v1DeleteEquipmentTypeResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "v1DropEquipmentDataResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "v1EquipFilter": {
      "type": "object",
      "properties": {
        "application_id": {
          "$ref": "#/definitions/v1StringFilter"
        },
        "product_id": {
          "$ref": "#/definitions/v1StringFilter"
        },
        "instance_id": {
          "$ref": "#/definitions/v1StringFilter"
        }
      }
    },
    "v1EquipmentMetadata": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "attributes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1EquipmentType": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "parent_id": {
          "type": "string"
        },
        "parent_type": {
          "type": "string"
        },
        "metadata_id": {
          "type": "string"
        },
        "metadata_source": {
          "type": "string"
        },
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Attribute"
          }
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1EquipmentTypesResponse": {
      "type": "object",
      "properties": {
        "equipment_types": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1EquipmentType"
          }
        }
      }
    },
    "v1EquipmentsPerEquipmentTypeResponse": {
      "type": "object",
      "properties": {
        "types_equipments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1TypeEquipments"
          }
        }
      }
    },
    "v1GetEquipmentResponse": {
      "type": "object",
      "properties": {
        "equipment": {
          "type": "string"
        }
      }
    },
    "v1ListEquipmentMetadataRequestType": {
      "type": "string",
      "enum": [
        "UN_MAPPED",
        "MAPPED",
        "ALL"
      ],
      "default": "UN_MAPPED"
    },
    "v1ListEquipmentMetadataResponse": {
      "type": "object",
      "properties": {
        "metadata": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1EquipmentMetadata"
          }
        }
      }
    },
    "v1ListEquipmentsResponse": {
      "type": "object",
      "properties": {
        "totalRecords": {
          "type": "integer",
          "format": "int32"
        },
        "equipments": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "v1SortOrder": {
      "type": "string",
      "enum": [
        "ASC",
        "asc",
        "DESC",
        "desc"
      ],
      "default": "ASC"
    },
    "v1StringFilter": {
      "type": "object",
      "properties": {
        "filteringOrder": {
          "type": "integer",
          "format": "int32"
        },
        "filteringkey": {
          "type": "string"
        },
        "filter_type": {
          "$ref": "#/definitions/v1StringFilterType"
        },
        "filteringkey_multiple": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1StringFilterType": {
      "type": "string",
      "enum": [
        "REGEX",
        "EQ"
      ],
      "default": "REGEX"
    },
    "v1TypeEquipments": {
      "type": "object",
      "properties": {
        "equip_type": {
          "type": "string"
        },
        "num_equipments": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1UpdateEquipmentTypeRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "parent_id": {
          "type": "string",
          "description": "Only send parent id if equipment type does not have a parent."
        },
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Attribute"
          }
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1UpsertEquipmentRequest": {
      "type": "object",
      "properties": {
        "scope": {
          "type": "string"
        },
        "eq_type": {
          "type": "string"
        },
        "eq_data": {
          "$ref": "#/definitions/protobufStruct"
        }
      }
    },
    "v1UpsertEquipmentResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "v1UpsertMetadataRequest": {
      "type": "object",
      "properties": {
        "metadata_type": {
          "type": "string"
        },
        "metadata_source": {
          "type": "string"
        },
        "metadata_attributes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "scope": {
          "type": "string"
        }
      }
    },
    "v1UpsertMetadataResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    }
  }
}
