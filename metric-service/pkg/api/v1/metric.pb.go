// Copyright (C) 2019 Orange
// 
// This software is distributed under the terms and conditions of the 'Apache License 2.0'
// license which can be found in the file 'License.txt' in this package distribution 
// or at 'http://www.apache.org/licenses/LICENSE-2.0'. 

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: metric.proto

package v1

import (
	context "context"
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SortOrder int32

const (
	SortOrder_ASC  SortOrder = 0
	SortOrder_asc  SortOrder = 0
	SortOrder_DESC SortOrder = 1
	SortOrder_desc SortOrder = 1
)

var SortOrder_name = map[int32]string{
	0: "ASC",
	// Duplicate value: 0: "asc",
	1: "DESC",
	// Duplicate value: 1: "desc",
}

var SortOrder_value = map[string]int32{
	"ASC":  0,
	"asc":  0,
	"DESC": 1,
	"desc": 1,
}

func (x SortOrder) String() string {
	return proto.EnumName(SortOrder_name, int32(x))
}

func (SortOrder) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_da41641f55bff5df, []int{0}
}

type DataTypes int32

const (
	DataTypes_UNKNOWN DataTypes = 0
	DataTypes_STRING  DataTypes = 1
	DataTypes_INT     DataTypes = 2
	DataTypes_FLOAT   DataTypes = 3
)

var DataTypes_name = map[int32]string{
	0: "UNKNOWN",
	1: "STRING",
	2: "INT",
	3: "FLOAT",
}

var DataTypes_value = map[string]int32{
	"UNKNOWN": 0,
	"STRING":  1,
	"INT":     2,
	"FLOAT":   3,
}

func (x DataTypes) String() string {
	return proto.EnumName(DataTypes_name, int32(x))
}

func (DataTypes) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_da41641f55bff5df, []int{1}
}

type MetricType_Type int32

const (
	MetricType_Unknown          MetricType_Type = 0
	MetricType_Oracle_Processor MetricType_Type = 1
	MetricType_Oracle_NUP       MetricType_Type = 2
	MetricType_SAG_Processor    MetricType_Type = 3
	MetricType_IBM_PVU          MetricType_Type = 4
	MetricType_Attr_Counter     MetricType_Type = 5
	MetricType_Instance_Number  MetricType_Type = 6
)

var MetricType_Type_name = map[int32]string{
	0: "Unknown",
	1: "Oracle_Processor",
	2: "Oracle_NUP",
	3: "SAG_Processor",
	4: "IBM_PVU",
	5: "Attr_Counter",
	6: "Instance_Number",
}

var MetricType_Type_value = map[string]int32{
	"Unknown":          0,
	"Oracle_Processor": 1,
	"Oracle_NUP":       2,
	"SAG_Processor":    3,
	"IBM_PVU":          4,
	"Attr_Counter":     5,
	"Instance_Number":  6,
}

func (x MetricType_Type) String() string {
	return proto.EnumName(MetricType_Type_name, int32(x))
}

func (MetricType_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_da41641f55bff5df, []int{11, 0}
}

type StringFilter_Type int32

const (
	StringFilter_REGEX StringFilter_Type = 0
	StringFilter_EQ    StringFilter_Type = 1
)

var StringFilter_Type_name = map[int32]string{
	0: "REGEX",
	1: "EQ",
}

var StringFilter_Type_value = map[string]int32{
	"REGEX": 0,
	"EQ":    1,
}

func (x StringFilter_Type) String() string {
	return proto.EnumName(StringFilter_Type_name, int32(x))
}

func (StringFilter_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_da41641f55bff5df, []int{16, 0}
}

type GetMetricConfigurationRequest struct {
	MetricInfo           *Metric  `protobuf:"bytes,1,opt,name=metric_info,json=metricInfo,proto3" json:"metric_info,omitempty"`
	Scopes               []string `protobuf:"bytes,2,rep,name=scopes,proto3" json:"scopes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMetricConfigurationRequest) Reset()         { *m = GetMetricConfigurationRequest{} }
func (m *GetMetricConfigurationRequest) String() string { return proto.CompactTextString(m) }
func (*GetMetricConfigurationRequest) ProtoMessage()    {}
func (*GetMetricConfigurationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_da41641f55bff5df, []int{0}
}

func (m *GetMetricConfigurationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMetricConfigurationRequest.Unmarshal(m, b)
}
func (m *GetMetricConfigurationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMetricConfigurationRequest.Marshal(b, m, deterministic)
}
func (m *GetMetricConfigurationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMetricConfigurationRequest.Merge(m, src)
}
func (m *GetMetricConfigurationRequest) XXX_Size() int {
	return xxx_messageInfo_GetMetricConfigurationRequest.Size(m)
}
func (m *GetMetricConfigurationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMetricConfigurationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMetricConfigurationRequest proto.InternalMessageInfo

func (m *GetMetricConfigurationRequest) GetMetricInfo() *Metric {
	if m != nil {
		return m.MetricInfo
	}
	return nil
}

func (m *GetMetricConfigurationRequest) GetScopes() []string {
	if m != nil {
		return m.Scopes
	}
	return nil
}

type GetMetricConfigurationResponse struct {
	MetricConfig         string   `protobuf:"bytes,1,opt,name=metric_config,json=metricConfig,proto3" json:"metric_config,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMetricConfigurationResponse) Reset()         { *m = GetMetricConfigurationResponse{} }
func (m *GetMetricConfigurationResponse) String() string { return proto.CompactTextString(m) }
func (*GetMetricConfigurationResponse) ProtoMessage()    {}
func (*GetMetricConfigurationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_da41641f55bff5df, []int{1}
}

func (m *GetMetricConfigurationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMetricConfigurationResponse.Unmarshal(m, b)
}
func (m *GetMetricConfigurationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMetricConfigurationResponse.Marshal(b, m, deterministic)
}
func (m *GetMetricConfigurationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMetricConfigurationResponse.Merge(m, src)
}
func (m *GetMetricConfigurationResponse) XXX_Size() int {
	return xxx_messageInfo_GetMetricConfigurationResponse.Size(m)
}
func (m *GetMetricConfigurationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMetricConfigurationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetMetricConfigurationResponse proto.InternalMessageInfo

func (m *GetMetricConfigurationResponse) GetMetricConfig() string {
	if m != nil {
		return m.MetricConfig
	}
	return ""
}

type CreateINM struct {
	// ID is not required for creation
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Coefficient          float32  `protobuf:"fixed32,3,opt,name=Coefficient,proto3" json:"Coefficient,omitempty"`
	Scopes               []string `protobuf:"bytes,4,rep,name=scopes,proto3" json:"scopes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateINM) Reset()         { *m = CreateINM{} }
func (m *CreateINM) String() string { return proto.CompactTextString(m) }
func (*CreateINM) ProtoMessage()    {}
func (*CreateINM) Descriptor() ([]byte, []int) {
	return fileDescriptor_da41641f55bff5df, []int{2}
}

func (m *CreateINM) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateINM.Unmarshal(m, b)
}
func (m *CreateINM) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateINM.Marshal(b, m, deterministic)
}
func (m *CreateINM) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateINM.Merge(m, src)
}
func (m *CreateINM) XXX_Size() int {
	return xxx_messageInfo_CreateINM.Size(m)
}
func (m *CreateINM) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateINM.DiscardUnknown(m)
}

var xxx_messageInfo_CreateINM proto.InternalMessageInfo

func (m *CreateINM) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *CreateINM) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateINM) GetCoefficient() float32 {
	if m != nil {
		return m.Coefficient
	}
	return 0
}

func (m *CreateINM) GetScopes() []string {
	if m != nil {
		return m.Scopes
	}
	return nil
}

type CreateMetricIPS struct {
	// ID is not required for creation
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	NumCoreAttrId        string   `protobuf:"bytes,3,opt,name=num_core_attr_id,json=numCoreAttrId,proto3" json:"num_core_attr_id,omitempty"`
	CoreFactorAttrId     string   `protobuf:"bytes,4,opt,name=core_factor_attr_id,json=coreFactorAttrId,proto3" json:"core_factor_attr_id,omitempty"`
	BaseEqTypeId         string   `protobuf:"bytes,5,opt,name=base_eq_type_id,json=baseEqTypeId,proto3" json:"base_eq_type_id,omitempty"`
	Scopes               []string `protobuf:"bytes,6,rep,name=scopes,proto3" json:"scopes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateMetricIPS) Reset()         { *m = CreateMetricIPS{} }
func (m *CreateMetricIPS) String() string { return proto.CompactTextString(m) }
func (*CreateMetricIPS) ProtoMessage()    {}
func (*CreateMetricIPS) Descriptor() ([]byte, []int) {
	return fileDescriptor_da41641f55bff5df, []int{3}
}

func (m *CreateMetricIPS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateMetricIPS.Unmarshal(m, b)
}
func (m *CreateMetricIPS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateMetricIPS.Marshal(b, m, deterministic)
}
func (m *CreateMetricIPS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateMetricIPS.Merge(m, src)
}
func (m *CreateMetricIPS) XXX_Size() int {
	return xxx_messageInfo_CreateMetricIPS.Size(m)
}
func (m *CreateMetricIPS) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateMetricIPS.DiscardUnknown(m)
}

var xxx_messageInfo_CreateMetricIPS proto.InternalMessageInfo

func (m *CreateMetricIPS) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *CreateMetricIPS) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateMetricIPS) GetNumCoreAttrId() string {
	if m != nil {
		return m.NumCoreAttrId
	}
	return ""
}

func (m *CreateMetricIPS) GetCoreFactorAttrId() string {
	if m != nil {
		return m.CoreFactorAttrId
	}
	return ""
}

func (m *CreateMetricIPS) GetBaseEqTypeId() string {
	if m != nil {
		return m.BaseEqTypeId
	}
	return ""
}

func (m *CreateMetricIPS) GetScopes() []string {
	if m != nil {
		return m.Scopes
	}
	return nil
}

type CreateMetricSPS struct {
	// ID is not required for creation
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	NumCoreAttrId        string   `protobuf:"bytes,3,opt,name=num_core_attr_id,json=numCoreAttrId,proto3" json:"num_core_attr_id,omitempty"`
	CoreFactorAttrId     string   `protobuf:"bytes,4,opt,name=core_factor_attr_id,json=coreFactorAttrId,proto3" json:"core_factor_attr_id,omitempty"`
	BaseEqTypeId         string   `protobuf:"bytes,5,opt,name=base_eq_type_id,json=baseEqTypeId,proto3" json:"base_eq_type_id,omitempty"`
	Scopes               []string `protobuf:"bytes,6,rep,name=scopes,proto3" json:"scopes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateMetricSPS) Reset()         { *m = CreateMetricSPS{} }
func (m *CreateMetricSPS) String() string { return proto.CompactTextString(m) }
func (*CreateMetricSPS) ProtoMessage()    {}
func (*CreateMetricSPS) Descriptor() ([]byte, []int) {
	return fileDescriptor_da41641f55bff5df, []int{4}
}

func (m *CreateMetricSPS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateMetricSPS.Unmarshal(m, b)
}
func (m *CreateMetricSPS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateMetricSPS.Marshal(b, m, deterministic)
}
func (m *CreateMetricSPS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateMetricSPS.Merge(m, src)
}
func (m *CreateMetricSPS) XXX_Size() int {
	return xxx_messageInfo_CreateMetricSPS.Size(m)
}
func (m *CreateMetricSPS) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateMetricSPS.DiscardUnknown(m)
}

var xxx_messageInfo_CreateMetricSPS proto.InternalMessageInfo

func (m *CreateMetricSPS) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *CreateMetricSPS) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateMetricSPS) GetNumCoreAttrId() string {
	if m != nil {
		return m.NumCoreAttrId
	}
	return ""
}

func (m *CreateMetricSPS) GetCoreFactorAttrId() string {
	if m != nil {
		return m.CoreFactorAttrId
	}
	return ""
}

func (m *CreateMetricSPS) GetBaseEqTypeId() string {
	if m != nil {
		return m.BaseEqTypeId
	}
	return ""
}

func (m *CreateMetricSPS) GetScopes() []string {
	if m != nil {
		return m.Scopes
	}
	return nil
}

type CreateMetricACS struct {
	// ID is not required for creation
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	EqType               string   `protobuf:"bytes,3,opt,name=eq_type,json=eqType,proto3" json:"eq_type,omitempty"`
	AttributeName        string   `protobuf:"bytes,4,opt,name=attribute_name,json=attributeName,proto3" json:"attribute_name,omitempty"`
	Value                string   `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	Scopes               []string `protobuf:"bytes,6,rep,name=scopes,proto3" json:"scopes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateMetricACS) Reset()         { *m = CreateMetricACS{} }
func (m *CreateMetricACS) String() string { return proto.CompactTextString(m) }
func (*CreateMetricACS) ProtoMessage()    {}
func (*CreateMetricACS) Descriptor() ([]byte, []int) {
	return fileDescriptor_da41641f55bff5df, []int{5}
}

func (m *CreateMetricACS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateMetricACS.Unmarshal(m, b)
}
func (m *CreateMetricACS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateMetricACS.Marshal(b, m, deterministic)
}
func (m *CreateMetricACS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateMetricACS.Merge(m, src)
}
func (m *CreateMetricACS) XXX_Size() int {
	return xxx_messageInfo_CreateMetricACS.Size(m)
}
func (m *CreateMetricACS) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateMetricACS.DiscardUnknown(m)
}

var xxx_messageInfo_CreateMetricACS proto.InternalMessageInfo

func (m *CreateMetricACS) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *CreateMetricACS) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateMetricACS) GetEqType() string {
	if m != nil {
		return m.EqType
	}
	return ""
}

func (m *CreateMetricACS) GetAttributeName() string {
	if m != nil {
		return m.AttributeName
	}
	return ""
}

func (m *CreateMetricACS) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *CreateMetricACS) GetScopes() []string {
	if m != nil {
		return m.Scopes
	}
	return nil
}

type ListMetricRequest struct {
	Scopes               []string `protobuf:"bytes,1,rep,name=scopes,proto3" json:"scopes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListMetricRequest) Reset()         { *m = ListMetricRequest{} }
func (m *ListMetricRequest) String() string { return proto.CompactTextString(m) }
func (*ListMetricRequest) ProtoMessage()    {}
func (*ListMetricRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_da41641f55bff5df, []int{6}
}

func (m *ListMetricRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListMetricRequest.Unmarshal(m, b)
}
func (m *ListMetricRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListMetricRequest.Marshal(b, m, deterministic)
}
func (m *ListMetricRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListMetricRequest.Merge(m, src)
}
func (m *ListMetricRequest) XXX_Size() int {
	return xxx_messageInfo_ListMetricRequest.Size(m)
}
func (m *ListMetricRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListMetricRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListMetricRequest proto.InternalMessageInfo

func (m *ListMetricRequest) GetScopes() []string {
	if m != nil {
		return m.Scopes
	}
	return nil
}

type ListMetricResponse struct {
	Metrices             []*Metric `protobuf:"bytes,1,rep,name=metrices,proto3" json:"metrices,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ListMetricResponse) Reset()         { *m = ListMetricResponse{} }
func (m *ListMetricResponse) String() string { return proto.CompactTextString(m) }
func (*ListMetricResponse) ProtoMessage()    {}
func (*ListMetricResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_da41641f55bff5df, []int{7}
}

func (m *ListMetricResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListMetricResponse.Unmarshal(m, b)
}
func (m *ListMetricResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListMetricResponse.Marshal(b, m, deterministic)
}
func (m *ListMetricResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListMetricResponse.Merge(m, src)
}
func (m *ListMetricResponse) XXX_Size() int {
	return xxx_messageInfo_ListMetricResponse.Size(m)
}
func (m *ListMetricResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListMetricResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListMetricResponse proto.InternalMessageInfo

func (m *ListMetricResponse) GetMetrices() []*Metric {
	if m != nil {
		return m.Metrices
	}
	return nil
}

type Metric struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Metric) Reset()         { *m = Metric{} }
func (m *Metric) String() string { return proto.CompactTextString(m) }
func (*Metric) ProtoMessage()    {}
func (*Metric) Descriptor() ([]byte, []int) {
	return fileDescriptor_da41641f55bff5df, []int{8}
}

func (m *Metric) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Metric.Unmarshal(m, b)
}
func (m *Metric) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Metric.Marshal(b, m, deterministic)
}
func (m *Metric) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Metric.Merge(m, src)
}
func (m *Metric) XXX_Size() int {
	return xxx_messageInfo_Metric.Size(m)
}
func (m *Metric) XXX_DiscardUnknown() {
	xxx_messageInfo_Metric.DiscardUnknown(m)
}

var xxx_messageInfo_Metric proto.InternalMessageInfo

func (m *Metric) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Metric) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Metric) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type ListMetricTypeRequest struct {
	Scopes               []string `protobuf:"bytes,1,rep,name=scopes,proto3" json:"scopes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListMetricTypeRequest) Reset()         { *m = ListMetricTypeRequest{} }
func (m *ListMetricTypeRequest) String() string { return proto.CompactTextString(m) }
func (*ListMetricTypeRequest) ProtoMessage()    {}
func (*ListMetricTypeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_da41641f55bff5df, []int{9}
}

func (m *ListMetricTypeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListMetricTypeRequest.Unmarshal(m, b)
}
func (m *ListMetricTypeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListMetricTypeRequest.Marshal(b, m, deterministic)
}
func (m *ListMetricTypeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListMetricTypeRequest.Merge(m, src)
}
func (m *ListMetricTypeRequest) XXX_Size() int {
	return xxx_messageInfo_ListMetricTypeRequest.Size(m)
}
func (m *ListMetricTypeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListMetricTypeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListMetricTypeRequest proto.InternalMessageInfo

func (m *ListMetricTypeRequest) GetScopes() []string {
	if m != nil {
		return m.Scopes
	}
	return nil
}

type ListMetricTypeResponse struct {
	Types                []*MetricType `protobuf:"bytes,1,rep,name=types,proto3" json:"types,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ListMetricTypeResponse) Reset()         { *m = ListMetricTypeResponse{} }
func (m *ListMetricTypeResponse) String() string { return proto.CompactTextString(m) }
func (*ListMetricTypeResponse) ProtoMessage()    {}
func (*ListMetricTypeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_da41641f55bff5df, []int{10}
}

func (m *ListMetricTypeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListMetricTypeResponse.Unmarshal(m, b)
}
func (m *ListMetricTypeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListMetricTypeResponse.Marshal(b, m, deterministic)
}
func (m *ListMetricTypeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListMetricTypeResponse.Merge(m, src)
}
func (m *ListMetricTypeResponse) XXX_Size() int {
	return xxx_messageInfo_ListMetricTypeResponse.Size(m)
}
func (m *ListMetricTypeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListMetricTypeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListMetricTypeResponse proto.InternalMessageInfo

func (m *ListMetricTypeResponse) GetTypes() []*MetricType {
	if m != nil {
		return m.Types
	}
	return nil
}

type MetricType struct {
	Name                 string          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description          string          `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Href                 string          `protobuf:"bytes,3,opt,name=href,proto3" json:"href,omitempty"`
	TypeId               MetricType_Type `protobuf:"varint,4,opt,name=type_id,json=typeId,proto3,enum=v1.MetricType_Type" json:"type_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *MetricType) Reset()         { *m = MetricType{} }
func (m *MetricType) String() string { return proto.CompactTextString(m) }
func (*MetricType) ProtoMessage()    {}
func (*MetricType) Descriptor() ([]byte, []int) {
	return fileDescriptor_da41641f55bff5df, []int{11}
}

func (m *MetricType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricType.Unmarshal(m, b)
}
func (m *MetricType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricType.Marshal(b, m, deterministic)
}
func (m *MetricType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricType.Merge(m, src)
}
func (m *MetricType) XXX_Size() int {
	return xxx_messageInfo_MetricType.Size(m)
}
func (m *MetricType) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricType.DiscardUnknown(m)
}

var xxx_messageInfo_MetricType proto.InternalMessageInfo

func (m *MetricType) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MetricType) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *MetricType) GetHref() string {
	if m != nil {
		return m.Href
	}
	return ""
}

func (m *MetricType) GetTypeId() MetricType_Type {
	if m != nil {
		return m.TypeId
	}
	return MetricType_Unknown
}

type CreateMetricOPS struct {
	// ID is not required for creation
	ID                    string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name                  string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	NumCoreAttrId         string   `protobuf:"bytes,3,opt,name=num_core_attr_id,json=numCoreAttrId,proto3" json:"num_core_attr_id,omitempty"`
	NumCPUAttrId          string   `protobuf:"bytes,4,opt,name=numCPU_attr_id,json=numCPUAttrId,proto3" json:"numCPU_attr_id,omitempty"`
	CoreFactorAttrId      string   `protobuf:"bytes,5,opt,name=core_factor_attr_id,json=coreFactorAttrId,proto3" json:"core_factor_attr_id,omitempty"`
	StartEqTypeId         string   `protobuf:"bytes,6,opt,name=start_eq_type_id,json=startEqTypeId,proto3" json:"start_eq_type_id,omitempty"`
	BaseEqTypeId          string   `protobuf:"bytes,7,opt,name=base_eq_type_id,json=baseEqTypeId,proto3" json:"base_eq_type_id,omitempty"`
	AggerateLevelEqTypeId string   `protobuf:"bytes,8,opt,name=aggerateLevel_eq_type_id,json=aggerateLevelEqTypeId,proto3" json:"aggerateLevel_eq_type_id,omitempty"`
	EndEqTypeId           string   `protobuf:"bytes,9,opt,name=end_eq_type_id,json=endEqTypeId,proto3" json:"end_eq_type_id,omitempty"`
	Scopes                []string `protobuf:"bytes,10,rep,name=scopes,proto3" json:"scopes,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *CreateMetricOPS) Reset()         { *m = CreateMetricOPS{} }
func (m *CreateMetricOPS) String() string { return proto.CompactTextString(m) }
func (*CreateMetricOPS) ProtoMessage()    {}
func (*CreateMetricOPS) Descriptor() ([]byte, []int) {
	return fileDescriptor_da41641f55bff5df, []int{12}
}

func (m *CreateMetricOPS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateMetricOPS.Unmarshal(m, b)
}
func (m *CreateMetricOPS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateMetricOPS.Marshal(b, m, deterministic)
}
func (m *CreateMetricOPS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateMetricOPS.Merge(m, src)
}
func (m *CreateMetricOPS) XXX_Size() int {
	return xxx_messageInfo_CreateMetricOPS.Size(m)
}
func (m *CreateMetricOPS) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateMetricOPS.DiscardUnknown(m)
}

var xxx_messageInfo_CreateMetricOPS proto.InternalMessageInfo

func (m *CreateMetricOPS) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *CreateMetricOPS) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateMetricOPS) GetNumCoreAttrId() string {
	if m != nil {
		return m.NumCoreAttrId
	}
	return ""
}

func (m *CreateMetricOPS) GetNumCPUAttrId() string {
	if m != nil {
		return m.NumCPUAttrId
	}
	return ""
}

func (m *CreateMetricOPS) GetCoreFactorAttrId() string {
	if m != nil {
		return m.CoreFactorAttrId
	}
	return ""
}

func (m *CreateMetricOPS) GetStartEqTypeId() string {
	if m != nil {
		return m.StartEqTypeId
	}
	return ""
}

func (m *CreateMetricOPS) GetBaseEqTypeId() string {
	if m != nil {
		return m.BaseEqTypeId
	}
	return ""
}

func (m *CreateMetricOPS) GetAggerateLevelEqTypeId() string {
	if m != nil {
		return m.AggerateLevelEqTypeId
	}
	return ""
}

func (m *CreateMetricOPS) GetEndEqTypeId() string {
	if m != nil {
		return m.EndEqTypeId
	}
	return ""
}

func (m *CreateMetricOPS) GetScopes() []string {
	if m != nil {
		return m.Scopes
	}
	return nil
}

type CreateMetricNUP struct {
	// ID is not required for creation
	ID                    string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name                  string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	NumCoreAttrId         string   `protobuf:"bytes,3,opt,name=num_core_attr_id,json=numCoreAttrId,proto3" json:"num_core_attr_id,omitempty"`
	NumCPUAttrId          string   `protobuf:"bytes,4,opt,name=numCPU_attr_id,json=numCPUAttrId,proto3" json:"numCPU_attr_id,omitempty"`
	CoreFactorAttrId      string   `protobuf:"bytes,5,opt,name=core_factor_attr_id,json=coreFactorAttrId,proto3" json:"core_factor_attr_id,omitempty"`
	StartEqTypeId         string   `protobuf:"bytes,6,opt,name=start_eq_type_id,json=startEqTypeId,proto3" json:"start_eq_type_id,omitempty"`
	BaseEqTypeId          string   `protobuf:"bytes,7,opt,name=base_eq_type_id,json=baseEqTypeId,proto3" json:"base_eq_type_id,omitempty"`
	AggerateLevelEqTypeId string   `protobuf:"bytes,8,opt,name=aggerateLevel_eq_type_id,json=aggerateLevelEqTypeId,proto3" json:"aggerateLevel_eq_type_id,omitempty"`
	EndEqTypeId           string   `protobuf:"bytes,9,opt,name=end_eq_type_id,json=endEqTypeId,proto3" json:"end_eq_type_id,omitempty"`
	NumberOfUsers         uint32   `protobuf:"varint,10,opt,name=number_of_users,json=numberOfUsers,proto3" json:"number_of_users,omitempty"`
	Scopes                []string `protobuf:"bytes,11,rep,name=scopes,proto3" json:"scopes,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *CreateMetricNUP) Reset()         { *m = CreateMetricNUP{} }
func (m *CreateMetricNUP) String() string { return proto.CompactTextString(m) }
func (*CreateMetricNUP) ProtoMessage()    {}
func (*CreateMetricNUP) Descriptor() ([]byte, []int) {
	return fileDescriptor_da41641f55bff5df, []int{13}
}

func (m *CreateMetricNUP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateMetricNUP.Unmarshal(m, b)
}
func (m *CreateMetricNUP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateMetricNUP.Marshal(b, m, deterministic)
}
func (m *CreateMetricNUP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateMetricNUP.Merge(m, src)
}
func (m *CreateMetricNUP) XXX_Size() int {
	return xxx_messageInfo_CreateMetricNUP.Size(m)
}
func (m *CreateMetricNUP) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateMetricNUP.DiscardUnknown(m)
}

var xxx_messageInfo_CreateMetricNUP proto.InternalMessageInfo

func (m *CreateMetricNUP) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *CreateMetricNUP) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateMetricNUP) GetNumCoreAttrId() string {
	if m != nil {
		return m.NumCoreAttrId
	}
	return ""
}

func (m *CreateMetricNUP) GetNumCPUAttrId() string {
	if m != nil {
		return m.NumCPUAttrId
	}
	return ""
}

func (m *CreateMetricNUP) GetCoreFactorAttrId() string {
	if m != nil {
		return m.CoreFactorAttrId
	}
	return ""
}

func (m *CreateMetricNUP) GetStartEqTypeId() string {
	if m != nil {
		return m.StartEqTypeId
	}
	return ""
}

func (m *CreateMetricNUP) GetBaseEqTypeId() string {
	if m != nil {
		return m.BaseEqTypeId
	}
	return ""
}

func (m *CreateMetricNUP) GetAggerateLevelEqTypeId() string {
	if m != nil {
		return m.AggerateLevelEqTypeId
	}
	return ""
}

func (m *CreateMetricNUP) GetEndEqTypeId() string {
	if m != nil {
		return m.EndEqTypeId
	}
	return ""
}

func (m *CreateMetricNUP) GetNumberOfUsers() uint32 {
	if m != nil {
		return m.NumberOfUsers
	}
	return 0
}

func (m *CreateMetricNUP) GetScopes() []string {
	if m != nil {
		return m.Scopes
	}
	return nil
}

type ScopeFilter struct {
	Scopes               []string `protobuf:"bytes,1,rep,name=scopes,proto3" json:"scopes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScopeFilter) Reset()         { *m = ScopeFilter{} }
func (m *ScopeFilter) String() string { return proto.CompactTextString(m) }
func (*ScopeFilter) ProtoMessage()    {}
func (*ScopeFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_da41641f55bff5df, []int{14}
}

func (m *ScopeFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScopeFilter.Unmarshal(m, b)
}
func (m *ScopeFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScopeFilter.Marshal(b, m, deterministic)
}
func (m *ScopeFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScopeFilter.Merge(m, src)
}
func (m *ScopeFilter) XXX_Size() int {
	return xxx_messageInfo_ScopeFilter.Size(m)
}
func (m *ScopeFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_ScopeFilter.DiscardUnknown(m)
}

var xxx_messageInfo_ScopeFilter proto.InternalMessageInfo

func (m *ScopeFilter) GetScopes() []string {
	if m != nil {
		return m.Scopes
	}
	return nil
}

type AggregationFilter struct {
	// Not For metric means aggregation for a product should not exist for a given metric
	NotForMetric         string   `protobuf:"bytes,1,opt,name=NotForMetric,proto3" json:"NotForMetric,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AggregationFilter) Reset()         { *m = AggregationFilter{} }
func (m *AggregationFilter) String() string { return proto.CompactTextString(m) }
func (*AggregationFilter) ProtoMessage()    {}
func (*AggregationFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_da41641f55bff5df, []int{15}
}

func (m *AggregationFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AggregationFilter.Unmarshal(m, b)
}
func (m *AggregationFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AggregationFilter.Marshal(b, m, deterministic)
}
func (m *AggregationFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AggregationFilter.Merge(m, src)
}
func (m *AggregationFilter) XXX_Size() int {
	return xxx_messageInfo_AggregationFilter.Size(m)
}
func (m *AggregationFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_AggregationFilter.DiscardUnknown(m)
}

var xxx_messageInfo_AggregationFilter proto.InternalMessageInfo

func (m *AggregationFilter) GetNotForMetric() string {
	if m != nil {
		return m.NotForMetric
	}
	return ""
}

type StringFilter struct {
	FilteringOrder       int32             `protobuf:"varint,1,opt,name=filteringOrder,proto3" json:"filteringOrder,omitempty"`
	Filteringkey         string            `protobuf:"bytes,2,opt,name=filteringkey,proto3" json:"filteringkey,omitempty"`
	FilterType           StringFilter_Type `protobuf:"varint,3,opt,name=filter_type,json=filterType,proto3,enum=v1.StringFilter_Type" json:"filter_type,omitempty"`
	FilteringkeyMultiple []string          `protobuf:"bytes,4,rep,name=filteringkey_multiple,json=filteringkeyMultiple,proto3" json:"filteringkey_multiple,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *StringFilter) Reset()         { *m = StringFilter{} }
func (m *StringFilter) String() string { return proto.CompactTextString(m) }
func (*StringFilter) ProtoMessage()    {}
func (*StringFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_da41641f55bff5df, []int{16}
}

func (m *StringFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StringFilter.Unmarshal(m, b)
}
func (m *StringFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StringFilter.Marshal(b, m, deterministic)
}
func (m *StringFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StringFilter.Merge(m, src)
}
func (m *StringFilter) XXX_Size() int {
	return xxx_messageInfo_StringFilter.Size(m)
}
func (m *StringFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_StringFilter.DiscardUnknown(m)
}

var xxx_messageInfo_StringFilter proto.InternalMessageInfo

func (m *StringFilter) GetFilteringOrder() int32 {
	if m != nil {
		return m.FilteringOrder
	}
	return 0
}

func (m *StringFilter) GetFilteringkey() string {
	if m != nil {
		return m.Filteringkey
	}
	return ""
}

func (m *StringFilter) GetFilterType() StringFilter_Type {
	if m != nil {
		return m.FilterType
	}
	return StringFilter_REGEX
}

func (m *StringFilter) GetFilteringkeyMultiple() []string {
	if m != nil {
		return m.FilteringkeyMultiple
	}
	return nil
}

func init() {
	proto.RegisterEnum("v1.SortOrder", SortOrder_name, SortOrder_value)
	proto.RegisterEnum("v1.DataTypes", DataTypes_name, DataTypes_value)
	proto.RegisterEnum("v1.MetricType_Type", MetricType_Type_name, MetricType_Type_value)
	proto.RegisterEnum("v1.StringFilter_Type", StringFilter_Type_name, StringFilter_Type_value)
	proto.RegisterType((*GetMetricConfigurationRequest)(nil), "v1.GetMetricConfigurationRequest")
	proto.RegisterType((*GetMetricConfigurationResponse)(nil), "v1.GetMetricConfigurationResponse")
	proto.RegisterType((*CreateINM)(nil), "v1.CreateINM")
	proto.RegisterType((*CreateMetricIPS)(nil), "v1.CreateMetricIPS")
	proto.RegisterType((*CreateMetricSPS)(nil), "v1.CreateMetricSPS")
	proto.RegisterType((*CreateMetricACS)(nil), "v1.CreateMetricACS")
	proto.RegisterType((*ListMetricRequest)(nil), "v1.ListMetricRequest")
	proto.RegisterType((*ListMetricResponse)(nil), "v1.ListMetricResponse")
	proto.RegisterType((*Metric)(nil), "v1.Metric")
	proto.RegisterType((*ListMetricTypeRequest)(nil), "v1.ListMetricTypeRequest")
	proto.RegisterType((*ListMetricTypeResponse)(nil), "v1.ListMetricTypeResponse")
	proto.RegisterType((*MetricType)(nil), "v1.MetricType")
	proto.RegisterType((*CreateMetricOPS)(nil), "v1.CreateMetricOPS")
	proto.RegisterType((*CreateMetricNUP)(nil), "v1.CreateMetricNUP")
	proto.RegisterType((*ScopeFilter)(nil), "v1.ScopeFilter")
	proto.RegisterType((*AggregationFilter)(nil), "v1.AggregationFilter")
	proto.RegisterType((*StringFilter)(nil), "v1.StringFilter")
}

func init() {
	proto.RegisterFile("metric.proto", fileDescriptor_da41641f55bff5df)
}

var fileDescriptor_da41641f55bff5df = []byte{
	// 1346 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x57, 0x4b, 0x6f, 0x23, 0x45,
	0x10, 0xf6, 0x8c, 0x5f, 0x71, 0x39, 0x76, 0x66, 0x7b, 0xf3, 0x5a, 0xb3, 0xbb, 0x84, 0xd9, 0x57,
	0x14, 0x76, 0x63, 0x25, 0x2b, 0x58, 0x84, 0x00, 0xc9, 0x76, 0x1e, 0x8c, 0xd8, 0x4c, 0x8c, 0x1d,
	0x03, 0xe2, 0x32, 0x9a, 0x8c, 0xdb, 0x66, 0x58, 0xbb, 0xc7, 0xdb, 0xd3, 0x36, 0xca, 0x01, 0x84,
	0xb8, 0x70, 0x0f, 0x07, 0xf8, 0x31, 0xdc, 0xf8, 0x05, 0x88, 0x7f, 0x80, 0xe0, 0x4f, 0xe4, 0x84,
	0xfa, 0x11, 0x67, 0xc6, 0xb1, 0x43, 0x40, 0x7b, 0x42, 0xdc, 0x7a, 0xaa, 0xaa, 0xeb, 0xab, 0xaf,
	0xba, 0xbb, 0xaa, 0x06, 0xe6, 0xfb, 0x98, 0x51, 0xdf, 0xdb, 0x1c, 0xd0, 0x80, 0x05, 0x48, 0x1f,
	0x6d, 0x95, 0x6e, 0x77, 0x83, 0xa0, 0xdb, 0xc3, 0x65, 0x77, 0xe0, 0x97, 0x5d, 0x42, 0x02, 0xe6,
	0x32, 0x3f, 0x20, 0xa1, 0xb4, 0x28, 0xad, 0x8c, 0xdc, 0x9e, 0xdf, 0x76, 0x19, 0x2e, 0x9f, 0x2f,
	0xa4, 0xc2, 0xfc, 0x1a, 0xee, 0xec, 0x63, 0x76, 0x20, 0xbc, 0xd5, 0x02, 0xd2, 0xf1, 0xbb, 0x43,
	0x2a, 0x76, 0x36, 0xf0, 0xcb, 0x21, 0x0e, 0x19, 0x7a, 0x13, 0xf2, 0x12, 0xcb, 0xf1, 0x49, 0x27,
	0x58, 0xd5, 0xd6, 0xb4, 0xf5, 0xfc, 0x36, 0x6c, 0x8e, 0xb6, 0x36, 0xe5, 0xa6, 0x06, 0x48, 0xb5,
	0x45, 0x3a, 0x01, 0x2a, 0x43, 0x26, 0xf4, 0x82, 0x01, 0x0e, 0x57, 0xf5, 0xb5, 0xe4, 0x7a, 0xae,
	0xba, 0x72, 0x56, 0xcd, 0x9e, 0x6a, 0xa9, 0x39, 0xcd, 0xd0, 0xce, 0xaa, 0x70, 0xaa, 0x65, 0xcd,
	0x34, 0x4d, 0xfe, 0xa4, 0x25, 0x1b, 0xca, 0xcc, 0xdc, 0x85, 0xbb, 0xb3, 0xe0, 0xc3, 0x41, 0x40,
	0x42, 0x8c, 0xee, 0x41, 0x41, 0xe1, 0x7b, 0x42, 0x2f, 0x22, 0xc8, 0x35, 0x54, 0x02, 0xe4, 0x1e,
	0xf3, 0x47, 0x0d, 0x72, 0x35, 0x8a, 0x5d, 0x86, 0x2d, 0xfb, 0x00, 0x15, 0x41, 0xb7, 0x76, 0x94,
	0x9d, 0x6e, 0xed, 0xa0, 0xd7, 0x20, 0x65, 0xbb, 0x7d, 0xbc, 0xaa, 0x73, 0x49, 0x35, 0x7b, 0x56,
	0x4d, 0x51, 0xdd, 0xd0, 0x1a, 0x42, 0x88, 0x1e, 0x43, 0xbe, 0x16, 0xe0, 0x4e, 0xc7, 0xf7, 0x7c,
	0x4c, 0xd8, 0x6a, 0x72, 0x4d, 0x5b, 0xd7, 0xab, 0x70, 0x56, 0xcd, 0x42, 0xfa, 0xfd, 0x44, 0x22,
	0x91, 0x68, 0x44, 0xd5, 0x11, 0x82, 0xa9, 0xeb, 0x11, 0xfc, 0x53, 0x83, 0x05, 0x19, 0x99, 0x24,
	0x69, 0xd5, 0x9b, 0x97, 0xe2, 0x43, 0xd1, 0xf8, 0x54, 0x58, 0x8f, 0xc0, 0x20, 0xc3, 0xbe, 0xe3,
	0x05, 0x14, 0x3b, 0x2e, 0x63, 0xd4, 0xf1, 0xdb, 0x22, 0xb6, 0x5c, 0xa3, 0x40, 0x86, 0xfd, 0x5a,
	0x40, 0x71, 0x85, 0x31, 0x6a, 0xb5, 0xd1, 0x13, 0xb8, 0x29, 0x8c, 0x3a, 0xae, 0xc7, 0x02, 0x3a,
	0xb6, 0x4d, 0x09, 0x5b, 0x83, 0xab, 0xf6, 0x84, 0x46, 0x99, 0x3f, 0x80, 0x85, 0x63, 0x37, 0xc4,
	0x0e, 0x7e, 0xe9, 0xb0, 0x93, 0x01, 0xe6, 0xa6, 0x69, 0x99, 0x50, 0x2e, 0xde, 0x7d, 0x79, 0x74,
	0x32, 0xc0, 0x56, 0x3b, 0xc2, 0x33, 0xf3, 0xef, 0x78, 0x36, 0xff, 0xa3, 0x3c, 0x7f, 0x9e, 0xe0,
	0x59, 0xa9, 0x4d, 0xe5, 0x49, 0x22, 0x3c, 0xf9, 0x1a, 0xad, 0x40, 0x56, 0x85, 0xa2, 0xe8, 0x65,
	0xb0, 0x88, 0x01, 0x3d, 0x80, 0x22, 0xe7, 0xe2, 0x1f, 0x0f, 0x19, 0x76, 0xc4, 0x36, 0x49, 0xa9,
	0x30, 0x96, 0x8a, 0x3c, 0x2d, 0x42, 0x7a, 0xe4, 0xf6, 0x86, 0x58, 0xb1, 0x90, 0x1f, 0xff, 0x3c,
	0xfc, 0x2a, 0xdc, 0x78, 0xee, 0x87, 0xea, 0xc1, 0x9d, 0x3f, 0xf1, 0x27, 0x63, 0x2f, 0x9a, 0xf0,
	0xb2, 0x74, 0x56, 0x4d, 0x9f, 0x6a, 0xfa, 0xdc, 0x0c, 0x1f, 0xef, 0x01, 0x8a, 0xfa, 0x50, 0xef,
	0xf4, 0x21, 0xcc, 0xc9, 0x27, 0xa9, 0xdc, 0xc4, 0x8b, 0xc4, 0x58, 0x67, 0x36, 0x20, 0x23, 0x65,
	0x3c, 0x4d, 0x22, 0x1f, 0x32, 0x71, 0x62, 0x3d, 0x35, 0x75, 0x6b, 0x90, 0x6f, 0xe3, 0xd0, 0xa3,
	0xfe, 0x80, 0x17, 0x06, 0x95, 0xbe, 0xa8, 0xc8, 0xfc, 0x10, 0x96, 0x2e, 0x22, 0xe2, 0x59, 0x3d,
	0x67, 0x56, 0x9e, 0x60, 0xf6, 0xb7, 0xf9, 0xf9, 0x00, 0x96, 0x27, 0x3d, 0x29, 0x7e, 0xf7, 0x21,
	0xcd, 0x23, 0x3c, 0x27, 0x57, 0xbc, 0x20, 0x27, 0xcc, 0xa4, 0xd2, 0xfc, 0x5e, 0x07, 0xb8, 0x90,
	0x8e, 0xe9, 0x68, 0xb3, 0xe9, 0xe8, 0x97, 0xe8, 0xf0, 0x5d, 0x5f, 0x50, 0xdc, 0x51, 0x4c, 0xc5,
	0x1a, 0x3d, 0x86, 0xec, 0xf9, 0x3d, 0xe6, 0xf7, 0xa3, 0xb8, 0x7d, 0x33, 0x1e, 0xc0, 0xa6, 0x88,
	0x22, 0xc3, 0xc4, 0xb5, 0x36, 0xbf, 0xd5, 0x20, 0x25, 0x02, 0xc8, 0x43, 0xb6, 0x45, 0x5e, 0x90,
	0xe0, 0x2b, 0x62, 0x24, 0xd0, 0x22, 0x18, 0x87, 0xd4, 0xf5, 0x7a, 0xd8, 0xa9, 0xd3, 0xc0, 0xc3,
	0x61, 0x18, 0x50, 0x43, 0x43, 0x45, 0x00, 0x25, 0xb5, 0x5b, 0x75, 0x43, 0x47, 0x37, 0xa0, 0xd0,
	0xac, 0xec, 0x47, 0x4c, 0x92, 0xdc, 0x8b, 0x55, 0x3d, 0x70, 0xea, 0x9f, 0xb4, 0x8c, 0x14, 0x32,
	0x60, 0x9e, 0xbf, 0x31, 0xa7, 0x16, 0x0c, 0x09, 0xc3, 0xd4, 0x48, 0xa3, 0x9b, 0xb0, 0x60, 0x91,
	0x90, 0xb9, 0xc4, 0xc3, 0x8e, 0x3d, 0xec, 0x1f, 0x63, 0x6a, 0x64, 0xcc, 0xd3, 0x64, 0xfc, 0xa1,
	0x1c, 0xbe, 0xea, 0x82, 0x70, 0x1f, 0x8a, 0x5c, 0x50, 0x6f, 0x4d, 0xd4, 0x82, 0x79, 0x29, 0xbd,
	0xba, 0x6c, 0xa4, 0x67, 0x94, 0x8d, 0x47, 0x60, 0x84, 0xcc, 0xa5, 0x2c, 0x5a, 0x37, 0x32, 0x12,
	0x5d, 0xc8, 0xc7, 0x85, 0x63, 0x4a, 0x7d, 0xc9, 0x4e, 0xa9, 0x2f, 0xcf, 0x60, 0xd5, 0xed, 0x76,
	0x31, 0x75, 0x19, 0x7e, 0x8e, 0x47, 0xb8, 0x17, 0xb5, 0x9f, 0x13, 0xf6, 0x4b, 0x31, 0xfd, 0x78,
	0xe3, 0x3d, 0x28, 0x62, 0xd2, 0x8e, 0x9a, 0xe7, 0xe4, 0x45, 0xc1, 0xa4, 0x3d, 0xa5, 0x7a, 0xc1,
	0xf5, 0xae, 0xf7, 0x2f, 0x13, 0x87, 0x62, 0xb7, 0xea, 0xff, 0x1f, 0xca, 0x2b, 0x3f, 0x94, 0x05,
	0x22, 0x1e, 0x81, 0x13, 0x74, 0x9c, 0x61, 0x88, 0x29, 0x3f, 0x1d, 0x6d, 0xbd, 0x20, 0x06, 0x8f,
	0x0d, 0x7d, 0x2d, 0x21, 0x72, 0x76, 0x8c, 0xe9, 0x61, 0xa7, 0xc5, 0xb5, 0x91, 0x53, 0xcc, 0x5f,
	0xef, 0x14, 0x1f, 0x40, 0xbe, 0xc9, 0x57, 0x7b, 0x7e, 0x8f, 0x61, 0x8a, 0x96, 0xe3, 0x45, 0x6e,
	0x6c, 0xf6, 0x0c, 0x6e, 0x54, 0xba, 0x5d, 0x8a, 0xbb, 0x62, 0xa0, 0x52, 0xc6, 0x26, 0xcc, 0xdb,
	0x01, 0xdb, 0x0b, 0xa8, 0xbc, 0x00, 0xe7, 0xd3, 0x54, 0x54, 0x66, 0xfe, 0xae, 0xc1, 0x7c, 0x93,
	0x51, 0x9f, 0x74, 0xd5, 0xa6, 0x87, 0x50, 0xec, 0x88, 0x95, 0x4f, 0xba, 0x87, 0xb4, 0x8d, 0xa9,
	0xd8, 0x96, 0x6e, 0x4c, 0x48, 0xb9, 0xf3, 0xb1, 0xe4, 0x05, 0x3e, 0x51, 0x57, 0x28, 0x26, 0x43,
	0x6f, 0x43, 0x5e, 0x7e, 0x5f, 0x34, 0xc3, 0xe2, 0xf6, 0x12, 0x2f, 0x66, 0x51, 0x48, 0x59, 0xce,
	0x40, 0x5a, 0x8a, 0x4a, 0xf6, 0x14, 0x96, 0xa2, 0x7e, 0x9c, 0xfe, 0xb0, 0xc7, 0xfc, 0x41, 0x0f,
	0xcb, 0x41, 0xac, 0xb1, 0x18, 0x55, 0x1e, 0x28, 0x9d, 0x79, 0x4b, 0x95, 0xc1, 0x1c, 0xa4, 0x1b,
	0xbb, 0xfb, 0xbb, 0x9f, 0x19, 0x09, 0x94, 0x01, 0x7d, 0xf7, 0x63, 0x43, 0xdb, 0x78, 0x0b, 0x72,
	0xcd, 0x80, 0x32, 0x19, 0x78, 0x16, 0x92, 0x95, 0x66, 0xcd, 0x48, 0xf0, 0x85, 0x1b, 0x7a, 0x46,
	0x02, 0xcd, 0x41, 0x6a, 0x67, 0xb7, 0x59, 0x33, 0x34, 0xbe, 0xe2, 0xc5, 0xd9, 0xd0, 0x4a, 0xba,
	0xa1, 0x6d, 0xbc, 0x03, 0xb9, 0x1d, 0x97, 0xb9, 0xdc, 0x6b, 0x28, 0xaa, 0xab, 0xfd, 0x91, 0x7d,
	0xf8, 0xa9, 0x6d, 0x24, 0x10, 0x40, 0xa6, 0x79, 0xd4, 0xb0, 0xec, 0x7d, 0x43, 0xe3, 0x6e, 0x2c,
	0xfb, 0xc8, 0xd0, 0x39, 0xf0, 0xde, 0xf3, 0xc3, 0xca, 0x91, 0x91, 0xdc, 0xfe, 0x35, 0x0b, 0x05,
	0x35, 0x1b, 0x61, 0x3a, 0xf2, 0x3d, 0x8c, 0x5a, 0x30, 0x7f, 0xd1, 0x6c, 0x70, 0x88, 0x44, 0x16,
	0x2e, 0xb5, 0xe7, 0xd2, 0xf2, 0xa4, 0x58, 0x76, 0x24, 0x73, 0xf9, 0xbb, 0xdf, 0xfe, 0xf8, 0x41,
	0x37, 0x50, 0x51, 0xcc, 0xfc, 0xa3, 0xad, 0xb2, 0xec, 0xb1, 0x08, 0x43, 0x31, 0xde, 0xc3, 0xd0,
	0xad, 0xb8, 0x87, 0x48, 0x87, 0x2c, 0x95, 0xa6, 0xa9, 0x14, 0xc0, 0x6d, 0x01, 0xb0, 0x8c, 0x16,
	0xe3, 0x00, 0x65, 0xd1, 0xea, 0x10, 0x81, 0x7b, 0xb1, 0xfa, 0x2e, 0x7a, 0xc8, 0xb8, 0x6b, 0x34,
	0x99, 0x4b, 0xda, 0x2e, 0x6d, 0x23, 0xd1, 0xa7, 0x26, 0x1a, 0x41, 0x69, 0x9a, 0xd0, 0xbc, 0x23,
	0xe0, 0x56, 0x4c, 0x34, 0x01, 0x17, 0x0c, 0xc2, 0x77, 0xb5, 0x0d, 0x14, 0xc0, 0x9d, 0xcb, 0x78,
	0x76, 0xab, 0x3e, 0x1b, 0xc9, 0x6e, 0xd5, 0x4b, 0xd3, 0x84, 0xe6, 0x7d, 0x81, 0x74, 0xd7, 0xbc,
	0x35, 0x89, 0x24, 0xfb, 0x20, 0x19, 0x0e, 0x38, 0xe0, 0x0b, 0x58, 0x8b, 0x4d, 0xb4, 0x95, 0xfd,
	0x6b, 0xb0, 0x6b, 0x4e, 0x63, 0xd7, 0xbc, 0x82, 0x5d, 0x28, 0xd9, 0x61, 0x28, 0xc5, 0x7e, 0x13,
	0xaa, 0x07, 0xf5, 0xd1, 0x70, 0x36, 0x8c, 0x35, 0x0d, 0xc6, 0xba, 0x02, 0xc6, 0x97, 0x30, 0x5f,
	0xc2, 0xeb, 0xb1, 0xe9, 0x95, 0x31, 0xaa, 0xfa, 0xf8, 0x6c, 0xac, 0x4a, 0x6d, 0x0a, 0x56, 0xa5,
	0x36, 0x1b, 0xcb, 0xf5, 0x04, 0x96, 0x0b, 0x66, 0x2c, 0x3a, 0x35, 0x22, 0xc8, 0x09, 0x61, 0x0c,
	0x57, 0xb8, 0xf0, 0x6c, 0xd9, 0x07, 0xa5, 0xf8, 0xe7, 0x6c, 0x3a, 0xa4, 0xcf, 0x21, 0xbe, 0x81,
	0xe5, 0xe9, 0xbf, 0x8f, 0xe8, 0x0d, 0xee, 0xe7, 0xca, 0x3f, 0xdb, 0x92, 0x79, 0x95, 0x89, 0x7a,
	0x02, 0x0a, 0x1f, 0x2d, 0x4d, 0xe0, 0xcb, 0x7f, 0xd1, 0x6a, 0xea, 0x73, 0x7d, 0xb4, 0x75, 0x9c,
	0x11, 0xbf, 0xd2, 0x4f, 0xff, 0x0a, 0x00, 0x00, 0xff, 0xff, 0x57, 0x80, 0x1f, 0x37, 0x95, 0x0f,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MetricServiceClient is the client API for MetricService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MetricServiceClient interface {
	// ListMetrices
	ListMetrices(ctx context.Context, in *ListMetricRequest, opts ...grpc.CallOption) (*ListMetricResponse, error)
	// ListMetricType
	ListMetricType(ctx context.Context, in *ListMetricTypeRequest, opts ...grpc.CallOption) (*ListMetricTypeResponse, error)
	// CreateMetricOracleProcessorStandard will create an oracle.processor.standard metric
	CreateMetricOracleProcessorStandard(ctx context.Context, in *CreateMetricOPS, opts ...grpc.CallOption) (*CreateMetricOPS, error)
	// CreateMetricOracleNUPStandard will create an oracle.nup.standard metric
	CreateMetricOracleNUPStandard(ctx context.Context, in *CreateMetricNUP, opts ...grpc.CallOption) (*CreateMetricNUP, error)
	// CreateMetricSAGProcessorStandard will create an sag.processor.standard metric
	CreateMetricSAGProcessorStandard(ctx context.Context, in *CreateMetricSPS, opts ...grpc.CallOption) (*CreateMetricSPS, error)
	// CreateMetricIBMPvuStandard will create an IBM.pvu.standard metric
	CreateMetricIBMPvuStandard(ctx context.Context, in *CreateMetricIPS, opts ...grpc.CallOption) (*CreateMetricIPS, error)
	// CreateMetricAttrCounterStandard will create an IBM.pvu.standard metric
	CreateMetricAttrCounterStandard(ctx context.Context, in *CreateMetricACS, opts ...grpc.CallOption) (*CreateMetricACS, error)
	// CreateMetricInstanceNumberStandard will create an instance.number.standard metric
	CreateMetricInstanceNumberStandard(ctx context.Context, in *CreateINM, opts ...grpc.CallOption) (*CreateINM, error)
	//GetMetricConfiguration will get configuration of a metric
	GetMetricConfiguration(ctx context.Context, in *GetMetricConfigurationRequest, opts ...grpc.CallOption) (*GetMetricConfigurationResponse, error)
}

type metricServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMetricServiceClient(cc grpc.ClientConnInterface) MetricServiceClient {
	return &metricServiceClient{cc}
}

func (c *metricServiceClient) ListMetrices(ctx context.Context, in *ListMetricRequest, opts ...grpc.CallOption) (*ListMetricResponse, error) {
	out := new(ListMetricResponse)
	err := c.cc.Invoke(ctx, "/v1.MetricService/ListMetrices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metricServiceClient) ListMetricType(ctx context.Context, in *ListMetricTypeRequest, opts ...grpc.CallOption) (*ListMetricTypeResponse, error) {
	out := new(ListMetricTypeResponse)
	err := c.cc.Invoke(ctx, "/v1.MetricService/ListMetricType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metricServiceClient) CreateMetricOracleProcessorStandard(ctx context.Context, in *CreateMetricOPS, opts ...grpc.CallOption) (*CreateMetricOPS, error) {
	out := new(CreateMetricOPS)
	err := c.cc.Invoke(ctx, "/v1.MetricService/CreateMetricOracleProcessorStandard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metricServiceClient) CreateMetricOracleNUPStandard(ctx context.Context, in *CreateMetricNUP, opts ...grpc.CallOption) (*CreateMetricNUP, error) {
	out := new(CreateMetricNUP)
	err := c.cc.Invoke(ctx, "/v1.MetricService/CreateMetricOracleNUPStandard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metricServiceClient) CreateMetricSAGProcessorStandard(ctx context.Context, in *CreateMetricSPS, opts ...grpc.CallOption) (*CreateMetricSPS, error) {
	out := new(CreateMetricSPS)
	err := c.cc.Invoke(ctx, "/v1.MetricService/CreateMetricSAGProcessorStandard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metricServiceClient) CreateMetricIBMPvuStandard(ctx context.Context, in *CreateMetricIPS, opts ...grpc.CallOption) (*CreateMetricIPS, error) {
	out := new(CreateMetricIPS)
	err := c.cc.Invoke(ctx, "/v1.MetricService/CreateMetricIBMPvuStandard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metricServiceClient) CreateMetricAttrCounterStandard(ctx context.Context, in *CreateMetricACS, opts ...grpc.CallOption) (*CreateMetricACS, error) {
	out := new(CreateMetricACS)
	err := c.cc.Invoke(ctx, "/v1.MetricService/CreateMetricAttrCounterStandard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metricServiceClient) CreateMetricInstanceNumberStandard(ctx context.Context, in *CreateINM, opts ...grpc.CallOption) (*CreateINM, error) {
	out := new(CreateINM)
	err := c.cc.Invoke(ctx, "/v1.MetricService/CreateMetricInstanceNumberStandard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metricServiceClient) GetMetricConfiguration(ctx context.Context, in *GetMetricConfigurationRequest, opts ...grpc.CallOption) (*GetMetricConfigurationResponse, error) {
	out := new(GetMetricConfigurationResponse)
	err := c.cc.Invoke(ctx, "/v1.MetricService/GetMetricConfiguration", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MetricServiceServer is the server API for MetricService service.
type MetricServiceServer interface {
	// ListMetrices
	ListMetrices(context.Context, *ListMetricRequest) (*ListMetricResponse, error)
	// ListMetricType
	ListMetricType(context.Context, *ListMetricTypeRequest) (*ListMetricTypeResponse, error)
	// CreateMetricOracleProcessorStandard will create an oracle.processor.standard metric
	CreateMetricOracleProcessorStandard(context.Context, *CreateMetricOPS) (*CreateMetricOPS, error)
	// CreateMetricOracleNUPStandard will create an oracle.nup.standard metric
	CreateMetricOracleNUPStandard(context.Context, *CreateMetricNUP) (*CreateMetricNUP, error)
	// CreateMetricSAGProcessorStandard will create an sag.processor.standard metric
	CreateMetricSAGProcessorStandard(context.Context, *CreateMetricSPS) (*CreateMetricSPS, error)
	// CreateMetricIBMPvuStandard will create an IBM.pvu.standard metric
	CreateMetricIBMPvuStandard(context.Context, *CreateMetricIPS) (*CreateMetricIPS, error)
	// CreateMetricAttrCounterStandard will create an IBM.pvu.standard metric
	CreateMetricAttrCounterStandard(context.Context, *CreateMetricACS) (*CreateMetricACS, error)
	// CreateMetricInstanceNumberStandard will create an instance.number.standard metric
	CreateMetricInstanceNumberStandard(context.Context, *CreateINM) (*CreateINM, error)
	//GetMetricConfiguration will get configuration of a metric
	GetMetricConfiguration(context.Context, *GetMetricConfigurationRequest) (*GetMetricConfigurationResponse, error)
}

// UnimplementedMetricServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMetricServiceServer struct {
}

func (*UnimplementedMetricServiceServer) ListMetrices(ctx context.Context, req *ListMetricRequest) (*ListMetricResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListMetrices not implemented")
}
func (*UnimplementedMetricServiceServer) ListMetricType(ctx context.Context, req *ListMetricTypeRequest) (*ListMetricTypeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListMetricType not implemented")
}
func (*UnimplementedMetricServiceServer) CreateMetricOracleProcessorStandard(ctx context.Context, req *CreateMetricOPS) (*CreateMetricOPS, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMetricOracleProcessorStandard not implemented")
}
func (*UnimplementedMetricServiceServer) CreateMetricOracleNUPStandard(ctx context.Context, req *CreateMetricNUP) (*CreateMetricNUP, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMetricOracleNUPStandard not implemented")
}
func (*UnimplementedMetricServiceServer) CreateMetricSAGProcessorStandard(ctx context.Context, req *CreateMetricSPS) (*CreateMetricSPS, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMetricSAGProcessorStandard not implemented")
}
func (*UnimplementedMetricServiceServer) CreateMetricIBMPvuStandard(ctx context.Context, req *CreateMetricIPS) (*CreateMetricIPS, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMetricIBMPvuStandard not implemented")
}
func (*UnimplementedMetricServiceServer) CreateMetricAttrCounterStandard(ctx context.Context, req *CreateMetricACS) (*CreateMetricACS, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMetricAttrCounterStandard not implemented")
}
func (*UnimplementedMetricServiceServer) CreateMetricInstanceNumberStandard(ctx context.Context, req *CreateINM) (*CreateINM, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMetricInstanceNumberStandard not implemented")
}
func (*UnimplementedMetricServiceServer) GetMetricConfiguration(ctx context.Context, req *GetMetricConfigurationRequest) (*GetMetricConfigurationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMetricConfiguration not implemented")
}

func RegisterMetricServiceServer(s *grpc.Server, srv MetricServiceServer) {
	s.RegisterService(&_MetricService_serviceDesc, srv)
}

func _MetricService_ListMetrices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListMetricRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetricServiceServer).ListMetrices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.MetricService/ListMetrices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetricServiceServer).ListMetrices(ctx, req.(*ListMetricRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetricService_ListMetricType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListMetricTypeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetricServiceServer).ListMetricType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.MetricService/ListMetricType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetricServiceServer).ListMetricType(ctx, req.(*ListMetricTypeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetricService_CreateMetricOracleProcessorStandard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateMetricOPS)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetricServiceServer).CreateMetricOracleProcessorStandard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.MetricService/CreateMetricOracleProcessorStandard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetricServiceServer).CreateMetricOracleProcessorStandard(ctx, req.(*CreateMetricOPS))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetricService_CreateMetricOracleNUPStandard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateMetricNUP)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetricServiceServer).CreateMetricOracleNUPStandard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.MetricService/CreateMetricOracleNUPStandard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetricServiceServer).CreateMetricOracleNUPStandard(ctx, req.(*CreateMetricNUP))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetricService_CreateMetricSAGProcessorStandard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateMetricSPS)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetricServiceServer).CreateMetricSAGProcessorStandard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.MetricService/CreateMetricSAGProcessorStandard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetricServiceServer).CreateMetricSAGProcessorStandard(ctx, req.(*CreateMetricSPS))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetricService_CreateMetricIBMPvuStandard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateMetricIPS)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetricServiceServer).CreateMetricIBMPvuStandard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.MetricService/CreateMetricIBMPvuStandard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetricServiceServer).CreateMetricIBMPvuStandard(ctx, req.(*CreateMetricIPS))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetricService_CreateMetricAttrCounterStandard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateMetricACS)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetricServiceServer).CreateMetricAttrCounterStandard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.MetricService/CreateMetricAttrCounterStandard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetricServiceServer).CreateMetricAttrCounterStandard(ctx, req.(*CreateMetricACS))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetricService_CreateMetricInstanceNumberStandard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateINM)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetricServiceServer).CreateMetricInstanceNumberStandard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.MetricService/CreateMetricInstanceNumberStandard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetricServiceServer).CreateMetricInstanceNumberStandard(ctx, req.(*CreateINM))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetricService_GetMetricConfiguration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMetricConfigurationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetricServiceServer).GetMetricConfiguration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.MetricService/GetMetricConfiguration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetricServiceServer).GetMetricConfiguration(ctx, req.(*GetMetricConfigurationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MetricService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.MetricService",
	HandlerType: (*MetricServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListMetrices",
			Handler:    _MetricService_ListMetrices_Handler,
		},
		{
			MethodName: "ListMetricType",
			Handler:    _MetricService_ListMetricType_Handler,
		},
		{
			MethodName: "CreateMetricOracleProcessorStandard",
			Handler:    _MetricService_CreateMetricOracleProcessorStandard_Handler,
		},
		{
			MethodName: "CreateMetricOracleNUPStandard",
			Handler:    _MetricService_CreateMetricOracleNUPStandard_Handler,
		},
		{
			MethodName: "CreateMetricSAGProcessorStandard",
			Handler:    _MetricService_CreateMetricSAGProcessorStandard_Handler,
		},
		{
			MethodName: "CreateMetricIBMPvuStandard",
			Handler:    _MetricService_CreateMetricIBMPvuStandard_Handler,
		},
		{
			MethodName: "CreateMetricAttrCounterStandard",
			Handler:    _MetricService_CreateMetricAttrCounterStandard_Handler,
		},
		{
			MethodName: "CreateMetricInstanceNumberStandard",
			Handler:    _MetricService_CreateMetricInstanceNumberStandard_Handler,
		},
		{
			MethodName: "GetMetricConfiguration",
			Handler:    _MetricService_GetMetricConfiguration_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "metric.proto",
}
