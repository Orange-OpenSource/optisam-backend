// Copyright (C) 2019 Orange
// 
// This software is distributed under the terms and conditions of the 'Apache License 2.0'
// license which can be found in the file 'License.txt' in this package distribution 
// or at 'http://www.apache.org/licenses/LICENSE-2.0'. 

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: license.proto

package v1

import (
	fmt "fmt"

	proto "github.com/golang/protobuf/proto"

	math "math"

	_ "github.com/envoyproxy/protoc-gen-validate/validate"

	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"

	_ "google.golang.org/genproto/googleapis/api/annotations"

	context "golang.org/x/net/context"

	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DataTypes int32

const (
	DataTypes_UNKNOWN DataTypes = 0
	DataTypes_STRING  DataTypes = 1
	DataTypes_INT     DataTypes = 2
	DataTypes_FLOAT   DataTypes = 3
)

var DataTypes_name = map[int32]string{
	0: "UNKNOWN",
	1: "STRING",
	2: "INT",
	3: "FLOAT",
}
var DataTypes_value = map[string]int32{
	"UNKNOWN": 0,
	"STRING":  1,
	"INT":     2,
	"FLOAT":   3,
}

func (x DataTypes) String() string {
	return proto.EnumName(DataTypes_name, int32(x))
}
func (DataTypes) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_license_929192c929500bc1, []int{0}
}

type LicensesForEquipAndMetricRequest struct {
	EquipType            string       `protobuf:"bytes,1,opt,name=equip_type,json=equipType,proto3" json:"equip_type,omitempty"`
	EquipId              string       `protobuf:"bytes,2,opt,name=equip_id,json=equipId,proto3" json:"equip_id,omitempty"`
	MetricType           string       `protobuf:"bytes,3,opt,name=metric_type,json=metricType,proto3" json:"metric_type,omitempty"`
	MetricName           string       `protobuf:"bytes,4,opt,name=metric_name,json=metricName,proto3" json:"metric_name,omitempty"`
	Attributes           []*Attribute `protobuf:"bytes,5,rep,name=attributes,proto3" json:"attributes,omitempty"`
	Scopes               []string     `protobuf:"bytes,6,rep,name=scopes,proto3" json:"scopes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *LicensesForEquipAndMetricRequest) Reset()         { *m = LicensesForEquipAndMetricRequest{} }
func (m *LicensesForEquipAndMetricRequest) String() string { return proto.CompactTextString(m) }
func (*LicensesForEquipAndMetricRequest) ProtoMessage()    {}
func (*LicensesForEquipAndMetricRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_license_929192c929500bc1, []int{0}
}
func (m *LicensesForEquipAndMetricRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LicensesForEquipAndMetricRequest.Unmarshal(m, b)
}
func (m *LicensesForEquipAndMetricRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LicensesForEquipAndMetricRequest.Marshal(b, m, deterministic)
}
func (dst *LicensesForEquipAndMetricRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LicensesForEquipAndMetricRequest.Merge(dst, src)
}
func (m *LicensesForEquipAndMetricRequest) XXX_Size() int {
	return xxx_messageInfo_LicensesForEquipAndMetricRequest.Size(m)
}
func (m *LicensesForEquipAndMetricRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LicensesForEquipAndMetricRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LicensesForEquipAndMetricRequest proto.InternalMessageInfo

func (m *LicensesForEquipAndMetricRequest) GetEquipType() string {
	if m != nil {
		return m.EquipType
	}
	return ""
}

func (m *LicensesForEquipAndMetricRequest) GetEquipId() string {
	if m != nil {
		return m.EquipId
	}
	return ""
}

func (m *LicensesForEquipAndMetricRequest) GetMetricType() string {
	if m != nil {
		return m.MetricType
	}
	return ""
}

func (m *LicensesForEquipAndMetricRequest) GetMetricName() string {
	if m != nil {
		return m.MetricName
	}
	return ""
}

func (m *LicensesForEquipAndMetricRequest) GetAttributes() []*Attribute {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *LicensesForEquipAndMetricRequest) GetScopes() []string {
	if m != nil {
		return m.Scopes
	}
	return nil
}

type LicensesForEquipAndMetricResponse struct {
	Licenses             []*ProductLicenseForEquipAndMetric `protobuf:"bytes,1,rep,name=licenses,proto3" json:"licenses,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *LicensesForEquipAndMetricResponse) Reset()         { *m = LicensesForEquipAndMetricResponse{} }
func (m *LicensesForEquipAndMetricResponse) String() string { return proto.CompactTextString(m) }
func (*LicensesForEquipAndMetricResponse) ProtoMessage()    {}
func (*LicensesForEquipAndMetricResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_license_929192c929500bc1, []int{1}
}
func (m *LicensesForEquipAndMetricResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LicensesForEquipAndMetricResponse.Unmarshal(m, b)
}
func (m *LicensesForEquipAndMetricResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LicensesForEquipAndMetricResponse.Marshal(b, m, deterministic)
}
func (dst *LicensesForEquipAndMetricResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LicensesForEquipAndMetricResponse.Merge(dst, src)
}
func (m *LicensesForEquipAndMetricResponse) XXX_Size() int {
	return xxx_messageInfo_LicensesForEquipAndMetricResponse.Size(m)
}
func (m *LicensesForEquipAndMetricResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LicensesForEquipAndMetricResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LicensesForEquipAndMetricResponse proto.InternalMessageInfo

func (m *LicensesForEquipAndMetricResponse) GetLicenses() []*ProductLicenseForEquipAndMetric {
	if m != nil {
		return m.Licenses
	}
	return nil
}

type ProductLicenseForEquipAndMetric struct {
	MetricName           string   `protobuf:"bytes,1,opt,name=metric_name,json=metricName,proto3" json:"metric_name,omitempty"`
	OldLicences          int64    `protobuf:"varint,2,opt,name=old_licences,json=oldLicences,proto3" json:"old_licences,omitempty"`
	NewLicenses          int64    `protobuf:"varint,3,opt,name=new_licenses,json=newLicenses,proto3" json:"new_licenses,omitempty"`
	Delta                int64    `protobuf:"varint,4,opt,name=delta,proto3" json:"delta,omitempty"`
	Product              *Product `protobuf:"bytes,5,opt,name=product,proto3" json:"product,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProductLicenseForEquipAndMetric) Reset()         { *m = ProductLicenseForEquipAndMetric{} }
func (m *ProductLicenseForEquipAndMetric) String() string { return proto.CompactTextString(m) }
func (*ProductLicenseForEquipAndMetric) ProtoMessage()    {}
func (*ProductLicenseForEquipAndMetric) Descriptor() ([]byte, []int) {
	return fileDescriptor_license_929192c929500bc1, []int{2}
}
func (m *ProductLicenseForEquipAndMetric) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProductLicenseForEquipAndMetric.Unmarshal(m, b)
}
func (m *ProductLicenseForEquipAndMetric) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProductLicenseForEquipAndMetric.Marshal(b, m, deterministic)
}
func (dst *ProductLicenseForEquipAndMetric) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProductLicenseForEquipAndMetric.Merge(dst, src)
}
func (m *ProductLicenseForEquipAndMetric) XXX_Size() int {
	return xxx_messageInfo_ProductLicenseForEquipAndMetric.Size(m)
}
func (m *ProductLicenseForEquipAndMetric) XXX_DiscardUnknown() {
	xxx_messageInfo_ProductLicenseForEquipAndMetric.DiscardUnknown(m)
}

var xxx_messageInfo_ProductLicenseForEquipAndMetric proto.InternalMessageInfo

func (m *ProductLicenseForEquipAndMetric) GetMetricName() string {
	if m != nil {
		return m.MetricName
	}
	return ""
}

func (m *ProductLicenseForEquipAndMetric) GetOldLicences() int64 {
	if m != nil {
		return m.OldLicences
	}
	return 0
}

func (m *ProductLicenseForEquipAndMetric) GetNewLicenses() int64 {
	if m != nil {
		return m.NewLicenses
	}
	return 0
}

func (m *ProductLicenseForEquipAndMetric) GetDelta() int64 {
	if m != nil {
		return m.Delta
	}
	return 0
}

func (m *ProductLicenseForEquipAndMetric) GetProduct() *Product {
	if m != nil {
		return m.Product
	}
	return nil
}

type MetricesForEqTypeRequest struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MetricesForEqTypeRequest) Reset()         { *m = MetricesForEqTypeRequest{} }
func (m *MetricesForEqTypeRequest) String() string { return proto.CompactTextString(m) }
func (*MetricesForEqTypeRequest) ProtoMessage()    {}
func (*MetricesForEqTypeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_license_929192c929500bc1, []int{3}
}
func (m *MetricesForEqTypeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricesForEqTypeRequest.Unmarshal(m, b)
}
func (m *MetricesForEqTypeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricesForEqTypeRequest.Marshal(b, m, deterministic)
}
func (dst *MetricesForEqTypeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricesForEqTypeRequest.Merge(dst, src)
}
func (m *MetricesForEqTypeRequest) XXX_Size() int {
	return xxx_messageInfo_MetricesForEqTypeRequest.Size(m)
}
func (m *MetricesForEqTypeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricesForEqTypeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MetricesForEqTypeRequest proto.InternalMessageInfo

func (m *MetricesForEqTypeRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type ProductLicensesForMetricRequest struct {
	SwidTag              string   `protobuf:"bytes,1,opt,name=swid_tag,json=swidTag,proto3" json:"swid_tag,omitempty"`
	MetricName           string   `protobuf:"bytes,2,opt,name=metric_name,json=metricName,proto3" json:"metric_name,omitempty"`
	UnitCost             float64  `protobuf:"fixed64,3,opt,name=unit_cost,json=unitCost,proto3" json:"unit_cost,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProductLicensesForMetricRequest) Reset()         { *m = ProductLicensesForMetricRequest{} }
func (m *ProductLicensesForMetricRequest) String() string { return proto.CompactTextString(m) }
func (*ProductLicensesForMetricRequest) ProtoMessage()    {}
func (*ProductLicensesForMetricRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_license_929192c929500bc1, []int{4}
}
func (m *ProductLicensesForMetricRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProductLicensesForMetricRequest.Unmarshal(m, b)
}
func (m *ProductLicensesForMetricRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProductLicensesForMetricRequest.Marshal(b, m, deterministic)
}
func (dst *ProductLicensesForMetricRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProductLicensesForMetricRequest.Merge(dst, src)
}
func (m *ProductLicensesForMetricRequest) XXX_Size() int {
	return xxx_messageInfo_ProductLicensesForMetricRequest.Size(m)
}
func (m *ProductLicensesForMetricRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ProductLicensesForMetricRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ProductLicensesForMetricRequest proto.InternalMessageInfo

func (m *ProductLicensesForMetricRequest) GetSwidTag() string {
	if m != nil {
		return m.SwidTag
	}
	return ""
}

func (m *ProductLicensesForMetricRequest) GetMetricName() string {
	if m != nil {
		return m.MetricName
	}
	return ""
}

func (m *ProductLicensesForMetricRequest) GetUnitCost() float64 {
	if m != nil {
		return m.UnitCost
	}
	return 0
}

type ProductLicensesForMetricResponse struct {
	NumCptLicences       uint64   `protobuf:"varint,1,opt,name=numCptLicences,proto3" json:"numCptLicences,omitempty"`
	TotalCost            float64  `protobuf:"fixed64,2,opt,name=total_cost,json=totalCost,proto3" json:"total_cost,omitempty"`
	MetricName           string   `protobuf:"bytes,3,opt,name=metric_name,json=metricName,proto3" json:"metric_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProductLicensesForMetricResponse) Reset()         { *m = ProductLicensesForMetricResponse{} }
func (m *ProductLicensesForMetricResponse) String() string { return proto.CompactTextString(m) }
func (*ProductLicensesForMetricResponse) ProtoMessage()    {}
func (*ProductLicensesForMetricResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_license_929192c929500bc1, []int{5}
}
func (m *ProductLicensesForMetricResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProductLicensesForMetricResponse.Unmarshal(m, b)
}
func (m *ProductLicensesForMetricResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProductLicensesForMetricResponse.Marshal(b, m, deterministic)
}
func (dst *ProductLicensesForMetricResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProductLicensesForMetricResponse.Merge(dst, src)
}
func (m *ProductLicensesForMetricResponse) XXX_Size() int {
	return xxx_messageInfo_ProductLicensesForMetricResponse.Size(m)
}
func (m *ProductLicensesForMetricResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ProductLicensesForMetricResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ProductLicensesForMetricResponse proto.InternalMessageInfo

func (m *ProductLicensesForMetricResponse) GetNumCptLicences() uint64 {
	if m != nil {
		return m.NumCptLicences
	}
	return 0
}

func (m *ProductLicensesForMetricResponse) GetTotalCost() float64 {
	if m != nil {
		return m.TotalCost
	}
	return 0
}

func (m *ProductLicensesForMetricResponse) GetMetricName() string {
	if m != nil {
		return m.MetricName
	}
	return ""
}

type ListAcqRightsForProductAggregationRequest struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListAcqRightsForProductAggregationRequest) Reset() {
	*m = ListAcqRightsForProductAggregationRequest{}
}
func (m *ListAcqRightsForProductAggregationRequest) String() string {
	return proto.CompactTextString(m)
}
func (*ListAcqRightsForProductAggregationRequest) ProtoMessage() {}
func (*ListAcqRightsForProductAggregationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_license_929192c929500bc1, []int{6}
}
func (m *ListAcqRightsForProductAggregationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAcqRightsForProductAggregationRequest.Unmarshal(m, b)
}
func (m *ListAcqRightsForProductAggregationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAcqRightsForProductAggregationRequest.Marshal(b, m, deterministic)
}
func (dst *ListAcqRightsForProductAggregationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAcqRightsForProductAggregationRequest.Merge(dst, src)
}
func (m *ListAcqRightsForProductAggregationRequest) XXX_Size() int {
	return xxx_messageInfo_ListAcqRightsForProductAggregationRequest.Size(m)
}
func (m *ListAcqRightsForProductAggregationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAcqRightsForProductAggregationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListAcqRightsForProductAggregationRequest proto.InternalMessageInfo

func (m *ListAcqRightsForProductAggregationRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

type ListAcqRightsForProductAggregationResponse struct {
	AcqRights            []*ProductAcquiredRights `protobuf:"bytes,1,rep,name=acq_rights,json=acqRights,proto3" json:"acq_rights,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *ListAcqRightsForProductAggregationResponse) Reset() {
	*m = ListAcqRightsForProductAggregationResponse{}
}
func (m *ListAcqRightsForProductAggregationResponse) String() string {
	return proto.CompactTextString(m)
}
func (*ListAcqRightsForProductAggregationResponse) ProtoMessage() {}
func (*ListAcqRightsForProductAggregationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_license_929192c929500bc1, []int{7}
}
func (m *ListAcqRightsForProductAggregationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAcqRightsForProductAggregationResponse.Unmarshal(m, b)
}
func (m *ListAcqRightsForProductAggregationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAcqRightsForProductAggregationResponse.Marshal(b, m, deterministic)
}
func (dst *ListAcqRightsForProductAggregationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAcqRightsForProductAggregationResponse.Merge(dst, src)
}
func (m *ListAcqRightsForProductAggregationResponse) XXX_Size() int {
	return xxx_messageInfo_ListAcqRightsForProductAggregationResponse.Size(m)
}
func (m *ListAcqRightsForProductAggregationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAcqRightsForProductAggregationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListAcqRightsForProductAggregationResponse proto.InternalMessageInfo

func (m *ListAcqRightsForProductAggregationResponse) GetAcqRights() []*ProductAcquiredRights {
	if m != nil {
		return m.AcqRights
	}
	return nil
}

type UpdateProductAggregationRequest struct {
	Name                 string             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Aggregation          *UpdateAggregation `protobuf:"bytes,2,opt,name=aggregation,proto3" json:"aggregation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *UpdateProductAggregationRequest) Reset()         { *m = UpdateProductAggregationRequest{} }
func (m *UpdateProductAggregationRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateProductAggregationRequest) ProtoMessage()    {}
func (*UpdateProductAggregationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_license_929192c929500bc1, []int{8}
}
func (m *UpdateProductAggregationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateProductAggregationRequest.Unmarshal(m, b)
}
func (m *UpdateProductAggregationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateProductAggregationRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateProductAggregationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateProductAggregationRequest.Merge(dst, src)
}
func (m *UpdateProductAggregationRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateProductAggregationRequest.Size(m)
}
func (m *UpdateProductAggregationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateProductAggregationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateProductAggregationRequest proto.InternalMessageInfo

func (m *UpdateProductAggregationRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateProductAggregationRequest) GetAggregation() *UpdateAggregation {
	if m != nil {
		return m.Aggregation
	}
	return nil
}

type UpdateAggregation struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	AddedProducts        []string `protobuf:"bytes,2,rep,name=added_products,json=addedProducts,proto3" json:"added_products,omitempty"`
	RemovedProducts      []string `protobuf:"bytes,3,rep,name=removed_products,json=removedProducts,proto3" json:"removed_products,omitempty"`
	ProductNames         []string `protobuf:"bytes,4,rep,name=product_names,json=productNames,proto3" json:"product_names,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateAggregation) Reset()         { *m = UpdateAggregation{} }
func (m *UpdateAggregation) String() string { return proto.CompactTextString(m) }
func (*UpdateAggregation) ProtoMessage()    {}
func (*UpdateAggregation) Descriptor() ([]byte, []int) {
	return fileDescriptor_license_929192c929500bc1, []int{9}
}
func (m *UpdateAggregation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateAggregation.Unmarshal(m, b)
}
func (m *UpdateAggregation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateAggregation.Marshal(b, m, deterministic)
}
func (dst *UpdateAggregation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateAggregation.Merge(dst, src)
}
func (m *UpdateAggregation) XXX_Size() int {
	return xxx_messageInfo_UpdateAggregation.Size(m)
}
func (m *UpdateAggregation) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateAggregation.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateAggregation proto.InternalMessageInfo

func (m *UpdateAggregation) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateAggregation) GetAddedProducts() []string {
	if m != nil {
		return m.AddedProducts
	}
	return nil
}

func (m *UpdateAggregation) GetRemovedProducts() []string {
	if m != nil {
		return m.RemovedProducts
	}
	return nil
}

func (m *UpdateAggregation) GetProductNames() []string {
	if m != nil {
		return m.ProductNames
	}
	return nil
}

type DeleteProductAggregationRequest struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteProductAggregationRequest) Reset()         { *m = DeleteProductAggregationRequest{} }
func (m *DeleteProductAggregationRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteProductAggregationRequest) ProtoMessage()    {}
func (*DeleteProductAggregationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_license_929192c929500bc1, []int{10}
}
func (m *DeleteProductAggregationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteProductAggregationRequest.Unmarshal(m, b)
}
func (m *DeleteProductAggregationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteProductAggregationRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteProductAggregationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteProductAggregationRequest.Merge(dst, src)
}
func (m *DeleteProductAggregationRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteProductAggregationRequest.Size(m)
}
func (m *DeleteProductAggregationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteProductAggregationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteProductAggregationRequest proto.InternalMessageInfo

func (m *DeleteProductAggregationRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

type ListProductAggregationResponse struct {
	Aggregations         []*ProductAggregation `protobuf:"bytes,1,rep,name=aggregations,proto3" json:"aggregations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ListProductAggregationResponse) Reset()         { *m = ListProductAggregationResponse{} }
func (m *ListProductAggregationResponse) String() string { return proto.CompactTextString(m) }
func (*ListProductAggregationResponse) ProtoMessage()    {}
func (*ListProductAggregationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_license_929192c929500bc1, []int{11}
}
func (m *ListProductAggregationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListProductAggregationResponse.Unmarshal(m, b)
}
func (m *ListProductAggregationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListProductAggregationResponse.Marshal(b, m, deterministic)
}
func (dst *ListProductAggregationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListProductAggregationResponse.Merge(dst, src)
}
func (m *ListProductAggregationResponse) XXX_Size() int {
	return xxx_messageInfo_ListProductAggregationResponse.Size(m)
}
func (m *ListProductAggregationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListProductAggregationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListProductAggregationResponse proto.InternalMessageInfo

func (m *ListProductAggregationResponse) GetAggregations() []*ProductAggregation {
	if m != nil {
		return m.Aggregations
	}
	return nil
}

type ProductAggregation struct {
	ID                   string     `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name                 string     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Editor               string     `protobuf:"bytes,3,opt,name=editor,proto3" json:"editor,omitempty"`
	ProductNames         []string   `protobuf:"bytes,4,rep,name=product_names,json=productNames,proto3" json:"product_names,omitempty"`
	Metric               string     `protobuf:"bytes,5,opt,name=metric,proto3" json:"metric,omitempty"`
	Products             []string   `protobuf:"bytes,6,rep,name=products,proto3" json:"products,omitempty"`
	ProductsFull         []*Product `protobuf:"bytes,7,rep,name=products_full,json=productsFull,proto3" json:"products_full,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ProductAggregation) Reset()         { *m = ProductAggregation{} }
func (m *ProductAggregation) String() string { return proto.CompactTextString(m) }
func (*ProductAggregation) ProtoMessage()    {}
func (*ProductAggregation) Descriptor() ([]byte, []int) {
	return fileDescriptor_license_929192c929500bc1, []int{12}
}
func (m *ProductAggregation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProductAggregation.Unmarshal(m, b)
}
func (m *ProductAggregation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProductAggregation.Marshal(b, m, deterministic)
}
func (dst *ProductAggregation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProductAggregation.Merge(dst, src)
}
func (m *ProductAggregation) XXX_Size() int {
	return xxx_messageInfo_ProductAggregation.Size(m)
}
func (m *ProductAggregation) XXX_DiscardUnknown() {
	xxx_messageInfo_ProductAggregation.DiscardUnknown(m)
}

var xxx_messageInfo_ProductAggregation proto.InternalMessageInfo

func (m *ProductAggregation) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *ProductAggregation) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ProductAggregation) GetEditor() string {
	if m != nil {
		return m.Editor
	}
	return ""
}

func (m *ProductAggregation) GetProductNames() []string {
	if m != nil {
		return m.ProductNames
	}
	return nil
}

func (m *ProductAggregation) GetMetric() string {
	if m != nil {
		return m.Metric
	}
	return ""
}

func (m *ProductAggregation) GetProducts() []string {
	if m != nil {
		return m.Products
	}
	return nil
}

func (m *ProductAggregation) GetProductsFull() []*Product {
	if m != nil {
		return m.ProductsFull
	}
	return nil
}

type ListMetricResponse struct {
	Metrices             []*Metric `protobuf:"bytes,1,rep,name=metrices,proto3" json:"metrices,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ListMetricResponse) Reset()         { *m = ListMetricResponse{} }
func (m *ListMetricResponse) String() string { return proto.CompactTextString(m) }
func (*ListMetricResponse) ProtoMessage()    {}
func (*ListMetricResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_license_929192c929500bc1, []int{13}
}
func (m *ListMetricResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListMetricResponse.Unmarshal(m, b)
}
func (m *ListMetricResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListMetricResponse.Marshal(b, m, deterministic)
}
func (dst *ListMetricResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListMetricResponse.Merge(dst, src)
}
func (m *ListMetricResponse) XXX_Size() int {
	return xxx_messageInfo_ListMetricResponse.Size(m)
}
func (m *ListMetricResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListMetricResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListMetricResponse proto.InternalMessageInfo

func (m *ListMetricResponse) GetMetrices() []*Metric {
	if m != nil {
		return m.Metrices
	}
	return nil
}

type Metric struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Metric) Reset()         { *m = Metric{} }
func (m *Metric) String() string { return proto.CompactTextString(m) }
func (*Metric) ProtoMessage()    {}
func (*Metric) Descriptor() ([]byte, []int) {
	return fileDescriptor_license_929192c929500bc1, []int{14}
}
func (m *Metric) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Metric.Unmarshal(m, b)
}
func (m *Metric) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Metric.Marshal(b, m, deterministic)
}
func (dst *Metric) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Metric.Merge(dst, src)
}
func (m *Metric) XXX_Size() int {
	return xxx_messageInfo_Metric.Size(m)
}
func (m *Metric) XXX_DiscardUnknown() {
	xxx_messageInfo_Metric.DiscardUnknown(m)
}

var xxx_messageInfo_Metric proto.InternalMessageInfo

func (m *Metric) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Metric) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Metric) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type ListAcquiredRightsForProductRequest struct {
	SwidTag              string   `protobuf:"bytes,1,opt,name=swid_tag,json=swidTag,proto3" json:"swid_tag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListAcquiredRightsForProductRequest) Reset()         { *m = ListAcquiredRightsForProductRequest{} }
func (m *ListAcquiredRightsForProductRequest) String() string { return proto.CompactTextString(m) }
func (*ListAcquiredRightsForProductRequest) ProtoMessage()    {}
func (*ListAcquiredRightsForProductRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_license_929192c929500bc1, []int{15}
}
func (m *ListAcquiredRightsForProductRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAcquiredRightsForProductRequest.Unmarshal(m, b)
}
func (m *ListAcquiredRightsForProductRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAcquiredRightsForProductRequest.Marshal(b, m, deterministic)
}
func (dst *ListAcquiredRightsForProductRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAcquiredRightsForProductRequest.Merge(dst, src)
}
func (m *ListAcquiredRightsForProductRequest) XXX_Size() int {
	return xxx_messageInfo_ListAcquiredRightsForProductRequest.Size(m)
}
func (m *ListAcquiredRightsForProductRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAcquiredRightsForProductRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListAcquiredRightsForProductRequest proto.InternalMessageInfo

func (m *ListAcquiredRightsForProductRequest) GetSwidTag() string {
	if m != nil {
		return m.SwidTag
	}
	return ""
}

type ListAcquiredRightsForProductResponse struct {
	AcqRights            []*ProductAcquiredRights `protobuf:"bytes,1,rep,name=acq_rights,json=acqRights,proto3" json:"acq_rights,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *ListAcquiredRightsForProductResponse) Reset()         { *m = ListAcquiredRightsForProductResponse{} }
func (m *ListAcquiredRightsForProductResponse) String() string { return proto.CompactTextString(m) }
func (*ListAcquiredRightsForProductResponse) ProtoMessage()    {}
func (*ListAcquiredRightsForProductResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_license_929192c929500bc1, []int{16}
}
func (m *ListAcquiredRightsForProductResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAcquiredRightsForProductResponse.Unmarshal(m, b)
}
func (m *ListAcquiredRightsForProductResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAcquiredRightsForProductResponse.Marshal(b, m, deterministic)
}
func (dst *ListAcquiredRightsForProductResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAcquiredRightsForProductResponse.Merge(dst, src)
}
func (m *ListAcquiredRightsForProductResponse) XXX_Size() int {
	return xxx_messageInfo_ListAcquiredRightsForProductResponse.Size(m)
}
func (m *ListAcquiredRightsForProductResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAcquiredRightsForProductResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListAcquiredRightsForProductResponse proto.InternalMessageInfo

func (m *ListAcquiredRightsForProductResponse) GetAcqRights() []*ProductAcquiredRights {
	if m != nil {
		return m.AcqRights
	}
	return nil
}

type Product struct {
	SwidTag              string   `protobuf:"bytes,1,opt,name=swidTag,proto3" json:"swidTag,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Version              string   `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Category             string   `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"`
	Editor               string   `protobuf:"bytes,5,opt,name=editor,proto3" json:"editor,omitempty"`
	Metric               string   `protobuf:"bytes,6,opt,name=metric,proto3" json:"metric,omitempty"`
	NumCptLicences       int32    `protobuf:"varint,7,opt,name=numCptLicences,proto3" json:"numCptLicences,omitempty"`
	NumAcqLicences       int32    `protobuf:"varint,8,opt,name=numAcqLicences,proto3" json:"numAcqLicences,omitempty"`
	TotalCost            float64  `protobuf:"fixed64,9,opt,name=totalCost,proto3" json:"totalCost,omitempty"`
	DeltaNumber          int32    `protobuf:"varint,10,opt,name=deltaNumber,proto3" json:"deltaNumber,omitempty"`
	DeltaCost            float64  `protobuf:"fixed64,11,opt,name=deltaCost,proto3" json:"deltaCost,omitempty"`
	NumOfApplications    int32    `protobuf:"varint,12,opt,name=numOfApplications,proto3" json:"numOfApplications,omitempty"`
	NumofEquipments      int32    `protobuf:"varint,13,opt,name=numofEquipments,proto3" json:"numofEquipments,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Product) Reset()         { *m = Product{} }
func (m *Product) String() string { return proto.CompactTextString(m) }
func (*Product) ProtoMessage()    {}
func (*Product) Descriptor() ([]byte, []int) {
	return fileDescriptor_license_929192c929500bc1, []int{17}
}
func (m *Product) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Product.Unmarshal(m, b)
}
func (m *Product) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Product.Marshal(b, m, deterministic)
}
func (dst *Product) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Product.Merge(dst, src)
}
func (m *Product) XXX_Size() int {
	return xxx_messageInfo_Product.Size(m)
}
func (m *Product) XXX_DiscardUnknown() {
	xxx_messageInfo_Product.DiscardUnknown(m)
}

var xxx_messageInfo_Product proto.InternalMessageInfo

func (m *Product) GetSwidTag() string {
	if m != nil {
		return m.SwidTag
	}
	return ""
}

func (m *Product) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Product) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Product) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *Product) GetEditor() string {
	if m != nil {
		return m.Editor
	}
	return ""
}

func (m *Product) GetMetric() string {
	if m != nil {
		return m.Metric
	}
	return ""
}

func (m *Product) GetNumCptLicences() int32 {
	if m != nil {
		return m.NumCptLicences
	}
	return 0
}

func (m *Product) GetNumAcqLicences() int32 {
	if m != nil {
		return m.NumAcqLicences
	}
	return 0
}

func (m *Product) GetTotalCost() float64 {
	if m != nil {
		return m.TotalCost
	}
	return 0
}

func (m *Product) GetDeltaNumber() int32 {
	if m != nil {
		return m.DeltaNumber
	}
	return 0
}

func (m *Product) GetDeltaCost() float64 {
	if m != nil {
		return m.DeltaCost
	}
	return 0
}

func (m *Product) GetNumOfApplications() int32 {
	if m != nil {
		return m.NumOfApplications
	}
	return 0
}

func (m *Product) GetNumofEquipments() int32 {
	if m != nil {
		return m.NumofEquipments
	}
	return 0
}

type Application struct {
	ApplicationId        string   `protobuf:"bytes,1,opt,name=applicationId,proto3" json:"applicationId,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ApplicationOwner     string   `protobuf:"bytes,3,opt,name=application_owner,json=applicationOwner,proto3" json:"application_owner,omitempty"`
	NumOfInstances       int32    `protobuf:"varint,4,opt,name=numOfInstances,proto3" json:"numOfInstances,omitempty"`
	NumofProducts        int32    `protobuf:"varint,5,opt,name=numofProducts,proto3" json:"numofProducts,omitempty"`
	TotalCost            float64  `protobuf:"fixed64,6,opt,name=totalCost,proto3" json:"totalCost,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Application) Reset()         { *m = Application{} }
func (m *Application) String() string { return proto.CompactTextString(m) }
func (*Application) ProtoMessage()    {}
func (*Application) Descriptor() ([]byte, []int) {
	return fileDescriptor_license_929192c929500bc1, []int{18}
}
func (m *Application) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Application.Unmarshal(m, b)
}
func (m *Application) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Application.Marshal(b, m, deterministic)
}
func (dst *Application) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Application.Merge(dst, src)
}
func (m *Application) XXX_Size() int {
	return xxx_messageInfo_Application.Size(m)
}
func (m *Application) XXX_DiscardUnknown() {
	xxx_messageInfo_Application.DiscardUnknown(m)
}

var xxx_messageInfo_Application proto.InternalMessageInfo

func (m *Application) GetApplicationId() string {
	if m != nil {
		return m.ApplicationId
	}
	return ""
}

func (m *Application) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Application) GetApplicationOwner() string {
	if m != nil {
		return m.ApplicationOwner
	}
	return ""
}

func (m *Application) GetNumOfInstances() int32 {
	if m != nil {
		return m.NumOfInstances
	}
	return 0
}

func (m *Application) GetNumofProducts() int32 {
	if m != nil {
		return m.NumofProducts
	}
	return 0
}

func (m *Application) GetTotalCost() float64 {
	if m != nil {
		return m.TotalCost
	}
	return 0
}

type ProductAcquiredRights struct {
	SKU                  string   `protobuf:"bytes,1,opt,name=SKU,proto3" json:"SKU,omitempty"`
	SwidTag              string   `protobuf:"bytes,2,opt,name=swidTag,proto3" json:"swidTag,omitempty"`
	Metric               string   `protobuf:"bytes,3,opt,name=metric,proto3" json:"metric,omitempty"`
	NumCptLicences       int32    `protobuf:"varint,4,opt,name=numCptLicences,proto3" json:"numCptLicences,omitempty"`
	NumAcqLicences       int32    `protobuf:"varint,5,opt,name=numAcqLicences,proto3" json:"numAcqLicences,omitempty"`
	TotalCost            float64  `protobuf:"fixed64,6,opt,name=totalCost,proto3" json:"totalCost,omitempty"`
	DeltaNumber          int32    `protobuf:"varint,7,opt,name=deltaNumber,proto3" json:"deltaNumber,omitempty"`
	DeltaCost            float64  `protobuf:"fixed64,8,opt,name=deltaCost,proto3" json:"deltaCost,omitempty"`
	AvgUnitPrice         float64  `protobuf:"fixed64,9,opt,name=avgUnitPrice,proto3" json:"avgUnitPrice,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProductAcquiredRights) Reset()         { *m = ProductAcquiredRights{} }
func (m *ProductAcquiredRights) String() string { return proto.CompactTextString(m) }
func (*ProductAcquiredRights) ProtoMessage()    {}
func (*ProductAcquiredRights) Descriptor() ([]byte, []int) {
	return fileDescriptor_license_929192c929500bc1, []int{19}
}
func (m *ProductAcquiredRights) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProductAcquiredRights.Unmarshal(m, b)
}
func (m *ProductAcquiredRights) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProductAcquiredRights.Marshal(b, m, deterministic)
}
func (dst *ProductAcquiredRights) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProductAcquiredRights.Merge(dst, src)
}
func (m *ProductAcquiredRights) XXX_Size() int {
	return xxx_messageInfo_ProductAcquiredRights.Size(m)
}
func (m *ProductAcquiredRights) XXX_DiscardUnknown() {
	xxx_messageInfo_ProductAcquiredRights.DiscardUnknown(m)
}

var xxx_messageInfo_ProductAcquiredRights proto.InternalMessageInfo

func (m *ProductAcquiredRights) GetSKU() string {
	if m != nil {
		return m.SKU
	}
	return ""
}

func (m *ProductAcquiredRights) GetSwidTag() string {
	if m != nil {
		return m.SwidTag
	}
	return ""
}

func (m *ProductAcquiredRights) GetMetric() string {
	if m != nil {
		return m.Metric
	}
	return ""
}

func (m *ProductAcquiredRights) GetNumCptLicences() int32 {
	if m != nil {
		return m.NumCptLicences
	}
	return 0
}

func (m *ProductAcquiredRights) GetNumAcqLicences() int32 {
	if m != nil {
		return m.NumAcqLicences
	}
	return 0
}

func (m *ProductAcquiredRights) GetTotalCost() float64 {
	if m != nil {
		return m.TotalCost
	}
	return 0
}

func (m *ProductAcquiredRights) GetDeltaNumber() int32 {
	if m != nil {
		return m.DeltaNumber
	}
	return 0
}

func (m *ProductAcquiredRights) GetDeltaCost() float64 {
	if m != nil {
		return m.DeltaCost
	}
	return 0
}

func (m *ProductAcquiredRights) GetAvgUnitPrice() float64 {
	if m != nil {
		return m.AvgUnitPrice
	}
	return 0
}

type Attribute struct {
	ID               string    `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name             string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	DataType         DataTypes `protobuf:"varint,3,opt,name=data_type,json=dataType,proto3,enum=v1.DataTypes" json:"data_type,omitempty"`
	PrimaryKey       bool      `protobuf:"varint,4,opt,name=primary_key,json=primaryKey,proto3" json:"primary_key,omitempty"`
	Displayed        bool      `protobuf:"varint,5,opt,name=displayed,proto3" json:"displayed,omitempty"`
	Searchable       bool      `protobuf:"varint,6,opt,name=searchable,proto3" json:"searchable,omitempty"`
	ParentIdentifier bool      `protobuf:"varint,7,opt,name=parent_identifier,json=parentIdentifier,proto3" json:"parent_identifier,omitempty"`
	MappedTo         string    `protobuf:"bytes,8,opt,name=mapped_to,json=mappedTo,proto3" json:"mapped_to,omitempty"`
	Simulated        bool      `protobuf:"varint,9,opt,name=simulated,proto3" json:"simulated,omitempty"`
	// Types that are valid to be assigned to Val:
	//	*Attribute_IntVal
	//	*Attribute_FloatVal
	//	*Attribute_StringVal
	Val isAttribute_Val `protobuf_oneof:"val"`
	// Types that are valid to be assigned to OldVal:
	//	*Attribute_IntValOld
	//	*Attribute_FloatValOld
	//	*Attribute_StringValOld
	OldVal               isAttribute_OldVal `protobuf_oneof:"old_val"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Attribute) Reset()         { *m = Attribute{} }
func (m *Attribute) String() string { return proto.CompactTextString(m) }
func (*Attribute) ProtoMessage()    {}
func (*Attribute) Descriptor() ([]byte, []int) {
	return fileDescriptor_license_929192c929500bc1, []int{20}
}
func (m *Attribute) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Attribute.Unmarshal(m, b)
}
func (m *Attribute) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Attribute.Marshal(b, m, deterministic)
}
func (dst *Attribute) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Attribute.Merge(dst, src)
}
func (m *Attribute) XXX_Size() int {
	return xxx_messageInfo_Attribute.Size(m)
}
func (m *Attribute) XXX_DiscardUnknown() {
	xxx_messageInfo_Attribute.DiscardUnknown(m)
}

var xxx_messageInfo_Attribute proto.InternalMessageInfo

func (m *Attribute) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Attribute) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Attribute) GetDataType() DataTypes {
	if m != nil {
		return m.DataType
	}
	return DataTypes_UNKNOWN
}

func (m *Attribute) GetPrimaryKey() bool {
	if m != nil {
		return m.PrimaryKey
	}
	return false
}

func (m *Attribute) GetDisplayed() bool {
	if m != nil {
		return m.Displayed
	}
	return false
}

func (m *Attribute) GetSearchable() bool {
	if m != nil {
		return m.Searchable
	}
	return false
}

func (m *Attribute) GetParentIdentifier() bool {
	if m != nil {
		return m.ParentIdentifier
	}
	return false
}

func (m *Attribute) GetMappedTo() string {
	if m != nil {
		return m.MappedTo
	}
	return ""
}

func (m *Attribute) GetSimulated() bool {
	if m != nil {
		return m.Simulated
	}
	return false
}

type isAttribute_Val interface {
	isAttribute_Val()
}

type Attribute_IntVal struct {
	IntVal int32 `protobuf:"varint,10,opt,name=int_val,json=intVal,proto3,oneof"`
}

type Attribute_FloatVal struct {
	FloatVal float32 `protobuf:"fixed32,11,opt,name=float_val,json=floatVal,proto3,oneof"`
}

type Attribute_StringVal struct {
	StringVal string `protobuf:"bytes,12,opt,name=string_val,json=stringVal,proto3,oneof"`
}

func (*Attribute_IntVal) isAttribute_Val() {}

func (*Attribute_FloatVal) isAttribute_Val() {}

func (*Attribute_StringVal) isAttribute_Val() {}

func (m *Attribute) GetVal() isAttribute_Val {
	if m != nil {
		return m.Val
	}
	return nil
}

func (m *Attribute) GetIntVal() int32 {
	if x, ok := m.GetVal().(*Attribute_IntVal); ok {
		return x.IntVal
	}
	return 0
}

func (m *Attribute) GetFloatVal() float32 {
	if x, ok := m.GetVal().(*Attribute_FloatVal); ok {
		return x.FloatVal
	}
	return 0
}

func (m *Attribute) GetStringVal() string {
	if x, ok := m.GetVal().(*Attribute_StringVal); ok {
		return x.StringVal
	}
	return ""
}

type isAttribute_OldVal interface {
	isAttribute_OldVal()
}

type Attribute_IntValOld struct {
	IntValOld int32 `protobuf:"varint,13,opt,name=int_val_old,json=intValOld,proto3,oneof"`
}

type Attribute_FloatValOld struct {
	FloatValOld float32 `protobuf:"fixed32,14,opt,name=float_val_old,json=floatValOld,proto3,oneof"`
}

type Attribute_StringValOld struct {
	StringValOld string `protobuf:"bytes,15,opt,name=string_val_old,json=stringValOld,proto3,oneof"`
}

func (*Attribute_IntValOld) isAttribute_OldVal() {}

func (*Attribute_FloatValOld) isAttribute_OldVal() {}

func (*Attribute_StringValOld) isAttribute_OldVal() {}

func (m *Attribute) GetOldVal() isAttribute_OldVal {
	if m != nil {
		return m.OldVal
	}
	return nil
}

func (m *Attribute) GetIntValOld() int32 {
	if x, ok := m.GetOldVal().(*Attribute_IntValOld); ok {
		return x.IntValOld
	}
	return 0
}

func (m *Attribute) GetFloatValOld() float32 {
	if x, ok := m.GetOldVal().(*Attribute_FloatValOld); ok {
		return x.FloatValOld
	}
	return 0
}

func (m *Attribute) GetStringValOld() string {
	if x, ok := m.GetOldVal().(*Attribute_StringValOld); ok {
		return x.StringValOld
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Attribute) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Attribute_OneofMarshaler, _Attribute_OneofUnmarshaler, _Attribute_OneofSizer, []interface{}{
		(*Attribute_IntVal)(nil),
		(*Attribute_FloatVal)(nil),
		(*Attribute_StringVal)(nil),
		(*Attribute_IntValOld)(nil),
		(*Attribute_FloatValOld)(nil),
		(*Attribute_StringValOld)(nil),
	}
}

func _Attribute_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Attribute)
	// val
	switch x := m.Val.(type) {
	case *Attribute_IntVal:
		b.EncodeVarint(10<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.IntVal))
	case *Attribute_FloatVal:
		b.EncodeVarint(11<<3 | proto.WireFixed32)
		b.EncodeFixed32(uint64(math.Float32bits(x.FloatVal)))
	case *Attribute_StringVal:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.StringVal)
	case nil:
	default:
		return fmt.Errorf("Attribute.Val has unexpected type %T", x)
	}
	// old_val
	switch x := m.OldVal.(type) {
	case *Attribute_IntValOld:
		b.EncodeVarint(13<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.IntValOld))
	case *Attribute_FloatValOld:
		b.EncodeVarint(14<<3 | proto.WireFixed32)
		b.EncodeFixed32(uint64(math.Float32bits(x.FloatValOld)))
	case *Attribute_StringValOld:
		b.EncodeVarint(15<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.StringValOld)
	case nil:
	default:
		return fmt.Errorf("Attribute.OldVal has unexpected type %T", x)
	}
	return nil
}

func _Attribute_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Attribute)
	switch tag {
	case 10: // val.int_val
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Val = &Attribute_IntVal{int32(x)}
		return true, err
	case 11: // val.float_val
		if wire != proto.WireFixed32 {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeFixed32()
		m.Val = &Attribute_FloatVal{math.Float32frombits(uint32(x))}
		return true, err
	case 12: // val.string_val
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Val = &Attribute_StringVal{x}
		return true, err
	case 13: // old_val.int_val_old
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.OldVal = &Attribute_IntValOld{int32(x)}
		return true, err
	case 14: // old_val.float_val_old
		if wire != proto.WireFixed32 {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeFixed32()
		m.OldVal = &Attribute_FloatValOld{math.Float32frombits(uint32(x))}
		return true, err
	case 15: // old_val.string_val_old
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.OldVal = &Attribute_StringValOld{x}
		return true, err
	default:
		return false, nil
	}
}

func _Attribute_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Attribute)
	// val
	switch x := m.Val.(type) {
	case *Attribute_IntVal:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.IntVal))
	case *Attribute_FloatVal:
		n += 1 // tag and wire
		n += 4
	case *Attribute_StringVal:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.StringVal)))
		n += len(x.StringVal)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// old_val
	switch x := m.OldVal.(type) {
	case *Attribute_IntValOld:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.IntValOld))
	case *Attribute_FloatValOld:
		n += 1 // tag and wire
		n += 4
	case *Attribute_StringValOld:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.StringValOld)))
		n += len(x.StringValOld)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*LicensesForEquipAndMetricRequest)(nil), "v1.LicensesForEquipAndMetricRequest")
	proto.RegisterType((*LicensesForEquipAndMetricResponse)(nil), "v1.LicensesForEquipAndMetricResponse")
	proto.RegisterType((*ProductLicenseForEquipAndMetric)(nil), "v1.ProductLicenseForEquipAndMetric")
	proto.RegisterType((*MetricesForEqTypeRequest)(nil), "v1.MetricesForEqTypeRequest")
	proto.RegisterType((*ProductLicensesForMetricRequest)(nil), "v1.ProductLicensesForMetricRequest")
	proto.RegisterType((*ProductLicensesForMetricResponse)(nil), "v1.ProductLicensesForMetricResponse")
	proto.RegisterType((*ListAcqRightsForProductAggregationRequest)(nil), "v1.ListAcqRightsForProductAggregationRequest")
	proto.RegisterType((*ListAcqRightsForProductAggregationResponse)(nil), "v1.ListAcqRightsForProductAggregationResponse")
	proto.RegisterType((*UpdateProductAggregationRequest)(nil), "v1.UpdateProductAggregationRequest")
	proto.RegisterType((*UpdateAggregation)(nil), "v1.UpdateAggregation")
	proto.RegisterType((*DeleteProductAggregationRequest)(nil), "v1.DeleteProductAggregationRequest")
	proto.RegisterType((*ListProductAggregationResponse)(nil), "v1.ListProductAggregationResponse")
	proto.RegisterType((*ProductAggregation)(nil), "v1.ProductAggregation")
	proto.RegisterType((*ListMetricResponse)(nil), "v1.ListMetricResponse")
	proto.RegisterType((*Metric)(nil), "v1.Metric")
	proto.RegisterType((*ListAcquiredRightsForProductRequest)(nil), "v1.ListAcquiredRightsForProductRequest")
	proto.RegisterType((*ListAcquiredRightsForProductResponse)(nil), "v1.ListAcquiredRightsForProductResponse")
	proto.RegisterType((*Product)(nil), "v1.Product")
	proto.RegisterType((*Application)(nil), "v1.Application")
	proto.RegisterType((*ProductAcquiredRights)(nil), "v1.ProductAcquiredRights")
	proto.RegisterType((*Attribute)(nil), "v1.Attribute")
	proto.RegisterEnum("v1.DataTypes", DataTypes_name, DataTypes_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LicenseServiceClient is the client API for LicenseService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
////go:generate mockgen -destination=mock/mock.go -package=mock optisam-backend/license-service/pkg/api/v1 LicenseServiceClient
type LicenseServiceClient interface {
	ListAcqRightsForProduct(ctx context.Context, in *ListAcquiredRightsForProductRequest, opts ...grpc.CallOption) (*ListAcquiredRightsForProductResponse, error)
	CreateProductAggregation(ctx context.Context, in *ProductAggregation, opts ...grpc.CallOption) (*ProductAggregation, error)
	// update product aggregation
	UpdateProductAggregation(ctx context.Context, in *UpdateProductAggregationRequest, opts ...grpc.CallOption) (*ProductAggregation, error)
	ListAcqRightsForProductAggregation(ctx context.Context, in *ListAcqRightsForProductAggregationRequest, opts ...grpc.CallOption) (*ListAcqRightsForProductAggregationResponse, error)
	DeleteProductAggregation(ctx context.Context, in *DeleteProductAggregationRequest, opts ...grpc.CallOption) (*ListProductAggregationResponse, error)
	ProductLicensesForMetric(ctx context.Context, in *ProductLicensesForMetricRequest, opts ...grpc.CallOption) (*ProductLicensesForMetricResponse, error)
	// TODO: Should be in metric services
	MetricesForEqType(ctx context.Context, in *MetricesForEqTypeRequest, opts ...grpc.CallOption) (*ListMetricResponse, error)
	LicensesForEquipAndMetric(ctx context.Context, in *LicensesForEquipAndMetricRequest, opts ...grpc.CallOption) (*LicensesForEquipAndMetricResponse, error)
}

type licenseServiceClient struct {
	cc *grpc.ClientConn
}

func NewLicenseServiceClient(cc *grpc.ClientConn) LicenseServiceClient {
	return &licenseServiceClient{cc}
}

func (c *licenseServiceClient) ListAcqRightsForProduct(ctx context.Context, in *ListAcquiredRightsForProductRequest, opts ...grpc.CallOption) (*ListAcquiredRightsForProductResponse, error) {
	out := new(ListAcquiredRightsForProductResponse)
	err := c.cc.Invoke(ctx, "/v1.LicenseService/ListAcqRightsForProduct", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *licenseServiceClient) CreateProductAggregation(ctx context.Context, in *ProductAggregation, opts ...grpc.CallOption) (*ProductAggregation, error) {
	out := new(ProductAggregation)
	err := c.cc.Invoke(ctx, "/v1.LicenseService/CreateProductAggregation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *licenseServiceClient) UpdateProductAggregation(ctx context.Context, in *UpdateProductAggregationRequest, opts ...grpc.CallOption) (*ProductAggregation, error) {
	out := new(ProductAggregation)
	err := c.cc.Invoke(ctx, "/v1.LicenseService/UpdateProductAggregation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *licenseServiceClient) ListAcqRightsForProductAggregation(ctx context.Context, in *ListAcqRightsForProductAggregationRequest, opts ...grpc.CallOption) (*ListAcqRightsForProductAggregationResponse, error) {
	out := new(ListAcqRightsForProductAggregationResponse)
	err := c.cc.Invoke(ctx, "/v1.LicenseService/ListAcqRightsForProductAggregation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *licenseServiceClient) DeleteProductAggregation(ctx context.Context, in *DeleteProductAggregationRequest, opts ...grpc.CallOption) (*ListProductAggregationResponse, error) {
	out := new(ListProductAggregationResponse)
	err := c.cc.Invoke(ctx, "/v1.LicenseService/DeleteProductAggregation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *licenseServiceClient) ProductLicensesForMetric(ctx context.Context, in *ProductLicensesForMetricRequest, opts ...grpc.CallOption) (*ProductLicensesForMetricResponse, error) {
	out := new(ProductLicensesForMetricResponse)
	err := c.cc.Invoke(ctx, "/v1.LicenseService/ProductLicensesForMetric", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *licenseServiceClient) MetricesForEqType(ctx context.Context, in *MetricesForEqTypeRequest, opts ...grpc.CallOption) (*ListMetricResponse, error) {
	out := new(ListMetricResponse)
	err := c.cc.Invoke(ctx, "/v1.LicenseService/MetricesForEqType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *licenseServiceClient) LicensesForEquipAndMetric(ctx context.Context, in *LicensesForEquipAndMetricRequest, opts ...grpc.CallOption) (*LicensesForEquipAndMetricResponse, error) {
	out := new(LicensesForEquipAndMetricResponse)
	err := c.cc.Invoke(ctx, "/v1.LicenseService/LicensesForEquipAndMetric", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LicenseServiceServer is the server API for LicenseService service.
type LicenseServiceServer interface {
	ListAcqRightsForProduct(context.Context, *ListAcquiredRightsForProductRequest) (*ListAcquiredRightsForProductResponse, error)
	CreateProductAggregation(context.Context, *ProductAggregation) (*ProductAggregation, error)
	// update product aggregation
	UpdateProductAggregation(context.Context, *UpdateProductAggregationRequest) (*ProductAggregation, error)
	ListAcqRightsForProductAggregation(context.Context, *ListAcqRightsForProductAggregationRequest) (*ListAcqRightsForProductAggregationResponse, error)
	DeleteProductAggregation(context.Context, *DeleteProductAggregationRequest) (*ListProductAggregationResponse, error)
	ProductLicensesForMetric(context.Context, *ProductLicensesForMetricRequest) (*ProductLicensesForMetricResponse, error)
	// TODO: Should be in metric services
	MetricesForEqType(context.Context, *MetricesForEqTypeRequest) (*ListMetricResponse, error)
	LicensesForEquipAndMetric(context.Context, *LicensesForEquipAndMetricRequest) (*LicensesForEquipAndMetricResponse, error)
}

func RegisterLicenseServiceServer(s *grpc.Server, srv LicenseServiceServer) {
	s.RegisterService(&_LicenseService_serviceDesc, srv)
}

func _LicenseService_ListAcqRightsForProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAcquiredRightsForProductRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LicenseServiceServer).ListAcqRightsForProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.LicenseService/ListAcqRightsForProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LicenseServiceServer).ListAcqRightsForProduct(ctx, req.(*ListAcquiredRightsForProductRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LicenseService_CreateProductAggregation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProductAggregation)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LicenseServiceServer).CreateProductAggregation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.LicenseService/CreateProductAggregation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LicenseServiceServer).CreateProductAggregation(ctx, req.(*ProductAggregation))
	}
	return interceptor(ctx, in, info, handler)
}

func _LicenseService_UpdateProductAggregation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateProductAggregationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LicenseServiceServer).UpdateProductAggregation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.LicenseService/UpdateProductAggregation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LicenseServiceServer).UpdateProductAggregation(ctx, req.(*UpdateProductAggregationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LicenseService_ListAcqRightsForProductAggregation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAcqRightsForProductAggregationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LicenseServiceServer).ListAcqRightsForProductAggregation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.LicenseService/ListAcqRightsForProductAggregation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LicenseServiceServer).ListAcqRightsForProductAggregation(ctx, req.(*ListAcqRightsForProductAggregationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LicenseService_DeleteProductAggregation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteProductAggregationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LicenseServiceServer).DeleteProductAggregation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.LicenseService/DeleteProductAggregation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LicenseServiceServer).DeleteProductAggregation(ctx, req.(*DeleteProductAggregationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LicenseService_ProductLicensesForMetric_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProductLicensesForMetricRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LicenseServiceServer).ProductLicensesForMetric(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.LicenseService/ProductLicensesForMetric",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LicenseServiceServer).ProductLicensesForMetric(ctx, req.(*ProductLicensesForMetricRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LicenseService_MetricesForEqType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MetricesForEqTypeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LicenseServiceServer).MetricesForEqType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.LicenseService/MetricesForEqType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LicenseServiceServer).MetricesForEqType(ctx, req.(*MetricesForEqTypeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LicenseService_LicensesForEquipAndMetric_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LicensesForEquipAndMetricRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LicenseServiceServer).LicensesForEquipAndMetric(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.LicenseService/LicensesForEquipAndMetric",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LicenseServiceServer).LicensesForEquipAndMetric(ctx, req.(*LicensesForEquipAndMetricRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LicenseService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.LicenseService",
	HandlerType: (*LicenseServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListAcqRightsForProduct",
			Handler:    _LicenseService_ListAcqRightsForProduct_Handler,
		},
		{
			MethodName: "CreateProductAggregation",
			Handler:    _LicenseService_CreateProductAggregation_Handler,
		},
		{
			MethodName: "UpdateProductAggregation",
			Handler:    _LicenseService_UpdateProductAggregation_Handler,
		},
		{
			MethodName: "ListAcqRightsForProductAggregation",
			Handler:    _LicenseService_ListAcqRightsForProductAggregation_Handler,
		},
		{
			MethodName: "DeleteProductAggregation",
			Handler:    _LicenseService_DeleteProductAggregation_Handler,
		},
		{
			MethodName: "ProductLicensesForMetric",
			Handler:    _LicenseService_ProductLicensesForMetric_Handler,
		},
		{
			MethodName: "MetricesForEqType",
			Handler:    _LicenseService_MetricesForEqType_Handler,
		},
		{
			MethodName: "LicensesForEquipAndMetric",
			Handler:    _LicenseService_LicensesForEquipAndMetric_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "license.proto",
}

func init() { proto.RegisterFile("license.proto", fileDescriptor_license_929192c929500bc1) }

var fileDescriptor_license_929192c929500bc1 = []byte{
	// 1769 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x58, 0xcd, 0x73, 0x1b, 0x49,
	0x15, 0xcf, 0xe8, 0x73, 0xe6, 0xc9, 0x76, 0x94, 0xae, 0xdd, 0x64, 0x2c, 0x92, 0xb5, 0x76, 0xe2,
	0x04, 0xc5, 0x59, 0x59, 0x6b, 0x43, 0x15, 0x21, 0x40, 0x2d, 0x72, 0xbc, 0x21, 0xaa, 0x04, 0x7b,
	0x6b, 0xe2, 0x40, 0xb1, 0xc0, 0x8a, 0xce, 0x4c, 0x5b, 0x3b, 0xc5, 0x68, 0x66, 0x3c, 0xdd, 0x92,
	0xcb, 0xeb, 0xf2, 0x25, 0x27, 0x8a, 0x0b, 0x07, 0xee, 0x50, 0x14, 0x55, 0xdc, 0xf8, 0x33, 0xb8,
	0x70, 0xe0, 0xc2, 0x91, 0x0b, 0x07, 0xf8, 0x27, 0xf6, 0x44, 0xf5, 0xc7, 0x8c, 0x46, 0x1a, 0x7d,
	0xb8, 0x8a, 0x93, 0xd4, 0xaf, 0x7f, 0xdd, 0xef, 0xf5, 0xef, 0x7d, 0xf4, 0xeb, 0x81, 0x75, 0xdf,
	0x73, 0x48, 0x40, 0xc9, 0x6e, 0x14, 0x87, 0x2c, 0x44, 0x85, 0xf1, 0x5e, 0xe3, 0xee, 0x20, 0x0c,
	0x07, 0x3e, 0xe9, 0xe0, 0xc8, 0xeb, 0xe0, 0x20, 0x08, 0x19, 0x66, 0x5e, 0x18, 0x50, 0x89, 0x68,
	0x7c, 0x24, 0x7e, 0x9c, 0xf6, 0x80, 0x04, 0x6d, 0x7a, 0x8e, 0x07, 0x03, 0x12, 0x77, 0xc2, 0x48,
	0x20, 0xe6, 0xa0, 0xef, 0x8c, 0xb1, 0xef, 0xb9, 0x98, 0x91, 0x4e, 0xf2, 0x47, 0x4e, 0x58, 0xff,
	0xd5, 0xa0, 0xf9, 0x4a, 0xaa, 0xa6, 0xcf, 0xc3, 0xf8, 0xd3, 0xb3, 0x91, 0x17, 0x75, 0x03, 0xf7,
	0xc7, 0x84, 0xc5, 0x9e, 0x63, 0x93, 0xb3, 0x11, 0xa1, 0x0c, 0xdd, 0x03, 0x20, 0x7c, 0xa2, 0xcf,
	0x2e, 0x22, 0x62, 0x6a, 0x4d, 0xad, 0x65, 0xd8, 0x86, 0x90, 0x9c, 0x5c, 0x44, 0x04, 0x6d, 0x82,
	0x2e, 0xa7, 0x3d, 0xd7, 0x2c, 0x88, 0xc9, 0xaa, 0x18, 0xf7, 0x5c, 0xb4, 0x05, 0xb5, 0xa1, 0xd8,
	0x4a, 0x2e, 0x2d, 0x8a, 0x59, 0x90, 0x22, 0xb1, 0x76, 0x02, 0x08, 0xf0, 0x90, 0x98, 0xa5, 0x2c,
	0xe0, 0x08, 0x0f, 0x09, 0x6a, 0x03, 0x60, 0xc6, 0x62, 0xef, 0xed, 0x88, 0x11, 0x6a, 0x96, 0x9b,
	0xc5, 0x56, 0x6d, 0x7f, 0x7d, 0x77, 0xbc, 0xb7, 0xdb, 0x4d, 0xa4, 0x76, 0x06, 0x80, 0x6e, 0x43,
	0x85, 0x3a, 0x61, 0x44, 0xa8, 0x59, 0x69, 0x16, 0x5b, 0x86, 0xad, 0x46, 0x96, 0x0b, 0x1f, 0x2e,
	0x39, 0x26, 0x8d, 0xc2, 0x80, 0x12, 0xf4, 0x09, 0xe8, 0xca, 0x0d, 0xd4, 0xd4, 0x84, 0xa6, 0xfb,
	0x5c, 0xd3, 0x67, 0x71, 0xe8, 0x8e, 0x1c, 0xa6, 0xd6, 0xe7, 0x97, 0xa7, 0x8b, 0xac, 0xbf, 0x69,
	0xb0, 0xb5, 0x02, 0x3d, 0x7b, 0x62, 0x2d, 0x77, 0xe2, 0x0f, 0x61, 0x2d, 0xf4, 0xdd, 0xbe, 0xd8,
	0xd4, 0x21, 0x54, 0x50, 0x5a, 0xb4, 0x6b, 0xa1, 0xef, 0xbe, 0x52, 0x22, 0x0e, 0x09, 0xc8, 0x79,
	0x3f, 0x35, 0xb6, 0x28, 0x21, 0x01, 0x39, 0x4f, 0x0e, 0x89, 0xde, 0x83, 0xb2, 0x4b, 0x7c, 0x86,
	0x05, 0xa5, 0x45, 0x5b, 0x0e, 0xd0, 0x03, 0xa8, 0x46, 0xd2, 0x3e, 0xb3, 0xdc, 0xd4, 0x5a, 0xb5,
	0xfd, 0x5a, 0xe6, 0x80, 0x76, 0x32, 0x67, 0xed, 0x82, 0x29, 0xad, 0x55, 0x6c, 0x71, 0x57, 0x25,
	0xc1, 0x80, 0xa0, 0x94, 0x09, 0x03, 0xf1, 0xdf, 0xfa, 0x6a, 0xf6, 0xd8, 0x7c, 0xd9, 0x74, 0x0c,
	0x6d, 0x82, 0x4e, 0xcf, 0x3d, 0xb7, 0xcf, 0xf0, 0x40, 0x2d, 0xad, 0xf2, 0xf1, 0x09, 0x1e, 0xcc,
	0x32, 0x52, 0xc8, 0x31, 0xf2, 0x0d, 0x30, 0x46, 0x81, 0xc7, 0xfa, 0x4e, 0x48, 0x99, 0x38, 0xab,
	0x66, 0xeb, 0x5c, 0xf0, 0x2c, 0xa4, 0xcc, 0xfa, 0xad, 0x06, 0xcd, 0xc5, 0xca, 0x95, 0x67, 0x1f,
	0xc2, 0x46, 0x30, 0x1a, 0x3e, 0x8b, 0x58, 0x42, 0xa1, 0xb0, 0xa1, 0x64, 0xcf, 0x48, 0x79, 0xa4,
	0xb3, 0x90, 0x61, 0x5f, 0xaa, 0x2a, 0x08, 0x55, 0x86, 0x90, 0x70, 0x5d, 0xb3, 0x96, 0x16, 0x67,
	0x2d, 0xb5, 0xbe, 0x07, 0x8f, 0x5e, 0x79, 0x94, 0x75, 0x9d, 0x33, 0xdb, 0x1b, 0x7c, 0xc9, 0xb8,
	0x25, 0xca, 0xb6, 0xee, 0x60, 0x10, 0x93, 0x81, 0x48, 0xca, 0x84, 0x92, 0x0d, 0x28, 0xf4, 0x0e,
	0x15, 0x19, 0x85, 0xde, 0xa1, 0x75, 0x0a, 0x3b, 0xd7, 0x59, 0xac, 0x8e, 0xf4, 0x04, 0x00, 0x3b,
	0x67, 0xfd, 0x58, 0x40, 0x55, 0xb8, 0x6e, 0x66, 0xbc, 0xd9, 0x75, 0xce, 0x46, 0x5e, 0x4c, 0x5c,
	0xb9, 0x97, 0x6d, 0xe0, 0x64, 0x5b, 0x2b, 0x80, 0xad, 0x37, 0x11, 0xaf, 0x01, 0x8b, 0x4d, 0x43,
	0x50, 0xca, 0x44, 0xa7, 0xf8, 0x8f, 0xbe, 0x03, 0x35, 0x3c, 0x41, 0x0a, 0x72, 0x6a, 0xfb, 0xef,
	0x73, 0x8d, 0x72, 0xb7, 0xec, 0x36, 0x59, 0xa4, 0xf5, 0x07, 0x0d, 0x6e, 0xe5, 0x20, 0x73, 0x55,
	0x3c, 0x80, 0x0d, 0xec, 0xba, 0xc4, 0xed, 0xab, 0x40, 0xe4, 0xc1, 0xcf, 0xb3, 0x78, 0x5d, 0x48,
	0x95, 0xb9, 0x14, 0x3d, 0x82, 0x7a, 0x4c, 0x86, 0xe1, 0x38, 0x0b, 0x2c, 0x0a, 0xe0, 0x4d, 0x25,
	0x4f, 0xa1, 0xf7, 0x61, 0x5d, 0x41, 0x84, 0xcb, 0xa8, 0x59, 0x12, 0xb8, 0x35, 0x25, 0xe4, 0x4e,
	0xa3, 0xd6, 0x1e, 0x6c, 0x1d, 0x12, 0x9f, 0x2c, 0x23, 0x64, 0xd6, 0x57, 0xbf, 0x80, 0x0f, 0xb8,
	0xaf, 0x96, 0xf8, 0xe7, 0x29, 0xac, 0x65, 0x48, 0x48, 0x3c, 0x74, 0x3b, 0xeb, 0xa1, 0xcc, 0xaa,
	0x29, 0xac, 0xf5, 0x2f, 0x0d, 0x50, 0x1e, 0x34, 0x6b, 0x44, 0x4a, 0x61, 0x21, 0x43, 0xe1, 0x6d,
	0xa8, 0x10, 0xd7, 0x63, 0x61, 0xac, 0xa2, 0x53, 0x8d, 0xae, 0x45, 0x04, 0x5f, 0x2c, 0x83, 0x59,
	0x54, 0x07, 0xc3, 0x56, 0x23, 0xd4, 0x00, 0x3d, 0x25, 0x5a, 0xd6, 0xd5, 0x74, 0x8c, 0x3e, 0x4e,
	0x37, 0xa6, 0xfd, 0xd3, 0x91, 0xef, 0x9b, 0x55, 0x71, 0xd0, 0xa9, 0xc2, 0x92, 0x68, 0xa1, 0xcf,
	0x47, 0xbe, 0x6f, 0x7d, 0x1f, 0x10, 0xe7, 0x2e, 0x97, 0xa2, 0xfa, 0x50, 0xd5, 0x1c, 0xc5, 0x15,
	0xf0, 0x2d, 0x92, 0x1a, 0x9b, 0xcc, 0x59, 0x36, 0x54, 0x54, 0x25, 0x9d, 0x53, 0x89, 0xe6, 0x52,
	0xd2, 0x84, 0x9a, 0x4b, 0xa8, 0x13, 0x7b, 0xe2, 0x7a, 0x54, 0xbc, 0x64, 0x45, 0xd6, 0x0f, 0xe1,
	0xbe, 0xca, 0xbc, 0x4c, 0xca, 0x4c, 0xd2, 0x6f, 0x75, 0x0d, 0xb3, 0x7e, 0x05, 0xdb, 0xcb, 0x77,
	0xf8, 0xbf, 0xb3, 0xf6, 0xcf, 0x45, 0xa8, 0x2a, 0x10, 0x32, 0x21, 0x51, 0x3c, 0x5b, 0x4b, 0xe7,
	0x9d, 0xdf, 0x84, 0xea, 0x98, 0xc4, 0x74, 0x72, 0xf6, 0x64, 0xc8, 0xfd, 0xea, 0x60, 0x46, 0x06,
	0x61, 0x7c, 0xa1, 0xae, 0xde, 0x74, 0x9c, 0x09, 0xa4, 0xf2, 0x54, 0x20, 0x4d, 0x62, 0xa4, 0x32,
	0x15, 0x23, 0xf9, 0x12, 0x5b, 0x6d, 0x6a, 0xad, 0x72, 0xae, 0xc4, 0x4a, 0x5c, 0xd7, 0x39, 0x4b,
	0x71, 0x7a, 0x8a, 0xcb, 0x48, 0xd1, 0x5d, 0x98, 0x14, 0x5e, 0xd3, 0x98, 0xad, 0xc4, 0xc2, 0xa7,
	0x3e, 0xc3, 0x47, 0xa3, 0xe1, 0x5b, 0x12, 0x9b, 0x20, 0xb6, 0xc8, 0x8a, 0xf8, 0x7a, 0x31, 0x14,
	0xeb, 0x6b, 0x72, 0x7d, 0x2a, 0x40, 0x1f, 0xc1, 0xad, 0x60, 0x34, 0x3c, 0x3e, 0xed, 0x46, 0x91,
	0xef, 0x39, 0x2a, 0x45, 0xd7, 0xc4, 0x2e, 0xf9, 0x09, 0xd4, 0x82, 0x9b, 0xc1, 0x68, 0x18, 0x9e,
	0x8a, 0xab, 0x7c, 0x48, 0x02, 0x46, 0xcd, 0x75, 0x81, 0x9d, 0x15, 0x5b, 0xff, 0xd6, 0xa0, 0x96,
	0x59, 0x8a, 0xb6, 0x61, 0x1d, 0x4f, 0x86, 0x3d, 0x57, 0xf9, 0x6b, 0x5a, 0x38, 0xd7, 0x6b, 0x8f,
	0xe1, 0x56, 0x06, 0xd4, 0x0f, 0xcf, 0x03, 0x92, 0xe4, 0x74, 0x3d, 0x33, 0x71, 0xcc, 0xe5, 0x8a,
	0xd4, 0xe3, 0xd3, 0x5e, 0x40, 0x19, 0x16, 0xa4, 0x96, 0x52, 0x52, 0x33, 0x52, 0x6e, 0x8e, 0xb0,
	0x38, 0xa9, 0x8f, 0xc2, 0xb7, 0x65, 0x7b, 0x5a, 0x38, 0x4d, 0x7d, 0x65, 0x86, 0x7a, 0xeb, 0xaf,
	0x05, 0x78, 0x7f, 0x6e, 0xb4, 0xa2, 0x3a, 0x14, 0x5f, 0xbf, 0x7c, 0xa3, 0x8e, 0xc8, 0xff, 0x66,
	0x03, 0xb5, 0x30, 0x1d, 0xa8, 0x93, 0x30, 0x2a, 0xae, 0x08, 0xa3, 0xd2, 0x35, 0xc3, 0xa8, 0xbc,
	0x3a, 0x8c, 0x2a, 0x2b, 0xc2, 0xa8, 0xba, 0x22, 0x8c, 0xf4, 0xd9, 0x30, 0xb2, 0x60, 0x0d, 0x8f,
	0x07, 0x6f, 0x02, 0x8f, 0x7d, 0xc6, 0xab, 0x93, 0x8a, 0xd3, 0x29, 0x99, 0xf5, 0x97, 0x12, 0x18,
	0x69, 0xb3, 0x9a, 0xab, 0xe1, 0x8f, 0xb3, 0xae, 0x3f, 0xb8, 0xf3, 0xf5, 0xc1, 0x7b, 0x31, 0xda,
	0xaf, 0x7f, 0xf1, 0xf3, 0x76, 0xbf, 0xdb, 0xfe, 0x1c, 0xb7, 0xbf, 0xfa, 0xb8, 0xfd, 0xdd, 0x5f,
	0x3e, 0xde, 0x56, 0x31, 0xf1, 0x04, 0x0c, 0x17, 0x33, 0x3c, 0x69, 0xa6, 0x37, 0x64, 0x2f, 0x7c,
	0x88, 0x19, 0xe6, 0x3d, 0x1a, 0x3d, 0x58, 0xfb, 0xfa, 0xc0, 0x78, 0xa7, 0x55, 0x4c, 0xcd, 0x2c,
	0x98, 0x45, 0x5b, 0x77, 0xd5, 0x04, 0xef, 0x5c, 0xa2, 0xd8, 0x1b, 0xe2, 0xf8, 0xa2, 0xff, 0x6b,
	0x22, 0x93, 0x5d, 0xb7, 0x41, 0x89, 0x5e, 0x92, 0x0b, 0x71, 0x4e, 0x8f, 0x46, 0x3e, 0xbe, 0x20,
	0xae, 0xa0, 0x52, 0xb7, 0x27, 0x02, 0xf4, 0x01, 0x00, 0x25, 0x38, 0x76, 0xbe, 0xc4, 0x6f, 0x7d,
	0x22, 0x68, 0xd4, 0xed, 0x8c, 0x84, 0x07, 0x6b, 0x84, 0x63, 0x12, 0xb0, 0xbe, 0xe7, 0x92, 0x80,
	0x79, 0xa7, 0x9e, 0x62, 0x53, 0xb7, 0xeb, 0x72, 0xa2, 0x97, 0xca, 0x79, 0x3b, 0x37, 0xc4, 0x51,
	0x44, 0xdc, 0x3e, 0x0b, 0x05, 0xa5, 0x86, 0xad, 0x4b, 0xc1, 0x49, 0xc8, 0xed, 0xa0, 0xde, 0x70,
	0xe4, 0x63, 0x46, 0x5c, 0x41, 0xa7, 0x6e, 0x4f, 0x04, 0x68, 0x13, 0xaa, 0x5e, 0xc0, 0xfa, 0x63,
	0xec, 0xcb, 0x94, 0x7f, 0x71, 0xc3, 0xae, 0x78, 0x01, 0xfb, 0x09, 0xf6, 0xd1, 0x3d, 0x30, 0x4e,
	0xfd, 0x10, 0xcb, 0x49, 0x9e, 0xef, 0x85, 0x17, 0x37, 0x6c, 0x5d, 0x88, 0xf8, 0xf4, 0x16, 0x00,
	0x65, 0xb1, 0x17, 0x0c, 0xc4, 0x3c, 0xcf, 0x74, 0xe3, 0xc5, 0x0d, 0xdb, 0x90, 0x32, 0x0e, 0x68,
	0x42, 0x4d, 0x6d, 0xdd, 0x0f, 0x7d, 0x57, 0xe6, 0xf7, 0x0b, 0xcd, 0x36, 0xe4, 0xf6, 0xc7, 0xbe,
	0xcb, 0x93, 0x27, 0xd5, 0x20, 0x30, 0x1b, 0x42, 0x8b, 0x66, 0xd7, 0x12, 0x2d, 0x1c, 0xf5, 0x10,
	0x36, 0x26, 0x8a, 0x04, 0xec, 0xa6, 0x50, 0xa6, 0xd9, 0x6b, 0xa9, 0xb2, 0x63, 0xdf, 0x3d, 0x28,
	0x43, 0x71, 0x8c, 0xfd, 0x03, 0x03, 0xaa, 0xbc, 0xdb, 0x1f, 0x63, 0x7f, 0xe7, 0x09, 0x18, 0xa9,
	0x23, 0x51, 0x0d, 0xaa, 0x6f, 0x8e, 0x5e, 0x1e, 0x1d, 0xff, 0xf4, 0xa8, 0x7e, 0x03, 0x01, 0x54,
	0x5e, 0x9f, 0xd8, 0xbd, 0xa3, 0x1f, 0xd5, 0x35, 0x54, 0x85, 0x62, 0xef, 0xe8, 0xa4, 0x5e, 0x40,
	0x06, 0x94, 0x9f, 0xbf, 0x3a, 0xee, 0x9e, 0xd4, 0x8b, 0xfb, 0xef, 0x00, 0x36, 0x54, 0xf3, 0xfb,
	0x9a, 0xc4, 0x63, 0xcf, 0x21, 0xe8, 0x8f, 0x1a, 0xdc, 0x59, 0xd0, 0x4d, 0xa2, 0x6f, 0xf2, 0x98,
	0xb9, 0xc6, 0x85, 0xd7, 0x68, 0xad, 0x06, 0xca, 0x7b, 0xcd, 0xda, 0x7b, 0xf7, 0xcf, 0xff, 0xfc,
	0xbe, 0xf0, 0x18, 0x3d, 0x12, 0xcf, 0xd5, 0xf1, 0x5e, 0x47, 0xdd, 0xf8, 0x9d, 0xcb, 0xe4, 0xc6,
	0xbc, 0xea, 0x60, 0xb5, 0x89, 0xbc, 0xfc, 0x10, 0x03, 0xf3, 0x59, 0x4c, 0xe6, 0xb6, 0xa1, 0x68,
	0x41, 0x9b, 0xd4, 0x58, 0x20, 0xb7, 0x5a, 0x42, 0xbd, 0x65, 0xdd, 0x9b, 0x51, 0x4f, 0x3b, 0xd9,
	0xbe, 0xea, 0xa9, 0xb6, 0x83, 0x7e, 0xa3, 0x81, 0xb9, 0xa8, 0xfb, 0x45, 0xf7, 0x27, 0xdd, 0xec,
	0xc2, 0x56, 0x70, 0xa1, 0x0d, 0x1d, 0x61, 0xc3, 0xa3, 0xc6, 0xf6, 0x52, 0x1b, 0x3a, 0x97, 0x3c,
	0x93, 0xaf, 0xb8, 0x29, 0x7f, 0xd7, 0xc0, 0x5a, 0xdd, 0xf0, 0xa3, 0x76, 0xc6, 0x09, 0xab, 0x5f,
	0x15, 0x8d, 0xdd, 0xeb, 0xc2, 0x95, 0xe7, 0x3e, 0x15, 0x66, 0x7f, 0x82, 0x7e, 0xb0, 0xdc, 0x6c,
	0x25, 0x1d, 0x7b, 0xe4, 0xbc, 0x73, 0xd9, 0x3b, 0xcc, 0x79, 0xf3, 0x77, 0x1a, 0x98, 0x8b, 0x9a,
	0x68, 0xc9, 0xeb, 0x8a, 0x16, 0xbb, 0x61, 0x25, 0x86, 0x2f, 0x31, 0x76, 0x47, 0x18, 0xbb, 0xbd,
	0x63, 0xad, 0xe0, 0xb8, 0x77, 0x78, 0x85, 0xfe, 0xa4, 0x81, 0xb9, 0xe8, 0x61, 0x88, 0xe6, 0x3c,
	0xec, 0x73, 0x6f, 0xd6, 0xc6, 0xf6, 0x72, 0x90, 0xb2, 0xe9, 0xa9, 0xb0, 0xe9, 0xdb, 0x56, 0x67,
	0x49, 0xe8, 0xcb, 0xcb, 0xad, 0x73, 0x99, 0x79, 0x3d, 0x8a, 0x10, 0xb8, 0x80, 0x5b, 0xb9, 0x87,
	0x36, 0xba, 0x3b, 0xe9, 0x7b, 0xf3, 0xef, 0x6f, 0x19, 0x7e, 0xf9, 0xfe, 0xd9, 0xda, 0x15, 0x66,
	0xb4, 0xd0, 0xc3, 0xc4, 0x0c, 0x92, 0x76, 0x25, 0x1d, 0x7e, 0x5f, 0xd0, 0xce, 0x25, 0xff, 0x49,
	0x6c, 0x41, 0xff, 0xd0, 0x60, 0x73, 0xe1, 0x27, 0x11, 0xb4, 0x2d, 0xb5, 0x2c, 0xff, 0x30, 0xd4,
	0x78, 0xb0, 0x02, 0xa5, 0x4c, 0x73, 0x85, 0x69, 0x5f, 0x58, 0x3f, 0x5b, 0x6c, 0xda, 0xe4, 0xfb,
	0xd2, 0x55, 0x32, 0xf0, 0xdc, 0x94, 0x37, 0x05, 0xca, 0x7c, 0x4a, 0xba, 0xca, 0x71, 0x79, 0x50,
	0xfa, 0xbc, 0x30, 0xde, 0x7b, 0x5b, 0x11, 0xdf, 0xb5, 0xbe, 0xf5, 0xbf, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xd4, 0xf2, 0xf7, 0xdb, 0x51, 0x13, 0x00, 0x00,
}
