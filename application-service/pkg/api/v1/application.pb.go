// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: application.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type SortOrder int32

const (
	SortOrder_asc  SortOrder = 0
	SortOrder_desc SortOrder = 1
)

// Enum value maps for SortOrder.
var (
	SortOrder_name = map[int32]string{
		0: "asc",
		1: "desc",
	}
	SortOrder_value = map[string]int32{
		"asc":  0,
		"desc": 1,
	}
)

func (x SortOrder) Enum() *SortOrder {
	p := new(SortOrder)
	*p = x
	return p
}

func (x SortOrder) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SortOrder) Descriptor() protoreflect.EnumDescriptor {
	return file_application_proto_enumTypes[0].Descriptor()
}

func (SortOrder) Type() protoreflect.EnumType {
	return &file_application_proto_enumTypes[0]
}

func (x SortOrder) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SortOrder.Descriptor instead.
func (SortOrder) EnumDescriptor() ([]byte, []int) {
	return file_application_proto_rawDescGZIP(), []int{0}
}

type ListApplicationsRequest_SortBy int32

const (
	ListApplicationsRequest_name              ListApplicationsRequest_SortBy = 0
	ListApplicationsRequest_owner             ListApplicationsRequest_SortBy = 1
	ListApplicationsRequest_num_of_instances  ListApplicationsRequest_SortBy = 2
	ListApplicationsRequest_num_of_products   ListApplicationsRequest_SortBy = 3
	ListApplicationsRequest_num_of_equipments ListApplicationsRequest_SortBy = 4
	ListApplicationsRequest_domain            ListApplicationsRequest_SortBy = 5
	ListApplicationsRequest_total_cost        ListApplicationsRequest_SortBy = 6
	ListApplicationsRequest_obsolescence_risk ListApplicationsRequest_SortBy = 7
)

// Enum value maps for ListApplicationsRequest_SortBy.
var (
	ListApplicationsRequest_SortBy_name = map[int32]string{
		0: "name",
		1: "owner",
		2: "num_of_instances",
		3: "num_of_products",
		4: "num_of_equipments",
		5: "domain",
		6: "total_cost",
		7: "obsolescence_risk",
	}
	ListApplicationsRequest_SortBy_value = map[string]int32{
		"name":              0,
		"owner":             1,
		"num_of_instances":  2,
		"num_of_products":   3,
		"num_of_equipments": 4,
		"domain":            5,
		"total_cost":        6,
		"obsolescence_risk": 7,
	}
)

func (x ListApplicationsRequest_SortBy) Enum() *ListApplicationsRequest_SortBy {
	p := new(ListApplicationsRequest_SortBy)
	*p = x
	return p
}

func (x ListApplicationsRequest_SortBy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListApplicationsRequest_SortBy) Descriptor() protoreflect.EnumDescriptor {
	return file_application_proto_enumTypes[1].Descriptor()
}

func (ListApplicationsRequest_SortBy) Type() protoreflect.EnumType {
	return &file_application_proto_enumTypes[1]
}

func (x ListApplicationsRequest_SortBy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListApplicationsRequest_SortBy.Descriptor instead.
func (ListApplicationsRequest_SortBy) EnumDescriptor() ([]byte, []int) {
	return file_application_proto_rawDescGZIP(), []int{16, 0}
}

type ListInstancesRequest_SortBy int32

const (
	ListInstancesRequest_instance_id          ListInstancesRequest_SortBy = 0
	ListInstancesRequest_instance_environment ListInstancesRequest_SortBy = 1
	ListInstancesRequest_num_of_products      ListInstancesRequest_SortBy = 2
	ListInstancesRequest_num_of_equipments    ListInstancesRequest_SortBy = 3
)

// Enum value maps for ListInstancesRequest_SortBy.
var (
	ListInstancesRequest_SortBy_name = map[int32]string{
		0: "instance_id",
		1: "instance_environment",
		2: "num_of_products",
		3: "num_of_equipments",
	}
	ListInstancesRequest_SortBy_value = map[string]int32{
		"instance_id":          0,
		"instance_environment": 1,
		"num_of_products":      2,
		"num_of_equipments":    3,
	}
)

func (x ListInstancesRequest_SortBy) Enum() *ListInstancesRequest_SortBy {
	p := new(ListInstancesRequest_SortBy)
	*p = x
	return p
}

func (x ListInstancesRequest_SortBy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListInstancesRequest_SortBy) Descriptor() protoreflect.EnumDescriptor {
	return file_application_proto_enumTypes[2].Descriptor()
}

func (ListInstancesRequest_SortBy) Type() protoreflect.EnumType {
	return &file_application_proto_enumTypes[2]
}

func (x ListInstancesRequest_SortBy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListInstancesRequest_SortBy.Descriptor instead.
func (ListInstancesRequest_SortBy) EnumDescriptor() ([]byte, []int) {
	return file_application_proto_rawDescGZIP(), []int{20, 0}
}

type GetEquipmentsByApplicationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope         string `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	ApplicationId string `protobuf:"bytes,2,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
}

func (x *GetEquipmentsByApplicationRequest) Reset() {
	*x = GetEquipmentsByApplicationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEquipmentsByApplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEquipmentsByApplicationRequest) ProtoMessage() {}

func (x *GetEquipmentsByApplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_application_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEquipmentsByApplicationRequest.ProtoReflect.Descriptor instead.
func (*GetEquipmentsByApplicationRequest) Descriptor() ([]byte, []int) {
	return file_application_proto_rawDescGZIP(), []int{0}
}

func (x *GetEquipmentsByApplicationRequest) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *GetEquipmentsByApplicationRequest) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

type GetEquipmentsByApplicationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EquipmentId []string `protobuf:"bytes,1,rep,name=equipment_id,json=equipmentId,proto3" json:"equipment_id,omitempty"`
}

func (x *GetEquipmentsByApplicationResponse) Reset() {
	*x = GetEquipmentsByApplicationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEquipmentsByApplicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEquipmentsByApplicationResponse) ProtoMessage() {}

func (x *GetEquipmentsByApplicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_application_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEquipmentsByApplicationResponse.ProtoReflect.Descriptor instead.
func (*GetEquipmentsByApplicationResponse) Descriptor() ([]byte, []int) {
	return file_application_proto_rawDescGZIP(), []int{1}
}

func (x *GetEquipmentsByApplicationResponse) GetEquipmentId() []string {
	if x != nil {
		return x.EquipmentId
	}
	return nil
}

type GetProductsByApplicationInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope         string `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	ApplicationId string `protobuf:"bytes,2,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
	InstanceId    string `protobuf:"bytes,3,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
}

func (x *GetProductsByApplicationInstanceRequest) Reset() {
	*x = GetProductsByApplicationInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductsByApplicationInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductsByApplicationInstanceRequest) ProtoMessage() {}

func (x *GetProductsByApplicationInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_application_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductsByApplicationInstanceRequest.ProtoReflect.Descriptor instead.
func (*GetProductsByApplicationInstanceRequest) Descriptor() ([]byte, []int) {
	return file_application_proto_rawDescGZIP(), []int{2}
}

func (x *GetProductsByApplicationInstanceRequest) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *GetProductsByApplicationInstanceRequest) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

func (x *GetProductsByApplicationInstanceRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

type GetProductsByApplicationInstanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId []string `protobuf:"bytes,1,rep,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
}

func (x *GetProductsByApplicationInstanceResponse) Reset() {
	*x = GetProductsByApplicationInstanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductsByApplicationInstanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductsByApplicationInstanceResponse) ProtoMessage() {}

func (x *GetProductsByApplicationInstanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_application_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductsByApplicationInstanceResponse.ProtoReflect.Descriptor instead.
func (*GetProductsByApplicationInstanceResponse) Descriptor() ([]byte, []int) {
	return file_application_proto_rawDescGZIP(), []int{3}
}

func (x *GetProductsByApplicationInstanceResponse) GetProductId() []string {
	if x != nil {
		return x.ProductId
	}
	return nil
}

type DropObscolenscenceDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope string `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
}

func (x *DropObscolenscenceDataRequest) Reset() {
	*x = DropObscolenscenceDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropObscolenscenceDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropObscolenscenceDataRequest) ProtoMessage() {}

func (x *DropObscolenscenceDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_application_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropObscolenscenceDataRequest.ProtoReflect.Descriptor instead.
func (*DropObscolenscenceDataRequest) Descriptor() ([]byte, []int) {
	return file_application_proto_rawDescGZIP(), []int{4}
}

func (x *DropObscolenscenceDataRequest) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

type DropObscolenscenceDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DropObscolenscenceDataResponse) Reset() {
	*x = DropObscolenscenceDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropObscolenscenceDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropObscolenscenceDataResponse) ProtoMessage() {}

func (x *DropObscolenscenceDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_application_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropObscolenscenceDataResponse.ProtoReflect.Descriptor instead.
func (*DropObscolenscenceDataResponse) Descriptor() ([]byte, []int) {
	return file_application_proto_rawDescGZIP(), []int{5}
}

func (x *DropObscolenscenceDataResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type UpsertApplicationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationId string `protobuf:"bytes,1,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Version       string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Owner         string `protobuf:"bytes,4,opt,name=owner,proto3" json:"owner,omitempty"`
	Domain        string `protobuf:"bytes,5,opt,name=domain,proto3" json:"domain,omitempty"`
	Scope         string `protobuf:"bytes,6,opt,name=scope,proto3" json:"scope,omitempty"`
}

func (x *UpsertApplicationRequest) Reset() {
	*x = UpsertApplicationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertApplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertApplicationRequest) ProtoMessage() {}

func (x *UpsertApplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_application_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertApplicationRequest.ProtoReflect.Descriptor instead.
func (*UpsertApplicationRequest) Descriptor() ([]byte, []int) {
	return file_application_proto_rawDescGZIP(), []int{6}
}

func (x *UpsertApplicationRequest) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

func (x *UpsertApplicationRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpsertApplicationRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *UpsertApplicationRequest) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *UpsertApplicationRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *UpsertApplicationRequest) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

type UpsertApplicationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *UpsertApplicationResponse) Reset() {
	*x = UpsertApplicationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertApplicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertApplicationResponse) ProtoMessage() {}

func (x *UpsertApplicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_application_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertApplicationResponse.ProtoReflect.Descriptor instead.
func (*UpsertApplicationResponse) Descriptor() ([]byte, []int) {
	return file_application_proto_rawDescGZIP(), []int{7}
}

func (x *UpsertApplicationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type DropApplicationDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope string `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
}

func (x *DropApplicationDataRequest) Reset() {
	*x = DropApplicationDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropApplicationDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropApplicationDataRequest) ProtoMessage() {}

func (x *DropApplicationDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_application_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropApplicationDataRequest.ProtoReflect.Descriptor instead.
func (*DropApplicationDataRequest) Descriptor() ([]byte, []int) {
	return file_application_proto_rawDescGZIP(), []int{8}
}

func (x *DropApplicationDataRequest) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

type DropApplicationDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DropApplicationDataResponse) Reset() {
	*x = DropApplicationDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropApplicationDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropApplicationDataResponse) ProtoMessage() {}

func (x *DropApplicationDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_application_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropApplicationDataResponse.ProtoReflect.Descriptor instead.
func (*DropApplicationDataResponse) Descriptor() ([]byte, []int) {
	return file_application_proto_rawDescGZIP(), []int{9}
}

func (x *DropApplicationDataResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type DeleteApplicationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationId string `protobuf:"bytes,1,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
}

func (x *DeleteApplicationRequest) Reset() {
	*x = DeleteApplicationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteApplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteApplicationRequest) ProtoMessage() {}

func (x *DeleteApplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_application_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteApplicationRequest.ProtoReflect.Descriptor instead.
func (*DeleteApplicationRequest) Descriptor() ([]byte, []int) {
	return file_application_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteApplicationRequest) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

type DeleteApplicationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DeleteApplicationResponse) Reset() {
	*x = DeleteApplicationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteApplicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteApplicationResponse) ProtoMessage() {}

func (x *DeleteApplicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_application_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteApplicationResponse.ProtoReflect.Descriptor instead.
func (*DeleteApplicationResponse) Descriptor() ([]byte, []int) {
	return file_application_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteApplicationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type UpsertInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationId string                          `protobuf:"bytes,1,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
	InstanceId    string                          `protobuf:"bytes,2,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	InstanceName  string                          `protobuf:"bytes,3,opt,name=instance_name,json=instanceName,proto3" json:"instance_name,omitempty"`
	Products      *UpsertInstanceRequestProduct   `protobuf:"bytes,4,opt,name=products,proto3" json:"products,omitempty"`
	Equipments    *UpsertInstanceRequestEquipment `protobuf:"bytes,5,opt,name=equipments,proto3" json:"equipments,omitempty"`
	//SCOPE BASED CHANGE
	Scope string `protobuf:"bytes,6,opt,name=scope,proto3" json:"scope,omitempty"`
}

func (x *UpsertInstanceRequest) Reset() {
	*x = UpsertInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertInstanceRequest) ProtoMessage() {}

func (x *UpsertInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_application_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertInstanceRequest.ProtoReflect.Descriptor instead.
func (*UpsertInstanceRequest) Descriptor() ([]byte, []int) {
	return file_application_proto_rawDescGZIP(), []int{12}
}

func (x *UpsertInstanceRequest) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

func (x *UpsertInstanceRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *UpsertInstanceRequest) GetInstanceName() string {
	if x != nil {
		return x.InstanceName
	}
	return ""
}

func (x *UpsertInstanceRequest) GetProducts() *UpsertInstanceRequestProduct {
	if x != nil {
		return x.Products
	}
	return nil
}

func (x *UpsertInstanceRequest) GetEquipments() *UpsertInstanceRequestEquipment {
	if x != nil {
		return x.Equipments
	}
	return nil
}

func (x *UpsertInstanceRequest) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

type UpsertInstanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *UpsertInstanceResponse) Reset() {
	*x = UpsertInstanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertInstanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertInstanceResponse) ProtoMessage() {}

func (x *UpsertInstanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_application_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertInstanceResponse.ProtoReflect.Descriptor instead.
func (*UpsertInstanceResponse) Descriptor() ([]byte, []int) {
	return file_application_proto_rawDescGZIP(), []int{13}
}

func (x *UpsertInstanceResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type DeleteInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationId string `protobuf:"bytes,1,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
	InstanceId    string `protobuf:"bytes,2,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
}

func (x *DeleteInstanceRequest) Reset() {
	*x = DeleteInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInstanceRequest) ProtoMessage() {}

func (x *DeleteInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_application_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInstanceRequest.ProtoReflect.Descriptor instead.
func (*DeleteInstanceRequest) Descriptor() ([]byte, []int) {
	return file_application_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteInstanceRequest) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

func (x *DeleteInstanceRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

type DeleteInstanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DeleteInstanceResponse) Reset() {
	*x = DeleteInstanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInstanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInstanceResponse) ProtoMessage() {}

func (x *DeleteInstanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_application_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInstanceResponse.ProtoReflect.Descriptor instead.
func (*DeleteInstanceResponse) Descriptor() ([]byte, []int) {
	return file_application_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteInstanceResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ListApplicationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum      int32                          `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
	PageSize     int32                          `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	SortBy       ListApplicationsRequest_SortBy `protobuf:"varint,3,opt,name=sort_by,json=sortBy,proto3,enum=optisam.applications.v1.ListApplicationsRequest_SortBy" json:"sort_by,omitempty"`
	SortOrder    SortOrder                      `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=optisam.applications.v1.SortOrder" json:"sort_order,omitempty"`
	SearchParams *ApplicationSearchParams       `protobuf:"bytes,5,opt,name=search_params,json=searchParams,proto3" json:"search_params,omitempty"`
	Scopes       []string                       `protobuf:"bytes,6,rep,name=scopes,proto3" json:"scopes,omitempty"`
}

func (x *ListApplicationsRequest) Reset() {
	*x = ListApplicationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListApplicationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListApplicationsRequest) ProtoMessage() {}

func (x *ListApplicationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_application_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListApplicationsRequest.ProtoReflect.Descriptor instead.
func (*ListApplicationsRequest) Descriptor() ([]byte, []int) {
	return file_application_proto_rawDescGZIP(), []int{16}
}

func (x *ListApplicationsRequest) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *ListApplicationsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListApplicationsRequest) GetSortBy() ListApplicationsRequest_SortBy {
	if x != nil {
		return x.SortBy
	}
	return ListApplicationsRequest_name
}

func (x *ListApplicationsRequest) GetSortOrder() SortOrder {
	if x != nil {
		return x.SortOrder
	}
	return SortOrder_asc
}

func (x *ListApplicationsRequest) GetSearchParams() *ApplicationSearchParams {
	if x != nil {
		return x.SearchParams
	}
	return nil
}

func (x *ListApplicationsRequest) GetScopes() []string {
	if x != nil {
		return x.Scopes
	}
	return nil
}

type ListApplicationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalRecords int32          `protobuf:"varint,1,opt,name=totalRecords,proto3" json:"totalRecords,omitempty"`
	Applications []*Application `protobuf:"bytes,2,rep,name=applications,proto3" json:"applications,omitempty"`
}

func (x *ListApplicationsResponse) Reset() {
	*x = ListApplicationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListApplicationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListApplicationsResponse) ProtoMessage() {}

func (x *ListApplicationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_application_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListApplicationsResponse.ProtoReflect.Descriptor instead.
func (*ListApplicationsResponse) Descriptor() ([]byte, []int) {
	return file_application_proto_rawDescGZIP(), []int{17}
}

func (x *ListApplicationsResponse) GetTotalRecords() int32 {
	if x != nil {
		return x.TotalRecords
	}
	return 0
}

func (x *ListApplicationsResponse) GetApplications() []*Application {
	if x != nil {
		return x.Applications
	}
	return nil
}

type Application struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationId    string  `protobuf:"bytes,1,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
	Name             string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Owner            string  `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty"`
	NumOfInstances   int32   `protobuf:"varint,4,opt,name=num_of_instances,json=numOfInstances,proto3" json:"num_of_instances,omitempty"`
	NumOfProducts    int32   `protobuf:"varint,5,opt,name=num_of_products,json=numOfProducts,proto3" json:"num_of_products,omitempty"`
	TotalCost        float64 `protobuf:"fixed64,6,opt,name=total_cost,json=totalCost,proto3" json:"total_cost,omitempty"`
	Domain           string  `protobuf:"bytes,7,opt,name=domain,proto3" json:"domain,omitempty"`
	ObsolescenceRisk string  `protobuf:"bytes,8,opt,name=obsolescence_risk,json=obsolescenceRisk,proto3" json:"obsolescence_risk,omitempty"`
	NumOfEquipments  int32   `protobuf:"varint,9,opt,name=num_of_equipments,json=numOfEquipments,proto3" json:"num_of_equipments,omitempty"`
}

func (x *Application) Reset() {
	*x = Application{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Application) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Application) ProtoMessage() {}

func (x *Application) ProtoReflect() protoreflect.Message {
	mi := &file_application_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Application.ProtoReflect.Descriptor instead.
func (*Application) Descriptor() ([]byte, []int) {
	return file_application_proto_rawDescGZIP(), []int{18}
}

func (x *Application) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

func (x *Application) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Application) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *Application) GetNumOfInstances() int32 {
	if x != nil {
		return x.NumOfInstances
	}
	return 0
}

func (x *Application) GetNumOfProducts() int32 {
	if x != nil {
		return x.NumOfProducts
	}
	return 0
}

func (x *Application) GetTotalCost() float64 {
	if x != nil {
		return x.TotalCost
	}
	return 0
}

func (x *Application) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *Application) GetObsolescenceRisk() string {
	if x != nil {
		return x.ObsolescenceRisk
	}
	return ""
}

func (x *Application) GetNumOfEquipments() int32 {
	if x != nil {
		return x.NumOfEquipments
	}
	return 0
}

type ApplicationSearchParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name             *StringFilter `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Owner            *StringFilter `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	ProductId        *StringFilter `protobuf:"bytes,3,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	Domain           *StringFilter `protobuf:"bytes,4,opt,name=domain,proto3" json:"domain,omitempty"`
	ObsolescenceRisk *StringFilter `protobuf:"bytes,5,opt,name=obsolescence_risk,json=obsolescenceRisk,proto3" json:"obsolescence_risk,omitempty"`
}

func (x *ApplicationSearchParams) Reset() {
	*x = ApplicationSearchParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationSearchParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationSearchParams) ProtoMessage() {}

func (x *ApplicationSearchParams) ProtoReflect() protoreflect.Message {
	mi := &file_application_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationSearchParams.ProtoReflect.Descriptor instead.
func (*ApplicationSearchParams) Descriptor() ([]byte, []int) {
	return file_application_proto_rawDescGZIP(), []int{19}
}

func (x *ApplicationSearchParams) GetName() *StringFilter {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *ApplicationSearchParams) GetOwner() *StringFilter {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *ApplicationSearchParams) GetProductId() *StringFilter {
	if x != nil {
		return x.ProductId
	}
	return nil
}

func (x *ApplicationSearchParams) GetDomain() *StringFilter {
	if x != nil {
		return x.Domain
	}
	return nil
}

func (x *ApplicationSearchParams) GetObsolescenceRisk() *StringFilter {
	if x != nil {
		return x.ObsolescenceRisk
	}
	return nil
}

type ListInstancesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum      int32                       `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
	PageSize     int32                       `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	SortBy       ListInstancesRequest_SortBy `protobuf:"varint,3,opt,name=sort_by,json=sortBy,proto3,enum=optisam.applications.v1.ListInstancesRequest_SortBy" json:"sort_by,omitempty"`
	SortOrder    SortOrder                   `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=optisam.applications.v1.SortOrder" json:"sort_order,omitempty"`
	SearchParams *InstanceSearchParams       `protobuf:"bytes,5,opt,name=search_params,json=searchParams,proto3" json:"search_params,omitempty"`
	Scopes       []string                    `protobuf:"bytes,6,rep,name=scopes,proto3" json:"scopes,omitempty"`
}

func (x *ListInstancesRequest) Reset() {
	*x = ListInstancesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInstancesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInstancesRequest) ProtoMessage() {}

func (x *ListInstancesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_application_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInstancesRequest.ProtoReflect.Descriptor instead.
func (*ListInstancesRequest) Descriptor() ([]byte, []int) {
	return file_application_proto_rawDescGZIP(), []int{20}
}

func (x *ListInstancesRequest) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *ListInstancesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListInstancesRequest) GetSortBy() ListInstancesRequest_SortBy {
	if x != nil {
		return x.SortBy
	}
	return ListInstancesRequest_instance_id
}

func (x *ListInstancesRequest) GetSortOrder() SortOrder {
	if x != nil {
		return x.SortOrder
	}
	return SortOrder_asc
}

func (x *ListInstancesRequest) GetSearchParams() *InstanceSearchParams {
	if x != nil {
		return x.SearchParams
	}
	return nil
}

func (x *ListInstancesRequest) GetScopes() []string {
	if x != nil {
		return x.Scopes
	}
	return nil
}

type InstanceSearchParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationId *StringFilter `protobuf:"bytes,1,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
	ProductId     *StringFilter `protobuf:"bytes,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
}

func (x *InstanceSearchParams) Reset() {
	*x = InstanceSearchParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceSearchParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceSearchParams) ProtoMessage() {}

func (x *InstanceSearchParams) ProtoReflect() protoreflect.Message {
	mi := &file_application_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceSearchParams.ProtoReflect.Descriptor instead.
func (*InstanceSearchParams) Descriptor() ([]byte, []int) {
	return file_application_proto_rawDescGZIP(), []int{21}
}

func (x *InstanceSearchParams) GetApplicationId() *StringFilter {
	if x != nil {
		return x.ApplicationId
	}
	return nil
}

func (x *InstanceSearchParams) GetProductId() *StringFilter {
	if x != nil {
		return x.ProductId
	}
	return nil
}

type ListInstancesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalRecords int32       `protobuf:"varint,1,opt,name=totalRecords,proto3" json:"totalRecords,omitempty"`
	Instances    []*Instance `protobuf:"bytes,2,rep,name=instances,proto3" json:"instances,omitempty"`
}

func (x *ListInstancesResponse) Reset() {
	*x = ListInstancesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInstancesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInstancesResponse) ProtoMessage() {}

func (x *ListInstancesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_application_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInstancesResponse.ProtoReflect.Descriptor instead.
func (*ListInstancesResponse) Descriptor() ([]byte, []int) {
	return file_application_proto_rawDescGZIP(), []int{22}
}

func (x *ListInstancesResponse) GetTotalRecords() int32 {
	if x != nil {
		return x.TotalRecords
	}
	return 0
}

func (x *ListInstancesResponse) GetInstances() []*Instance {
	if x != nil {
		return x.Instances
	}
	return nil
}

type Instance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Environment     string `protobuf:"bytes,2,opt,name=environment,proto3" json:"environment,omitempty"`
	NumOfEquipments int32  `protobuf:"varint,3,opt,name=num_of_equipments,json=numOfEquipments,proto3" json:"num_of_equipments,omitempty"`
	NumOfProducts   int32  `protobuf:"varint,4,opt,name=num_of_products,json=numOfProducts,proto3" json:"num_of_products,omitempty"`
}

func (x *Instance) Reset() {
	*x = Instance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Instance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instance) ProtoMessage() {}

func (x *Instance) ProtoReflect() protoreflect.Message {
	mi := &file_application_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instance.ProtoReflect.Descriptor instead.
func (*Instance) Descriptor() ([]byte, []int) {
	return file_application_proto_rawDescGZIP(), []int{23}
}

func (x *Instance) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Instance) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

func (x *Instance) GetNumOfEquipments() int32 {
	if x != nil {
		return x.NumOfEquipments
	}
	return 0
}

func (x *Instance) GetNumOfProducts() int32 {
	if x != nil {
		return x.NumOfProducts
	}
	return 0
}

type StringFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilteringOrder       int32    `protobuf:"varint,1,opt,name=filteringOrder,proto3" json:"filteringOrder,omitempty"`
	Filteringkey         string   `protobuf:"bytes,2,opt,name=filteringkey,proto3" json:"filteringkey,omitempty"`
	FilterType           bool     `protobuf:"varint,3,opt,name=filter_type,json=filterType,proto3" json:"filter_type,omitempty"`
	FilteringkeyMultiple []string `protobuf:"bytes,4,rep,name=filteringkey_multiple,json=filteringkeyMultiple,proto3" json:"filteringkey_multiple,omitempty"`
}

func (x *StringFilter) Reset() {
	*x = StringFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringFilter) ProtoMessage() {}

func (x *StringFilter) ProtoReflect() protoreflect.Message {
	mi := &file_application_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringFilter.ProtoReflect.Descriptor instead.
func (*StringFilter) Descriptor() ([]byte, []int) {
	return file_application_proto_rawDescGZIP(), []int{24}
}

func (x *StringFilter) GetFilteringOrder() int32 {
	if x != nil {
		return x.FilteringOrder
	}
	return 0
}

func (x *StringFilter) GetFilteringkey() string {
	if x != nil {
		return x.Filteringkey
	}
	return ""
}

func (x *StringFilter) GetFilterType() bool {
	if x != nil {
		return x.FilterType
	}
	return false
}

func (x *StringFilter) GetFilteringkeyMultiple() []string {
	if x != nil {
		return x.FilteringkeyMultiple
	}
	return nil
}

type ApplicationDomainsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope string `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
}

func (x *ApplicationDomainsRequest) Reset() {
	*x = ApplicationDomainsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationDomainsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationDomainsRequest) ProtoMessage() {}

func (x *ApplicationDomainsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_application_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationDomainsRequest.ProtoReflect.Descriptor instead.
func (*ApplicationDomainsRequest) Descriptor() ([]byte, []int) {
	return file_application_proto_rawDescGZIP(), []int{25}
}

func (x *ApplicationDomainsRequest) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

type ApplicationDomainsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domains []string `protobuf:"bytes,1,rep,name=domains,proto3" json:"domains,omitempty"`
}

func (x *ApplicationDomainsResponse) Reset() {
	*x = ApplicationDomainsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationDomainsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationDomainsResponse) ProtoMessage() {}

func (x *ApplicationDomainsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_application_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationDomainsResponse.ProtoReflect.Descriptor instead.
func (*ApplicationDomainsResponse) Descriptor() ([]byte, []int) {
	return file_application_proto_rawDescGZIP(), []int{26}
}

func (x *ApplicationDomainsResponse) GetDomains() []string {
	if x != nil {
		return x.Domains
	}
	return nil
}

type DomainCriticityMetaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DomainCriticityMetaRequest) Reset() {
	*x = DomainCriticityMetaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DomainCriticityMetaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainCriticityMetaRequest) ProtoMessage() {}

func (x *DomainCriticityMetaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_application_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainCriticityMetaRequest.ProtoReflect.Descriptor instead.
func (*DomainCriticityMetaRequest) Descriptor() ([]byte, []int) {
	return file_application_proto_rawDescGZIP(), []int{27}
}

type DomainCriticityMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DomainCriticId   int32  `protobuf:"varint,1,opt,name=domain_critic_id,json=domainCriticId,proto3" json:"domain_critic_id,omitempty"`
	DomainCriticName string `protobuf:"bytes,2,opt,name=domain_critic_name,json=domainCriticName,proto3" json:"domain_critic_name,omitempty"`
}

func (x *DomainCriticityMeta) Reset() {
	*x = DomainCriticityMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DomainCriticityMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainCriticityMeta) ProtoMessage() {}

func (x *DomainCriticityMeta) ProtoReflect() protoreflect.Message {
	mi := &file_application_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainCriticityMeta.ProtoReflect.Descriptor instead.
func (*DomainCriticityMeta) Descriptor() ([]byte, []int) {
	return file_application_proto_rawDescGZIP(), []int{28}
}

func (x *DomainCriticityMeta) GetDomainCriticId() int32 {
	if x != nil {
		return x.DomainCriticId
	}
	return 0
}

func (x *DomainCriticityMeta) GetDomainCriticName() string {
	if x != nil {
		return x.DomainCriticName
	}
	return ""
}

type DomainCriticityMetaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DomainCriticityMeta []*DomainCriticityMeta `protobuf:"bytes,1,rep,name=domain_criticity_meta,json=domainCriticityMeta,proto3" json:"domain_criticity_meta,omitempty"`
}

func (x *DomainCriticityMetaResponse) Reset() {
	*x = DomainCriticityMetaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DomainCriticityMetaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainCriticityMetaResponse) ProtoMessage() {}

func (x *DomainCriticityMetaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_application_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainCriticityMetaResponse.ProtoReflect.Descriptor instead.
func (*DomainCriticityMetaResponse) Descriptor() ([]byte, []int) {
	return file_application_proto_rawDescGZIP(), []int{29}
}

func (x *DomainCriticityMetaResponse) GetDomainCriticityMeta() []*DomainCriticityMeta {
	if x != nil {
		return x.DomainCriticityMeta
	}
	return nil
}

type MaintenanceCriticityMetaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MaintenanceCriticityMetaRequest) Reset() {
	*x = MaintenanceCriticityMetaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaintenanceCriticityMetaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaintenanceCriticityMetaRequest) ProtoMessage() {}

func (x *MaintenanceCriticityMetaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_application_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaintenanceCriticityMetaRequest.ProtoReflect.Descriptor instead.
func (*MaintenanceCriticityMetaRequest) Descriptor() ([]byte, []int) {
	return file_application_proto_rawDescGZIP(), []int{30}
}

type MaintenanceCriticityMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaintenanceCriticId   int32  `protobuf:"varint,1,opt,name=maintenance_critic_id,json=maintenanceCriticId,proto3" json:"maintenance_critic_id,omitempty"`
	MaintenanceCriticName string `protobuf:"bytes,2,opt,name=maintenance_critic_name,json=maintenanceCriticName,proto3" json:"maintenance_critic_name,omitempty"`
}

func (x *MaintenanceCriticityMeta) Reset() {
	*x = MaintenanceCriticityMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaintenanceCriticityMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaintenanceCriticityMeta) ProtoMessage() {}

func (x *MaintenanceCriticityMeta) ProtoReflect() protoreflect.Message {
	mi := &file_application_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaintenanceCriticityMeta.ProtoReflect.Descriptor instead.
func (*MaintenanceCriticityMeta) Descriptor() ([]byte, []int) {
	return file_application_proto_rawDescGZIP(), []int{31}
}

func (x *MaintenanceCriticityMeta) GetMaintenanceCriticId() int32 {
	if x != nil {
		return x.MaintenanceCriticId
	}
	return 0
}

func (x *MaintenanceCriticityMeta) GetMaintenanceCriticName() string {
	if x != nil {
		return x.MaintenanceCriticName
	}
	return ""
}

type MaintenanceCriticityMetaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaintenanceCriticityMeta []*MaintenanceCriticityMeta `protobuf:"bytes,1,rep,name=maintenance_criticity_meta,json=maintenanceCriticityMeta,proto3" json:"maintenance_criticity_meta,omitempty"`
}

func (x *MaintenanceCriticityMetaResponse) Reset() {
	*x = MaintenanceCriticityMetaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaintenanceCriticityMetaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaintenanceCriticityMetaResponse) ProtoMessage() {}

func (x *MaintenanceCriticityMetaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_application_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaintenanceCriticityMetaResponse.ProtoReflect.Descriptor instead.
func (*MaintenanceCriticityMetaResponse) Descriptor() ([]byte, []int) {
	return file_application_proto_rawDescGZIP(), []int{32}
}

func (x *MaintenanceCriticityMetaResponse) GetMaintenanceCriticityMeta() []*MaintenanceCriticityMeta {
	if x != nil {
		return x.MaintenanceCriticityMeta
	}
	return nil
}

type RiskMetaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RiskMetaRequest) Reset() {
	*x = RiskMetaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RiskMetaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskMetaRequest) ProtoMessage() {}

func (x *RiskMetaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_application_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskMetaRequest.ProtoReflect.Descriptor instead.
func (*RiskMetaRequest) Descriptor() ([]byte, []int) {
	return file_application_proto_rawDescGZIP(), []int{33}
}

type RiskMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RiskId   int32  `protobuf:"varint,1,opt,name=risk_id,json=riskId,proto3" json:"risk_id,omitempty"`
	RiskName string `protobuf:"bytes,2,opt,name=risk_name,json=riskName,proto3" json:"risk_name,omitempty"`
}

func (x *RiskMeta) Reset() {
	*x = RiskMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RiskMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskMeta) ProtoMessage() {}

func (x *RiskMeta) ProtoReflect() protoreflect.Message {
	mi := &file_application_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskMeta.ProtoReflect.Descriptor instead.
func (*RiskMeta) Descriptor() ([]byte, []int) {
	return file_application_proto_rawDescGZIP(), []int{34}
}

func (x *RiskMeta) GetRiskId() int32 {
	if x != nil {
		return x.RiskId
	}
	return 0
}

func (x *RiskMeta) GetRiskName() string {
	if x != nil {
		return x.RiskName
	}
	return ""
}

type RiskMetaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RiskMeta []*RiskMeta `protobuf:"bytes,1,rep,name=risk_meta,json=riskMeta,proto3" json:"risk_meta,omitempty"`
}

func (x *RiskMetaResponse) Reset() {
	*x = RiskMetaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RiskMetaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskMetaResponse) ProtoMessage() {}

func (x *RiskMetaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_application_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskMetaResponse.ProtoReflect.Descriptor instead.
func (*RiskMetaResponse) Descriptor() ([]byte, []int) {
	return file_application_proto_rawDescGZIP(), []int{35}
}

func (x *RiskMetaResponse) GetRiskMeta() []*RiskMeta {
	if x != nil {
		return x.RiskMeta
	}
	return nil
}

type DomainCriticityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope string `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
}

func (x *DomainCriticityRequest) Reset() {
	*x = DomainCriticityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DomainCriticityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainCriticityRequest) ProtoMessage() {}

func (x *DomainCriticityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_application_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainCriticityRequest.ProtoReflect.Descriptor instead.
func (*DomainCriticityRequest) Descriptor() ([]byte, []int) {
	return file_application_proto_rawDescGZIP(), []int{36}
}

func (x *DomainCriticityRequest) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

type DomainCriticity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DomainCriticId   int32    `protobuf:"varint,1,opt,name=domain_critic_id,json=domainCriticId,proto3" json:"domain_critic_id,omitempty"`
	DomainCriticName string   `protobuf:"bytes,2,opt,name=domain_critic_name,json=domainCriticName,proto3" json:"domain_critic_name,omitempty"`
	Domains          []string `protobuf:"bytes,3,rep,name=domains,proto3" json:"domains,omitempty"`
}

func (x *DomainCriticity) Reset() {
	*x = DomainCriticity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DomainCriticity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainCriticity) ProtoMessage() {}

func (x *DomainCriticity) ProtoReflect() protoreflect.Message {
	mi := &file_application_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainCriticity.ProtoReflect.Descriptor instead.
func (*DomainCriticity) Descriptor() ([]byte, []int) {
	return file_application_proto_rawDescGZIP(), []int{37}
}

func (x *DomainCriticity) GetDomainCriticId() int32 {
	if x != nil {
		return x.DomainCriticId
	}
	return 0
}

func (x *DomainCriticity) GetDomainCriticName() string {
	if x != nil {
		return x.DomainCriticName
	}
	return ""
}

func (x *DomainCriticity) GetDomains() []string {
	if x != nil {
		return x.Domains
	}
	return nil
}

type DomainCriticityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DomainsCriticity []*DomainCriticity `protobuf:"bytes,1,rep,name=domains_criticity,json=domainsCriticity,proto3" json:"domains_criticity,omitempty"`
}

func (x *DomainCriticityResponse) Reset() {
	*x = DomainCriticityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DomainCriticityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainCriticityResponse) ProtoMessage() {}

func (x *DomainCriticityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_application_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainCriticityResponse.ProtoReflect.Descriptor instead.
func (*DomainCriticityResponse) Descriptor() ([]byte, []int) {
	return file_application_proto_rawDescGZIP(), []int{38}
}

func (x *DomainCriticityResponse) GetDomainsCriticity() []*DomainCriticity {
	if x != nil {
		return x.DomainsCriticity
	}
	return nil
}

type PostDomainCriticityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope            string             `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	DomainsCriticity []*DomainCriticity `protobuf:"bytes,2,rep,name=domains_criticity,json=domainsCriticity,proto3" json:"domains_criticity,omitempty"`
}

func (x *PostDomainCriticityRequest) Reset() {
	*x = PostDomainCriticityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostDomainCriticityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostDomainCriticityRequest) ProtoMessage() {}

func (x *PostDomainCriticityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_application_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostDomainCriticityRequest.ProtoReflect.Descriptor instead.
func (*PostDomainCriticityRequest) Descriptor() ([]byte, []int) {
	return file_application_proto_rawDescGZIP(), []int{39}
}

func (x *PostDomainCriticityRequest) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *PostDomainCriticityRequest) GetDomainsCriticity() []*DomainCriticity {
	if x != nil {
		return x.DomainsCriticity
	}
	return nil
}

type PostDomainCriticityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *PostDomainCriticityResponse) Reset() {
	*x = PostDomainCriticityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostDomainCriticityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostDomainCriticityResponse) ProtoMessage() {}

func (x *PostDomainCriticityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_application_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostDomainCriticityResponse.ProtoReflect.Descriptor instead.
func (*PostDomainCriticityResponse) Descriptor() ([]byte, []int) {
	return file_application_proto_rawDescGZIP(), []int{40}
}

func (x *PostDomainCriticityResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type MaintenanceCriticityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope string `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
}

func (x *MaintenanceCriticityRequest) Reset() {
	*x = MaintenanceCriticityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaintenanceCriticityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaintenanceCriticityRequest) ProtoMessage() {}

func (x *MaintenanceCriticityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_application_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaintenanceCriticityRequest.ProtoReflect.Descriptor instead.
func (*MaintenanceCriticityRequest) Descriptor() ([]byte, []int) {
	return file_application_proto_rawDescGZIP(), []int{41}
}

func (x *MaintenanceCriticityRequest) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

type MaintenanceCriticity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaintenanceCriticId  int32  `protobuf:"varint,1,opt,name=maintenance_critic_id,json=maintenanceCriticId,proto3" json:"maintenance_critic_id,omitempty"`
	MaintenanceLevelId   int32  `protobuf:"varint,2,opt,name=maintenance_level_id,json=maintenanceLevelId,proto3" json:"maintenance_level_id,omitempty"`
	MaintenanceLevelName string `protobuf:"bytes,3,opt,name=maintenance_level_name,json=maintenanceLevelName,proto3" json:"maintenance_level_name,omitempty"`
	StartMonth           int32  `protobuf:"varint,4,opt,name=start_month,json=startMonth,proto3" json:"start_month,omitempty"`
	EndMonth             int32  `protobuf:"varint,5,opt,name=end_month,json=endMonth,proto3" json:"end_month,omitempty"`
}

func (x *MaintenanceCriticity) Reset() {
	*x = MaintenanceCriticity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaintenanceCriticity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaintenanceCriticity) ProtoMessage() {}

func (x *MaintenanceCriticity) ProtoReflect() protoreflect.Message {
	mi := &file_application_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaintenanceCriticity.ProtoReflect.Descriptor instead.
func (*MaintenanceCriticity) Descriptor() ([]byte, []int) {
	return file_application_proto_rawDescGZIP(), []int{42}
}

func (x *MaintenanceCriticity) GetMaintenanceCriticId() int32 {
	if x != nil {
		return x.MaintenanceCriticId
	}
	return 0
}

func (x *MaintenanceCriticity) GetMaintenanceLevelId() int32 {
	if x != nil {
		return x.MaintenanceLevelId
	}
	return 0
}

func (x *MaintenanceCriticity) GetMaintenanceLevelName() string {
	if x != nil {
		return x.MaintenanceLevelName
	}
	return ""
}

func (x *MaintenanceCriticity) GetStartMonth() int32 {
	if x != nil {
		return x.StartMonth
	}
	return 0
}

func (x *MaintenanceCriticity) GetEndMonth() int32 {
	if x != nil {
		return x.EndMonth
	}
	return 0
}

type PostMaintenanceCriticityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope              string                  `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	MaintenanceCriticy []*MaintenanceCriticity `protobuf:"bytes,2,rep,name=maintenance_criticy,json=maintenanceCriticy,proto3" json:"maintenance_criticy,omitempty"`
}

func (x *PostMaintenanceCriticityRequest) Reset() {
	*x = PostMaintenanceCriticityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostMaintenanceCriticityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostMaintenanceCriticityRequest) ProtoMessage() {}

func (x *PostMaintenanceCriticityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_application_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostMaintenanceCriticityRequest.ProtoReflect.Descriptor instead.
func (*PostMaintenanceCriticityRequest) Descriptor() ([]byte, []int) {
	return file_application_proto_rawDescGZIP(), []int{43}
}

func (x *PostMaintenanceCriticityRequest) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *PostMaintenanceCriticityRequest) GetMaintenanceCriticy() []*MaintenanceCriticity {
	if x != nil {
		return x.MaintenanceCriticy
	}
	return nil
}

type MaintenanceCriticityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaintenanceCriticy []*MaintenanceCriticity `protobuf:"bytes,1,rep,name=maintenance_criticy,json=maintenanceCriticy,proto3" json:"maintenance_criticy,omitempty"`
}

func (x *MaintenanceCriticityResponse) Reset() {
	*x = MaintenanceCriticityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaintenanceCriticityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaintenanceCriticityResponse) ProtoMessage() {}

func (x *MaintenanceCriticityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_application_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaintenanceCriticityResponse.ProtoReflect.Descriptor instead.
func (*MaintenanceCriticityResponse) Descriptor() ([]byte, []int) {
	return file_application_proto_rawDescGZIP(), []int{44}
}

func (x *MaintenanceCriticityResponse) GetMaintenanceCriticy() []*MaintenanceCriticity {
	if x != nil {
		return x.MaintenanceCriticy
	}
	return nil
}

type PostMaintenanceCriticityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *PostMaintenanceCriticityResponse) Reset() {
	*x = PostMaintenanceCriticityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostMaintenanceCriticityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostMaintenanceCriticityResponse) ProtoMessage() {}

func (x *PostMaintenanceCriticityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_application_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostMaintenanceCriticityResponse.ProtoReflect.Descriptor instead.
func (*PostMaintenanceCriticityResponse) Descriptor() ([]byte, []int) {
	return file_application_proto_rawDescGZIP(), []int{45}
}

func (x *PostMaintenanceCriticityResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type RiskMatrixRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope string `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
}

func (x *RiskMatrixRequest) Reset() {
	*x = RiskMatrixRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RiskMatrixRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskMatrixRequest) ProtoMessage() {}

func (x *RiskMatrixRequest) ProtoReflect() protoreflect.Message {
	mi := &file_application_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskMatrixRequest.ProtoReflect.Descriptor instead.
func (*RiskMatrixRequest) Descriptor() ([]byte, []int) {
	return file_application_proto_rawDescGZIP(), []int{46}
}

func (x *RiskMatrixRequest) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

type RiskMatrix struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigurationId       int32  `protobuf:"varint,1,opt,name=configuration_id,json=configurationId,proto3" json:"configuration_id,omitempty"`
	DomainCriticId        int32  `protobuf:"varint,2,opt,name=domain_critic_id,json=domainCriticId,proto3" json:"domain_critic_id,omitempty"`
	DomainCriticName      string `protobuf:"bytes,3,opt,name=domain_critic_name,json=domainCriticName,proto3" json:"domain_critic_name,omitempty"`
	MaintenanceCriticId   int32  `protobuf:"varint,4,opt,name=maintenance_critic_id,json=maintenanceCriticId,proto3" json:"maintenance_critic_id,omitempty"`
	MaintenanceCriticName string `protobuf:"bytes,5,opt,name=maintenance_critic_name,json=maintenanceCriticName,proto3" json:"maintenance_critic_name,omitempty"`
	RiskId                int32  `protobuf:"varint,6,opt,name=risk_id,json=riskId,proto3" json:"risk_id,omitempty"`
	RiskName              string `protobuf:"bytes,7,opt,name=risk_name,json=riskName,proto3" json:"risk_name,omitempty"`
}

func (x *RiskMatrix) Reset() {
	*x = RiskMatrix{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RiskMatrix) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskMatrix) ProtoMessage() {}

func (x *RiskMatrix) ProtoReflect() protoreflect.Message {
	mi := &file_application_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskMatrix.ProtoReflect.Descriptor instead.
func (*RiskMatrix) Descriptor() ([]byte, []int) {
	return file_application_proto_rawDescGZIP(), []int{47}
}

func (x *RiskMatrix) GetConfigurationId() int32 {
	if x != nil {
		return x.ConfigurationId
	}
	return 0
}

func (x *RiskMatrix) GetDomainCriticId() int32 {
	if x != nil {
		return x.DomainCriticId
	}
	return 0
}

func (x *RiskMatrix) GetDomainCriticName() string {
	if x != nil {
		return x.DomainCriticName
	}
	return ""
}

func (x *RiskMatrix) GetMaintenanceCriticId() int32 {
	if x != nil {
		return x.MaintenanceCriticId
	}
	return 0
}

func (x *RiskMatrix) GetMaintenanceCriticName() string {
	if x != nil {
		return x.MaintenanceCriticName
	}
	return ""
}

func (x *RiskMatrix) GetRiskId() int32 {
	if x != nil {
		return x.RiskId
	}
	return 0
}

func (x *RiskMatrix) GetRiskName() string {
	if x != nil {
		return x.RiskName
	}
	return ""
}

type RiskMatrixResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RiskMatrix []*RiskMatrix `protobuf:"bytes,1,rep,name=risk_matrix,json=riskMatrix,proto3" json:"risk_matrix,omitempty"`
}

func (x *RiskMatrixResponse) Reset() {
	*x = RiskMatrixResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RiskMatrixResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskMatrixResponse) ProtoMessage() {}

func (x *RiskMatrixResponse) ProtoReflect() protoreflect.Message {
	mi := &file_application_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskMatrixResponse.ProtoReflect.Descriptor instead.
func (*RiskMatrixResponse) Descriptor() ([]byte, []int) {
	return file_application_proto_rawDescGZIP(), []int{48}
}

func (x *RiskMatrixResponse) GetRiskMatrix() []*RiskMatrix {
	if x != nil {
		return x.RiskMatrix
	}
	return nil
}

type PostRiskMatrixRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope      string        `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	RiskMatrix []*RiskMatrix `protobuf:"bytes,2,rep,name=risk_matrix,json=riskMatrix,proto3" json:"risk_matrix,omitempty"`
}

func (x *PostRiskMatrixRequest) Reset() {
	*x = PostRiskMatrixRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostRiskMatrixRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostRiskMatrixRequest) ProtoMessage() {}

func (x *PostRiskMatrixRequest) ProtoReflect() protoreflect.Message {
	mi := &file_application_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostRiskMatrixRequest.ProtoReflect.Descriptor instead.
func (*PostRiskMatrixRequest) Descriptor() ([]byte, []int) {
	return file_application_proto_rawDescGZIP(), []int{49}
}

func (x *PostRiskMatrixRequest) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *PostRiskMatrixRequest) GetRiskMatrix() []*RiskMatrix {
	if x != nil {
		return x.RiskMatrix
	}
	return nil
}

type PostRiskMatrixResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *PostRiskMatrixResponse) Reset() {
	*x = PostRiskMatrixResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostRiskMatrixResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostRiskMatrixResponse) ProtoMessage() {}

func (x *PostRiskMatrixResponse) ProtoReflect() protoreflect.Message {
	mi := &file_application_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostRiskMatrixResponse.ProtoReflect.Descriptor instead.
func (*PostRiskMatrixResponse) Descriptor() ([]byte, []int) {
	return file_application_proto_rawDescGZIP(), []int{50}
}

func (x *PostRiskMatrixResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type UpsertInstanceRequestProduct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operation string   `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
	ProductId []string `protobuf:"bytes,2,rep,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
}

func (x *UpsertInstanceRequestProduct) Reset() {
	*x = UpsertInstanceRequestProduct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertInstanceRequestProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertInstanceRequestProduct) ProtoMessage() {}

func (x *UpsertInstanceRequestProduct) ProtoReflect() protoreflect.Message {
	mi := &file_application_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertInstanceRequestProduct.ProtoReflect.Descriptor instead.
func (*UpsertInstanceRequestProduct) Descriptor() ([]byte, []int) {
	return file_application_proto_rawDescGZIP(), []int{12, 0}
}

func (x *UpsertInstanceRequestProduct) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

func (x *UpsertInstanceRequestProduct) GetProductId() []string {
	if x != nil {
		return x.ProductId
	}
	return nil
}

type UpsertInstanceRequestEquipment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operation   string   `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
	EquipmentId []string `protobuf:"bytes,2,rep,name=equipment_id,json=equipmentId,proto3" json:"equipment_id,omitempty"`
}

func (x *UpsertInstanceRequestEquipment) Reset() {
	*x = UpsertInstanceRequestEquipment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertInstanceRequestEquipment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertInstanceRequestEquipment) ProtoMessage() {}

func (x *UpsertInstanceRequestEquipment) ProtoReflect() protoreflect.Message {
	mi := &file_application_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertInstanceRequestEquipment.ProtoReflect.Descriptor instead.
func (*UpsertInstanceRequestEquipment) Descriptor() ([]byte, []int) {
	return file_application_proto_rawDescGZIP(), []int{12, 1}
}

func (x *UpsertInstanceRequestEquipment) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

func (x *UpsertInstanceRequestEquipment) GetEquipmentId() []string {
	if x != nil {
		return x.EquipmentId
	}
	return nil
}

var File_application_proto protoreflect.FileDescriptor

var file_application_proto_rawDesc = []byte{
	0x0a, 0x11, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x17, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x73, 0x77, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2f, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x75, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xfa, 0x42, 0x10, 0x72, 0x0e, 0x32, 0x0c, 0x5c, 0x62,
	0x5b, 0x41, 0x2d, 0x5a, 0x5d, 0x7b, 0x33, 0x7d, 0x5c, 0x62, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x47, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x45,
	0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x22, 0x9c, 0x01, 0x0a, 0x27, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a,
	0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xfa, 0x42,
	0x10, 0x72, 0x0e, 0x32, 0x0c, 0x5c, 0x62, 0x5b, 0x41, 0x2d, 0x5a, 0x5d, 0x7b, 0x33, 0x7d, 0x5c,
	0x62, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64,
	0x22, 0x49, 0x0a, 0x28, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x42,
	0x79, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x22, 0x4a, 0x0a, 0x1d, 0x44,
	0x72, 0x6f, 0x70, 0x4f, 0x62, 0x73, 0x63, 0x6f, 0x6c, 0x65, 0x6e, 0x73, 0x63, 0x65, 0x6e, 0x63,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x05,
	0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xfa, 0x42, 0x10,
	0x72, 0x0e, 0x32, 0x0c, 0x5c, 0x62, 0x5b, 0x41, 0x2d, 0x5a, 0x5d, 0x7b, 0x33, 0x7d, 0x5c, 0x62,
	0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x22, 0x3a, 0x0a, 0x1e, 0x44, 0x72, 0x6f, 0x70, 0x4f,
	0x62, 0x73, 0x63, 0x6f, 0x6c, 0x65, 0x6e, 0x73, 0x63, 0x65, 0x6e, 0x63, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x22, 0xc8, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x25, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x12, 0x29, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x13, 0xfa, 0x42, 0x10, 0x72, 0x0e, 0x32, 0x0c, 0x5c, 0x62, 0x5b, 0x41, 0x2d,
	0x5a, 0x5d, 0x7b, 0x33, 0x7d, 0x5c, 0x62, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x22, 0x35,
	0x0a, 0x19, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x47, 0x0a, 0x1a, 0x44, 0x72, 0x6f, 0x70, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x13, 0xfa, 0x42, 0x10, 0x72, 0x0e, 0x32, 0x0c, 0x5c, 0x62, 0x5b, 0x41, 0x2d,
	0x5a, 0x5d, 0x7b, 0x33, 0x7d, 0x5c, 0x62, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x22, 0x37,
	0x0a, 0x1b, 0x44, 0x72, 0x6f, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x41, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x35, 0x0a, 0x19, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x22, 0x9b, 0x04, 0x0a, 0x15, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x52, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x6f, 0x70, 0x74,
	0x69, 0x73, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x58, 0x0a, 0x0a,
	0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x38, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72,
	0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x65, 0x71, 0x75, 0x69,
	0x70, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x29, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xfa, 0x42, 0x10, 0x72, 0x0e, 0x32, 0x0c, 0x5c, 0x62,
	0x5b, 0x41, 0x2d, 0x5a, 0x5d, 0x7b, 0x33, 0x7d, 0x5c, 0x62, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x1a, 0x5a, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x30, 0x0a, 0x09,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x12, 0xfa, 0x42, 0x0f, 0x72, 0x0d, 0x52, 0x03, 0x61, 0x64, 0x64, 0x52, 0x06, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x1a, 0x60, 0x0a,
	0x09, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x09, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x12, 0xfa,
	0x42, 0x0f, 0x72, 0x0d, 0x52, 0x03, 0x61, 0x64, 0x64, 0x52, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c,
	0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0b, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22,
	0x32, 0x0a, 0x16, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x22, 0x5f, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x49, 0x64, 0x22, 0x32, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0xf6, 0x04, 0x0a, 0x17, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x2c, 0xfa, 0x42, 0x07, 0x1a, 0x05, 0x10, 0xe8, 0x07,
	0x28, 0x01, 0x92, 0x41, 0x1f, 0x32, 0x0b, 0x50, 0x61, 0x67, 0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x59, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x8f, 0x40, 0x69, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0xf0, 0x3f, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x4c, 0x0a,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x2f, 0xfa, 0x42, 0x07, 0x1a, 0x05, 0x18, 0xc8, 0x01, 0x28, 0x0a, 0x92, 0x41, 0x22, 0x32,
	0x0e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x20, 0x70, 0x65, 0x72, 0x20, 0x70, 0x61, 0x67, 0x65, 0x59,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x69, 0x40, 0x69, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24,
	0x40, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x5a, 0x0a, 0x07, 0x73,
	0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x6f,
	0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53,
	0x6f, 0x72, 0x74, 0x42, 0x79, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52,
	0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x4b, 0x0a, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x5f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x6f, 0x70,
	0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x55, 0x0a, 0x0d, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6f, 0x70,
	0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x0c, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x2f, 0x0a, 0x06, 0x73,
	0x63, 0x6f, 0x70, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x42, 0x17, 0xfa, 0x42, 0x07,
	0x92, 0x01, 0x04, 0x08, 0x01, 0x10, 0x01, 0xfa, 0x42, 0x0a, 0x92, 0x01, 0x07, 0x22, 0x05, 0x72,
	0x03, 0x98, 0x01, 0x03, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x22, 0x92, 0x01, 0x0a,
	0x06, 0x53, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x08, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x10,
	0x00, 0x12, 0x09, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10,
	0x6e, 0x75, 0x6d, 0x5f, 0x6f, 0x66, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x6e, 0x75, 0x6d, 0x5f, 0x6f, 0x66, 0x5f, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x73, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x6e, 0x75, 0x6d, 0x5f, 0x6f,
	0x66, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x10, 0x04, 0x12, 0x0a,
	0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x10, 0x05, 0x12, 0x0e, 0x0a, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x10, 0x06, 0x12, 0x15, 0x0a, 0x11, 0x6f, 0x62,
	0x73, 0x6f, 0x6c, 0x65, 0x73, 0x63, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x72, 0x69, 0x73, 0x6b, 0x10,
	0x07, 0x22, 0x88, 0x01, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x73, 0x12, 0x48, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73,
	0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xc0, 0x02, 0x0a,
	0x0b, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x28, 0x0a,
	0x10, 0x6e, 0x75, 0x6d, 0x5f, 0x6f, 0x66, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6e, 0x75, 0x6d, 0x4f, 0x66, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x75, 0x6d, 0x5f, 0x6f,
	0x66, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x6e, 0x75, 0x6d, 0x4f, 0x66, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x2b, 0x0a, 0x11, 0x6f, 0x62, 0x73, 0x6f, 0x6c, 0x65,
	0x73, 0x63, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x72, 0x69, 0x73, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x6f, 0x62, 0x73, 0x6f, 0x6c, 0x65, 0x73, 0x63, 0x65, 0x6e, 0x63, 0x65, 0x52,
	0x69, 0x73, 0x6b, 0x12, 0x2a, 0x0a, 0x11, 0x6e, 0x75, 0x6d, 0x5f, 0x6f, 0x66, 0x5f, 0x65, 0x71,
	0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f,
	0x6e, 0x75, 0x6d, 0x4f, 0x66, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22,
	0xea, 0x02, 0x0a, 0x17, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x39, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6f, 0x70, 0x74, 0x69,
	0x73, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x12, 0x44, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61,
	0x6d, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x06, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6f, 0x70, 0x74, 0x69,
	0x73, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x52, 0x0a, 0x11, 0x6f, 0x62, 0x73, 0x6f,
	0x6c, 0x65, 0x73, 0x63, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x72, 0x69, 0x73, 0x6b, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x10, 0x6f, 0x62, 0x73, 0x6f,
	0x6c, 0x65, 0x73, 0x63, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x69, 0x73, 0x6b, 0x22, 0xb9, 0x04, 0x0a,
	0x14, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x2c, 0xfa, 0x42, 0x07, 0x1a, 0x05, 0x10, 0xe8,
	0x07, 0x28, 0x01, 0x92, 0x41, 0x1f, 0x32, 0x0b, 0x50, 0x61, 0x67, 0x65, 0x20, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x59, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x8f, 0x40, 0x69, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0xf0, 0x3f, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x4c,
	0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x2f, 0xfa, 0x42, 0x07, 0x1a, 0x05, 0x18, 0xc8, 0x01, 0x28, 0x0a, 0x92, 0x41, 0x22,
	0x32, 0x0e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x20, 0x70, 0x65, 0x72, 0x20, 0x70, 0x61, 0x67, 0x65,
	0x59, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x69, 0x40, 0x69, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x24, 0x40, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x57, 0x0a, 0x07,
	0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e,
	0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x6f, 0x72,
	0x74, 0x42, 0x79, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x06, 0x73,
	0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x4b, 0x0a, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x6f, 0x70, 0x74, 0x69,
	0x73, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x08, 0xfa,
	0x42, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x52, 0x0a, 0x0d, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6f, 0x70, 0x74, 0x69,
	0x73, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x0c, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x42, 0x17, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01,
	0x10, 0x01, 0xfa, 0x42, 0x0a, 0x92, 0x01, 0x07, 0x22, 0x05, 0x72, 0x03, 0x98, 0x01, 0x03, 0x52,
	0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x22, 0x5f, 0x0a, 0x06, 0x53, 0x6f, 0x72, 0x74, 0x42,
	0x79, 0x12, 0x0f, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x65,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f,
	0x6e, 0x75, 0x6d, 0x5f, 0x6f, 0x66, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x10,
	0x02, 0x12, 0x15, 0x0a, 0x11, 0x6e, 0x75, 0x6d, 0x5f, 0x6f, 0x66, 0x5f, 0x65, 0x71, 0x75, 0x69,
	0x70, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x10, 0x03, 0x22, 0xaa, 0x01, 0x0a, 0x14, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x4c, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6f, 0x70, 0x74, 0x69,
	0x73, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x52, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x44, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x64, 0x22, 0x7c, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x73, 0x12, 0x3f, 0x0a, 0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x22, 0x90, 0x01, 0x0a, 0x08, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x6e, 0x75, 0x6d, 0x5f, 0x6f, 0x66, 0x5f, 0x65, 0x71, 0x75,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6e,
	0x75, 0x6d, 0x4f, 0x66, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x26,
	0x0a, 0x0f, 0x6e, 0x75, 0x6d, 0x5f, 0x6f, 0x66, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6e, 0x75, 0x6d, 0x4f, 0x66, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x22, 0xb0, 0x01, 0x0a, 0x0c, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x69, 0x6e, 0x67, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x22, 0x0a, 0x0c, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x6b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x69, 0x6e, 0x67,
	0x6b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x33, 0x0a, 0x15, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x69, 0x6e,
	0x67, 0x6b, 0x65, 0x79, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x14, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x6b, 0x65,
	0x79, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x22, 0x46, 0x0a, 0x19, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xfa, 0x42, 0x10, 0x72, 0x0e, 0x32, 0x0c, 0x5c, 0x62,
	0x5b, 0x41, 0x2d, 0x5a, 0x5d, 0x7b, 0x33, 0x7d, 0x5c, 0x62, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x22, 0x36, 0x0a, 0x1a, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x22, 0x1c, 0x0a, 0x1a, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x6d, 0x0a, 0x13, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x28,
	0x0a, 0x10, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x5f, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x72, 0x69, 0x74,
	0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x7f, 0x0a, 0x1b, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x15, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f,
	0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x69, 0x74, 0x79, 0x4d, 0x65,
	0x74, 0x61, 0x52, 0x13, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63,
	0x69, 0x74, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x22, 0x21, 0x0a, 0x1f, 0x4d, 0x61, 0x69, 0x6e, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x69, 0x74, 0x79, 0x4d,
	0x65, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x86, 0x01, 0x0a, 0x18, 0x4d,
	0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63,
	0x69, 0x74, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x32, 0x0a, 0x15, 0x6d, 0x61, 0x69, 0x6e, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x63, 0x65, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x17, 0x6d,
	0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x63, 0x72, 0x69, 0x74, 0x69,
	0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x6d, 0x61,
	0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x93, 0x01, 0x0a, 0x20, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x63, 0x65, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x74, 0x61,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6f, 0x0a, 0x1a, 0x6d, 0x61, 0x69, 0x6e,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x69, 0x74,
	0x79, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6f,
	0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x63, 0x65, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x52,
	0x18, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x72, 0x69, 0x74,
	0x69, 0x63, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x22, 0x11, 0x0a, 0x0f, 0x52, 0x69, 0x73,
	0x6b, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x40, 0x0a, 0x08,
	0x52, 0x69, 0x73, 0x6b, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x69, 0x73, 0x6b,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x69, 0x73, 0x6b, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x69, 0x73, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x69, 0x73, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x52,
	0x0a, 0x10, 0x52, 0x69, 0x73, 0x6b, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3e, 0x0a, 0x09, 0x72, 0x69, 0x73, 0x6b, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x69, 0x73, 0x6b, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x72, 0x69, 0x73, 0x6b, 0x4d, 0x65,
	0x74, 0x61, 0x22, 0x43, 0x0a, 0x16, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x72, 0x69, 0x74,
	0x69, 0x63, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x05,
	0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xfa, 0x42, 0x10,
	0x72, 0x0e, 0x32, 0x0c, 0x5c, 0x62, 0x5b, 0x41, 0x2d, 0x5a, 0x5d, 0x7b, 0x33, 0x7d, 0x5c, 0x62,
	0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x22, 0x83, 0x01, 0x0a, 0x0f, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x69, 0x74, 0x79, 0x12, 0x28, 0x0a, 0x10, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x72, 0x69,
	0x74, 0x69, 0x63, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f,
	0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x22, 0x70, 0x0a,
	0x17, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x11, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x73, 0x5f, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x69, 0x74, 0x79, 0x52, 0x10, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x69, 0x74, 0x79, 0x22,
	0x9e, 0x01, 0x0a, 0x1a, 0x50, 0x6f, 0x73, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x72,
	0x69, 0x74, 0x69, 0x63, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29,
	0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xfa,
	0x42, 0x10, 0x72, 0x0e, 0x32, 0x0c, 0x5c, 0x62, 0x5b, 0x41, 0x2d, 0x5a, 0x5d, 0x7b, 0x33, 0x7d,
	0x5c, 0x62, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x55, 0x0a, 0x11, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x73, 0x5f, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x69, 0x74, 0x79, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x69, 0x74, 0x79, 0x52, 0x10,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x69, 0x74, 0x79,
	0x22, 0x37, 0x0a, 0x1b, 0x50, 0x6f, 0x73, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x72,
	0x69, 0x74, 0x69, 0x63, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x48, 0x0a, 0x1b, 0x4d, 0x61, 0x69,
	0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xfa, 0x42, 0x10, 0x72, 0x0e, 0x32, 0x0c,
	0x5c, 0x62, 0x5b, 0x41, 0x2d, 0x5a, 0x5d, 0x7b, 0x33, 0x7d, 0x5c, 0x62, 0x52, 0x05, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x22, 0xf0, 0x01, 0x0a, 0x14, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x63, 0x65, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x69, 0x74, 0x79, 0x12, 0x32, 0x0a, 0x15,
	0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x63, 0x72, 0x69, 0x74,
	0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x6d, 0x61, 0x69,
	0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x49, 0x64,
	0x12, 0x30, 0x0a, 0x14, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x5f,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12,
	0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x49, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x14, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x64,
	0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x65, 0x6e,
	0x64, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x22, 0xac, 0x01, 0x0a, 0x1f, 0x50, 0x6f, 0x73, 0x74, 0x4d,
	0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x05, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xfa, 0x42, 0x10, 0x72, 0x0e,
	0x32, 0x0c, 0x5c, 0x62, 0x5b, 0x41, 0x2d, 0x5a, 0x5d, 0x7b, 0x33, 0x7d, 0x5c, 0x62, 0x52, 0x05,
	0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x5e, 0x0a, 0x13, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x5f, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x79, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x69,
	0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x69, 0x74,
	0x79, 0x52, 0x12, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x72,
	0x69, 0x74, 0x69, 0x63, 0x79, 0x22, 0x7e, 0x0a, 0x1c, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x13, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x5f, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x79, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x69,
	0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x69, 0x74,
	0x79, 0x52, 0x12, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x72,
	0x69, 0x74, 0x69, 0x63, 0x79, 0x22, 0x3c, 0x0a, 0x20, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x61, 0x69,
	0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x22, 0x3e, 0x0a, 0x11, 0x52, 0x69, 0x73, 0x6b, 0x4d, 0x61, 0x74, 0x72, 0x69,
	0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xfa, 0x42, 0x10, 0x72, 0x0e, 0x32, 0x0c,
	0x5c, 0x62, 0x5b, 0x41, 0x2d, 0x5a, 0x5d, 0x7b, 0x33, 0x7d, 0x5c, 0x62, 0x52, 0x05, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x22, 0xb1, 0x02, 0x0a, 0x0a, 0x52, 0x69, 0x73, 0x6b, 0x4d, 0x61, 0x74, 0x72,
	0x69, 0x78, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x28, 0x0a,
	0x10, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43,
	0x72, 0x69, 0x74, 0x69, 0x63, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x5f, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x72, 0x69, 0x74, 0x69,
	0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x5f, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x17, 0x6d, 0x61, 0x69,
	0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x6d, 0x61, 0x69, 0x6e,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x69, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x72, 0x69, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x69,
	0x73, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x69, 0x73, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x5a, 0x0a, 0x12, 0x52, 0x69, 0x73, 0x6b, 0x4d,
	0x61, 0x74, 0x72, 0x69, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a,
	0x0b, 0x72, 0x69, 0x73, 0x6b, 0x5f, 0x6d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x69, 0x73,
	0x6b, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x52, 0x0a, 0x72, 0x69, 0x73, 0x6b, 0x4d, 0x61, 0x74,
	0x72, 0x69, 0x78, 0x22, 0x88, 0x01, 0x0a, 0x15, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x69, 0x73, 0x6b,
	0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a,
	0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xfa, 0x42,
	0x10, 0x72, 0x0e, 0x32, 0x0c, 0x5c, 0x62, 0x5b, 0x41, 0x2d, 0x5a, 0x5d, 0x7b, 0x33, 0x7d, 0x5c,
	0x62, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x44, 0x0a, 0x0b, 0x72, 0x69, 0x73, 0x6b,
	0x5f, 0x6d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x69, 0x73, 0x6b, 0x4d, 0x61, 0x74, 0x72,
	0x69, 0x78, 0x52, 0x0a, 0x72, 0x69, 0x73, 0x6b, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x22, 0x32,
	0x0a, 0x16, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x69, 0x73, 0x6b, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x2a, 0x1e, 0x0a, 0x09, 0x53, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x07, 0x0a, 0x03, 0x61, 0x73, 0x63, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x10, 0x01, 0x32, 0xb9, 0x1c, 0x0a, 0x12, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x9a, 0x01, 0x0a, 0x11, 0x55, 0x70,
	0x73, 0x65, 0x72, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x31, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x32, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x73,
	0x65, 0x72, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x22, 0x13,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x3a, 0x01, 0x2a, 0x12, 0xa5, 0x01, 0x0a, 0x13, 0x44, 0x72, 0x6f, 0x70, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x33,
	0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x72, 0x6f, 0x70, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x72,
	0x6f, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1d, 0x2a, 0x1b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x7b, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x7d, 0x12, 0xa8,
	0x01, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61,
	0x6d, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2c, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x26, 0x2a, 0x24, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x7b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xac, 0x01, 0x0a, 0x0e, 0x55, 0x70,
	0x73, 0x65, 0x72, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x2e, 0x2e, 0x6f,
	0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x6f,
	0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x39, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x33, 0x22, 0x2e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x7b, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0xb7, 0x01, 0x0a, 0x0e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x2e, 0x2e, 0x6f, 0x70,
	0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x6f, 0x70,
	0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x44, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x3e, 0x2a, 0x3c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x7b, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x7d, 0x12, 0x95, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x30, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61,
	0x6d, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x6f, 0x70, 0x74, 0x69,
	0x73, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x95, 0x01, 0x0a, 0x0d, 0x4c,
	0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x2d, 0x2e, 0x6f,
	0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x6f, 0x70,
	0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1f, 0x12, 0x1d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x12, 0xa2, 0x01, 0x0a, 0x12, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x12, 0x32, 0x2e, 0x6f, 0x70, 0x74, 0x69,
	0x73, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e,
	0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x12, 0xcb, 0x01, 0x0a, 0x1f, 0x4f, 0x62, 0x73, 0x6f,
	0x6c, 0x65, 0x73, 0x63, 0x65, 0x6e, 0x63, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x72,
	0x69, 0x74, 0x69, 0x63, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x33, 0x2e, 0x6f, 0x70,
	0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x72, 0x69, 0x74,
	0x69, 0x63, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x34, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x37, 0x12, 0x35,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2f, 0x6f, 0x62, 0x73, 0x6f, 0x6c, 0x65, 0x73, 0x63, 0x65, 0x6e, 0x63, 0x65,
	0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x63, 0x72, 0x69, 0x74,
	0x69, 0x63, 0x69, 0x74, 0x79, 0x12, 0xdf, 0x01, 0x0a, 0x24, 0x4f, 0x62, 0x73, 0x6f, 0x6c, 0x65,
	0x73, 0x63, 0x65, 0x6e, 0x63, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x38,
	0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73,
	0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x72,
	0x69, 0x74, 0x69, 0x63, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x42, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3c, 0x12, 0x3a, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x6f, 0x62, 0x73, 0x6f, 0x6c, 0x65, 0x73, 0x63, 0x65, 0x6e, 0x63, 0x65, 0x2f, 0x6d, 0x65,
	0x74, 0x61, 0x2f, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x63, 0x72,
	0x69, 0x74, 0x69, 0x63, 0x69, 0x74, 0x79, 0x12, 0xa0, 0x01, 0x0a, 0x14, 0x4f, 0x62, 0x73, 0x6f,
	0x6c, 0x65, 0x73, 0x63, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x69, 0x73, 0x6b, 0x4d, 0x65, 0x74, 0x61,
	0x12, 0x28, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x69, 0x73, 0x6b, 0x4d,
	0x65, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6f, 0x70, 0x74,
	0x69, 0x73, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x69, 0x73, 0x6b, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x12, 0x2b, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x6f, 0x62, 0x73, 0x6f, 0x6c, 0x65, 0x73, 0x63, 0x65, 0x6e, 0x63, 0x65, 0x2f,
	0x6d, 0x65, 0x74, 0x61, 0x2f, 0x72, 0x69, 0x73, 0x6b, 0x73, 0x12, 0xb2, 0x01, 0x0a, 0x1b, 0x4f,
	0x62, 0x73, 0x6f, 0x6c, 0x65, 0x73, 0x63, 0x65, 0x6e, 0x63, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x69, 0x74, 0x79, 0x12, 0x2f, 0x2e, 0x6f, 0x70, 0x74,
	0x69, 0x73, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x72, 0x69, 0x74, 0x69,
	0x63, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x6f, 0x70,
	0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x72, 0x69, 0x74,
	0x69, 0x63, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x12, 0x28, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6f, 0x62, 0x73, 0x6f, 0x6c,
	0x65, 0x73, 0x63, 0x65, 0x6e, 0x63, 0x65, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x12,
	0xc1, 0x01, 0x0a, 0x1f, 0x50, 0x6f, 0x73, 0x74, 0x4f, 0x62, 0x73, 0x6f, 0x6c, 0x65, 0x73, 0x63,
	0x65, 0x6e, 0x63, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63,
	0x69, 0x74, 0x79, 0x12, 0x33, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f,
	0x73, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73,
	0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x72, 0x69,
	0x74, 0x69, 0x63, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x22, 0x28, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6f, 0x62, 0x73, 0x6f,
	0x6c, 0x65, 0x73, 0x63, 0x65, 0x6e, 0x63, 0x65, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73,
	0x3a, 0x01, 0x2a, 0x12, 0xc5, 0x01, 0x0a, 0x20, 0x4f, 0x62, 0x73, 0x6f, 0x6c, 0x65, 0x73, 0x63,
	0x65, 0x6e, 0x73, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x43,
	0x72, 0x69, 0x74, 0x69, 0x63, 0x69, 0x74, 0x79, 0x12, 0x34, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73,
	0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x72,
	0x69, 0x74, 0x69, 0x63, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35,
	0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2e, 0x12, 0x2c, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x6f, 0x62, 0x73, 0x6f, 0x6c, 0x65, 0x73, 0x63, 0x65, 0x6e, 0x63, 0x65, 0x2f,
	0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x12, 0xd4, 0x01, 0x0a, 0x24,
	0x50, 0x6f, 0x73, 0x74, 0x4f, 0x62, 0x73, 0x6f, 0x6c, 0x65, 0x73, 0x63, 0x65, 0x6e, 0x73, 0x65,
	0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x72, 0x69, 0x74, 0x69,
	0x63, 0x69, 0x74, 0x79, 0x12, 0x38, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x6f, 0x73, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x72,
	0x69, 0x74, 0x69, 0x63, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39,
	0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x61, 0x69,
	0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x37, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x31, 0x22, 0x2c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6f, 0x62, 0x73, 0x6f, 0x6c, 0x65, 0x73, 0x63, 0x65,
	0x6e, 0x63, 0x65, 0x2f, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x3a,
	0x01, 0x2a, 0x12, 0xa2, 0x01, 0x0a, 0x16, 0x4f, 0x62, 0x73, 0x6f, 0x6c, 0x65, 0x73, 0x63, 0x65,
	0x6e, 0x73, 0x65, 0x52, 0x69, 0x73, 0x6b, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x12, 0x2a, 0x2e,
	0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x69, 0x73, 0x6b, 0x4d, 0x61, 0x74, 0x72,
	0x69, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x6f, 0x70, 0x74, 0x69,
	0x73, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x69, 0x73, 0x6b, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x12, 0x27,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2f, 0x6f, 0x62, 0x73, 0x6f, 0x6c, 0x65, 0x73, 0x63, 0x65, 0x6e, 0x63, 0x65,
	0x2f, 0x6d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x12, 0xb1, 0x01, 0x0a, 0x1a, 0x50, 0x6f, 0x73, 0x74,
	0x4f, 0x62, 0x73, 0x6f, 0x6c, 0x65, 0x73, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x69, 0x73, 0x6b,
	0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x12, 0x2e, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d,
	0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x69, 0x73, 0x6b, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d,
	0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x69, 0x73, 0x6b, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x22,
	0x27, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6f, 0x62, 0x73, 0x6f, 0x6c, 0x65, 0x73, 0x63, 0x65, 0x6e, 0x63,
	0x65, 0x2f, 0x6d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x3a, 0x01, 0x2a, 0x12, 0xc4, 0x01, 0x0a, 0x16,
	0x44, 0x72, 0x6f, 0x70, 0x4f, 0x62, 0x73, 0x63, 0x6f, 0x6c, 0x65, 0x6e, 0x73, 0x63, 0x65, 0x6e,
	0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x36, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d,
	0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x72, 0x6f, 0x70, 0x4f, 0x62, 0x73, 0x63, 0x6f, 0x6c, 0x65, 0x6e, 0x73, 0x63, 0x65,
	0x6e, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37,
	0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x72, 0x6f, 0x70, 0x4f, 0x62, 0x73,
	0x63, 0x6f, 0x6c, 0x65, 0x6e, 0x73, 0x63, 0x65, 0x6e, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x39, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x33, 0x2a,
	0x31, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6f, 0x62, 0x73, 0x6f, 0x6c, 0x65, 0x73, 0x63, 0x65, 0x6e, 0x63,
	0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x7b, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x7d, 0x12, 0xbd, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x3a, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45,
	0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e,
	0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x71, 0x75, 0x69, 0x70,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x20, 0x12, 0x1e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x12, 0xa9, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x40, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61,
	0x6d, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x42, 0x79, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x41, 0x2e, 0x6f, 0x70, 0x74, 0x69,
	0x73, 0x61, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x42,
	0x79, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x9c,
	0x01, 0x5a, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x61, 0x6d, 0x2d, 0x62, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x92, 0x41, 0x69, 0x5a, 0x59, 0x0a, 0x57, 0x0a, 0x06, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72,
	0x12, 0x4d, 0x08, 0x02, 0x12, 0x38, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x20, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2c, 0x20, 0x70, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x65, 0x64, 0x20, 0x62, 0x79, 0x20, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x3a, 0x20,
	0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x20, 0x3c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x3e, 0x1a, 0x0d,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x02, 0x62,
	0x0c, 0x0a, 0x0a, 0x0a, 0x06, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x12, 0x00, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_application_proto_rawDescOnce sync.Once
	file_application_proto_rawDescData = file_application_proto_rawDesc
)

func file_application_proto_rawDescGZIP() []byte {
	file_application_proto_rawDescOnce.Do(func() {
		file_application_proto_rawDescData = protoimpl.X.CompressGZIP(file_application_proto_rawDescData)
	})
	return file_application_proto_rawDescData
}

var file_application_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_application_proto_msgTypes = make([]protoimpl.MessageInfo, 53)
var file_application_proto_goTypes = []interface{}{
	(SortOrder)(0),                                   // 0: optisam.applications.v1.SortOrder
	(ListApplicationsRequest_SortBy)(0),              // 1: optisam.applications.v1.ListApplicationsRequest.SortBy
	(ListInstancesRequest_SortBy)(0),                 // 2: optisam.applications.v1.ListInstancesRequest.SortBy
	(*GetEquipmentsByApplicationRequest)(nil),        // 3: optisam.applications.v1.GetEquipmentsByApplicationRequest
	(*GetEquipmentsByApplicationResponse)(nil),       // 4: optisam.applications.v1.GetEquipmentsByApplicationResponse
	(*GetProductsByApplicationInstanceRequest)(nil),  // 5: optisam.applications.v1.GetProductsByApplicationInstanceRequest
	(*GetProductsByApplicationInstanceResponse)(nil), // 6: optisam.applications.v1.GetProductsByApplicationInstanceResponse
	(*DropObscolenscenceDataRequest)(nil),            // 7: optisam.applications.v1.DropObscolenscenceDataRequest
	(*DropObscolenscenceDataResponse)(nil),           // 8: optisam.applications.v1.DropObscolenscenceDataResponse
	(*UpsertApplicationRequest)(nil),                 // 9: optisam.applications.v1.UpsertApplicationRequest
	(*UpsertApplicationResponse)(nil),                // 10: optisam.applications.v1.UpsertApplicationResponse
	(*DropApplicationDataRequest)(nil),               // 11: optisam.applications.v1.DropApplicationDataRequest
	(*DropApplicationDataResponse)(nil),              // 12: optisam.applications.v1.DropApplicationDataResponse
	(*DeleteApplicationRequest)(nil),                 // 13: optisam.applications.v1.DeleteApplicationRequest
	(*DeleteApplicationResponse)(nil),                // 14: optisam.applications.v1.DeleteApplicationResponse
	(*UpsertInstanceRequest)(nil),                    // 15: optisam.applications.v1.UpsertInstanceRequest
	(*UpsertInstanceResponse)(nil),                   // 16: optisam.applications.v1.UpsertInstanceResponse
	(*DeleteInstanceRequest)(nil),                    // 17: optisam.applications.v1.DeleteInstanceRequest
	(*DeleteInstanceResponse)(nil),                   // 18: optisam.applications.v1.DeleteInstanceResponse
	(*ListApplicationsRequest)(nil),                  // 19: optisam.applications.v1.ListApplicationsRequest
	(*ListApplicationsResponse)(nil),                 // 20: optisam.applications.v1.ListApplicationsResponse
	(*Application)(nil),                              // 21: optisam.applications.v1.Application
	(*ApplicationSearchParams)(nil),                  // 22: optisam.applications.v1.ApplicationSearchParams
	(*ListInstancesRequest)(nil),                     // 23: optisam.applications.v1.ListInstancesRequest
	(*InstanceSearchParams)(nil),                     // 24: optisam.applications.v1.InstanceSearchParams
	(*ListInstancesResponse)(nil),                    // 25: optisam.applications.v1.ListInstancesResponse
	(*Instance)(nil),                                 // 26: optisam.applications.v1.Instance
	(*StringFilter)(nil),                             // 27: optisam.applications.v1.StringFilter
	(*ApplicationDomainsRequest)(nil),                // 28: optisam.applications.v1.ApplicationDomainsRequest
	(*ApplicationDomainsResponse)(nil),               // 29: optisam.applications.v1.ApplicationDomainsResponse
	(*DomainCriticityMetaRequest)(nil),               // 30: optisam.applications.v1.DomainCriticityMetaRequest
	(*DomainCriticityMeta)(nil),                      // 31: optisam.applications.v1.DomainCriticityMeta
	(*DomainCriticityMetaResponse)(nil),              // 32: optisam.applications.v1.DomainCriticityMetaResponse
	(*MaintenanceCriticityMetaRequest)(nil),          // 33: optisam.applications.v1.MaintenanceCriticityMetaRequest
	(*MaintenanceCriticityMeta)(nil),                 // 34: optisam.applications.v1.MaintenanceCriticityMeta
	(*MaintenanceCriticityMetaResponse)(nil),         // 35: optisam.applications.v1.MaintenanceCriticityMetaResponse
	(*RiskMetaRequest)(nil),                          // 36: optisam.applications.v1.RiskMetaRequest
	(*RiskMeta)(nil),                                 // 37: optisam.applications.v1.RiskMeta
	(*RiskMetaResponse)(nil),                         // 38: optisam.applications.v1.RiskMetaResponse
	(*DomainCriticityRequest)(nil),                   // 39: optisam.applications.v1.DomainCriticityRequest
	(*DomainCriticity)(nil),                          // 40: optisam.applications.v1.DomainCriticity
	(*DomainCriticityResponse)(nil),                  // 41: optisam.applications.v1.DomainCriticityResponse
	(*PostDomainCriticityRequest)(nil),               // 42: optisam.applications.v1.PostDomainCriticityRequest
	(*PostDomainCriticityResponse)(nil),              // 43: optisam.applications.v1.PostDomainCriticityResponse
	(*MaintenanceCriticityRequest)(nil),              // 44: optisam.applications.v1.MaintenanceCriticityRequest
	(*MaintenanceCriticity)(nil),                     // 45: optisam.applications.v1.MaintenanceCriticity
	(*PostMaintenanceCriticityRequest)(nil),          // 46: optisam.applications.v1.PostMaintenanceCriticityRequest
	(*MaintenanceCriticityResponse)(nil),             // 47: optisam.applications.v1.MaintenanceCriticityResponse
	(*PostMaintenanceCriticityResponse)(nil),         // 48: optisam.applications.v1.PostMaintenanceCriticityResponse
	(*RiskMatrixRequest)(nil),                        // 49: optisam.applications.v1.RiskMatrixRequest
	(*RiskMatrix)(nil),                               // 50: optisam.applications.v1.RiskMatrix
	(*RiskMatrixResponse)(nil),                       // 51: optisam.applications.v1.RiskMatrixResponse
	(*PostRiskMatrixRequest)(nil),                    // 52: optisam.applications.v1.PostRiskMatrixRequest
	(*PostRiskMatrixResponse)(nil),                   // 53: optisam.applications.v1.PostRiskMatrixResponse
	(*UpsertInstanceRequestProduct)(nil),             // 54: optisam.applications.v1.UpsertInstanceRequest.product
	(*UpsertInstanceRequestEquipment)(nil),           // 55: optisam.applications.v1.UpsertInstanceRequest.equipment
}
var file_application_proto_depIdxs = []int32{
	54, // 0: optisam.applications.v1.UpsertInstanceRequest.products:type_name -> optisam.applications.v1.UpsertInstanceRequest.product
	55, // 1: optisam.applications.v1.UpsertInstanceRequest.equipments:type_name -> optisam.applications.v1.UpsertInstanceRequest.equipment
	1,  // 2: optisam.applications.v1.ListApplicationsRequest.sort_by:type_name -> optisam.applications.v1.ListApplicationsRequest.SortBy
	0,  // 3: optisam.applications.v1.ListApplicationsRequest.sort_order:type_name -> optisam.applications.v1.SortOrder
	22, // 4: optisam.applications.v1.ListApplicationsRequest.search_params:type_name -> optisam.applications.v1.ApplicationSearchParams
	21, // 5: optisam.applications.v1.ListApplicationsResponse.applications:type_name -> optisam.applications.v1.Application
	27, // 6: optisam.applications.v1.ApplicationSearchParams.name:type_name -> optisam.applications.v1.StringFilter
	27, // 7: optisam.applications.v1.ApplicationSearchParams.owner:type_name -> optisam.applications.v1.StringFilter
	27, // 8: optisam.applications.v1.ApplicationSearchParams.product_id:type_name -> optisam.applications.v1.StringFilter
	27, // 9: optisam.applications.v1.ApplicationSearchParams.domain:type_name -> optisam.applications.v1.StringFilter
	27, // 10: optisam.applications.v1.ApplicationSearchParams.obsolescence_risk:type_name -> optisam.applications.v1.StringFilter
	2,  // 11: optisam.applications.v1.ListInstancesRequest.sort_by:type_name -> optisam.applications.v1.ListInstancesRequest.SortBy
	0,  // 12: optisam.applications.v1.ListInstancesRequest.sort_order:type_name -> optisam.applications.v1.SortOrder
	24, // 13: optisam.applications.v1.ListInstancesRequest.search_params:type_name -> optisam.applications.v1.InstanceSearchParams
	27, // 14: optisam.applications.v1.InstanceSearchParams.application_id:type_name -> optisam.applications.v1.StringFilter
	27, // 15: optisam.applications.v1.InstanceSearchParams.product_id:type_name -> optisam.applications.v1.StringFilter
	26, // 16: optisam.applications.v1.ListInstancesResponse.instances:type_name -> optisam.applications.v1.Instance
	31, // 17: optisam.applications.v1.DomainCriticityMetaResponse.domain_criticity_meta:type_name -> optisam.applications.v1.DomainCriticityMeta
	34, // 18: optisam.applications.v1.MaintenanceCriticityMetaResponse.maintenance_criticity_meta:type_name -> optisam.applications.v1.MaintenanceCriticityMeta
	37, // 19: optisam.applications.v1.RiskMetaResponse.risk_meta:type_name -> optisam.applications.v1.RiskMeta
	40, // 20: optisam.applications.v1.DomainCriticityResponse.domains_criticity:type_name -> optisam.applications.v1.DomainCriticity
	40, // 21: optisam.applications.v1.PostDomainCriticityRequest.domains_criticity:type_name -> optisam.applications.v1.DomainCriticity
	45, // 22: optisam.applications.v1.PostMaintenanceCriticityRequest.maintenance_criticy:type_name -> optisam.applications.v1.MaintenanceCriticity
	45, // 23: optisam.applications.v1.MaintenanceCriticityResponse.maintenance_criticy:type_name -> optisam.applications.v1.MaintenanceCriticity
	50, // 24: optisam.applications.v1.RiskMatrixResponse.risk_matrix:type_name -> optisam.applications.v1.RiskMatrix
	50, // 25: optisam.applications.v1.PostRiskMatrixRequest.risk_matrix:type_name -> optisam.applications.v1.RiskMatrix
	9,  // 26: optisam.applications.v1.ApplicationService.UpsertApplication:input_type -> optisam.applications.v1.UpsertApplicationRequest
	11, // 27: optisam.applications.v1.ApplicationService.DropApplicationData:input_type -> optisam.applications.v1.DropApplicationDataRequest
	13, // 28: optisam.applications.v1.ApplicationService.DeleteApplication:input_type -> optisam.applications.v1.DeleteApplicationRequest
	15, // 29: optisam.applications.v1.ApplicationService.UpsertInstance:input_type -> optisam.applications.v1.UpsertInstanceRequest
	17, // 30: optisam.applications.v1.ApplicationService.DeleteInstance:input_type -> optisam.applications.v1.DeleteInstanceRequest
	19, // 31: optisam.applications.v1.ApplicationService.ListApplications:input_type -> optisam.applications.v1.ListApplicationsRequest
	23, // 32: optisam.applications.v1.ApplicationService.ListInstances:input_type -> optisam.applications.v1.ListInstancesRequest
	28, // 33: optisam.applications.v1.ApplicationService.ApplicationDomains:input_type -> optisam.applications.v1.ApplicationDomainsRequest
	30, // 34: optisam.applications.v1.ApplicationService.ObsolescenceDomainCriticityMeta:input_type -> optisam.applications.v1.DomainCriticityMetaRequest
	33, // 35: optisam.applications.v1.ApplicationService.ObsolescenceMaintenanceCriticityMeta:input_type -> optisam.applications.v1.MaintenanceCriticityMetaRequest
	36, // 36: optisam.applications.v1.ApplicationService.ObsolescenceRiskMeta:input_type -> optisam.applications.v1.RiskMetaRequest
	39, // 37: optisam.applications.v1.ApplicationService.ObsolescenceDomainCriticity:input_type -> optisam.applications.v1.DomainCriticityRequest
	42, // 38: optisam.applications.v1.ApplicationService.PostObsolescenceDomainCriticity:input_type -> optisam.applications.v1.PostDomainCriticityRequest
	44, // 39: optisam.applications.v1.ApplicationService.ObsolescenseMaintenanceCriticity:input_type -> optisam.applications.v1.MaintenanceCriticityRequest
	46, // 40: optisam.applications.v1.ApplicationService.PostObsolescenseMaintenanceCriticity:input_type -> optisam.applications.v1.PostMaintenanceCriticityRequest
	49, // 41: optisam.applications.v1.ApplicationService.ObsolescenseRiskMatrix:input_type -> optisam.applications.v1.RiskMatrixRequest
	52, // 42: optisam.applications.v1.ApplicationService.PostObsolescenseRiskMatrix:input_type -> optisam.applications.v1.PostRiskMatrixRequest
	7,  // 43: optisam.applications.v1.ApplicationService.DropObscolenscenceData:input_type -> optisam.applications.v1.DropObscolenscenceDataRequest
	3,  // 44: optisam.applications.v1.ApplicationService.GetEquipmentsByApplication:input_type -> optisam.applications.v1.GetEquipmentsByApplicationRequest
	5,  // 45: optisam.applications.v1.ApplicationService.GetProductsByApplicationInstance:input_type -> optisam.applications.v1.GetProductsByApplicationInstanceRequest
	10, // 46: optisam.applications.v1.ApplicationService.UpsertApplication:output_type -> optisam.applications.v1.UpsertApplicationResponse
	12, // 47: optisam.applications.v1.ApplicationService.DropApplicationData:output_type -> optisam.applications.v1.DropApplicationDataResponse
	14, // 48: optisam.applications.v1.ApplicationService.DeleteApplication:output_type -> optisam.applications.v1.DeleteApplicationResponse
	16, // 49: optisam.applications.v1.ApplicationService.UpsertInstance:output_type -> optisam.applications.v1.UpsertInstanceResponse
	18, // 50: optisam.applications.v1.ApplicationService.DeleteInstance:output_type -> optisam.applications.v1.DeleteInstanceResponse
	20, // 51: optisam.applications.v1.ApplicationService.ListApplications:output_type -> optisam.applications.v1.ListApplicationsResponse
	25, // 52: optisam.applications.v1.ApplicationService.ListInstances:output_type -> optisam.applications.v1.ListInstancesResponse
	29, // 53: optisam.applications.v1.ApplicationService.ApplicationDomains:output_type -> optisam.applications.v1.ApplicationDomainsResponse
	32, // 54: optisam.applications.v1.ApplicationService.ObsolescenceDomainCriticityMeta:output_type -> optisam.applications.v1.DomainCriticityMetaResponse
	35, // 55: optisam.applications.v1.ApplicationService.ObsolescenceMaintenanceCriticityMeta:output_type -> optisam.applications.v1.MaintenanceCriticityMetaResponse
	38, // 56: optisam.applications.v1.ApplicationService.ObsolescenceRiskMeta:output_type -> optisam.applications.v1.RiskMetaResponse
	41, // 57: optisam.applications.v1.ApplicationService.ObsolescenceDomainCriticity:output_type -> optisam.applications.v1.DomainCriticityResponse
	43, // 58: optisam.applications.v1.ApplicationService.PostObsolescenceDomainCriticity:output_type -> optisam.applications.v1.PostDomainCriticityResponse
	47, // 59: optisam.applications.v1.ApplicationService.ObsolescenseMaintenanceCriticity:output_type -> optisam.applications.v1.MaintenanceCriticityResponse
	48, // 60: optisam.applications.v1.ApplicationService.PostObsolescenseMaintenanceCriticity:output_type -> optisam.applications.v1.PostMaintenanceCriticityResponse
	51, // 61: optisam.applications.v1.ApplicationService.ObsolescenseRiskMatrix:output_type -> optisam.applications.v1.RiskMatrixResponse
	53, // 62: optisam.applications.v1.ApplicationService.PostObsolescenseRiskMatrix:output_type -> optisam.applications.v1.PostRiskMatrixResponse
	8,  // 63: optisam.applications.v1.ApplicationService.DropObscolenscenceData:output_type -> optisam.applications.v1.DropObscolenscenceDataResponse
	4,  // 64: optisam.applications.v1.ApplicationService.GetEquipmentsByApplication:output_type -> optisam.applications.v1.GetEquipmentsByApplicationResponse
	6,  // 65: optisam.applications.v1.ApplicationService.GetProductsByApplicationInstance:output_type -> optisam.applications.v1.GetProductsByApplicationInstanceResponse
	46, // [46:66] is the sub-list for method output_type
	26, // [26:46] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_application_proto_init() }
func file_application_proto_init() {
	if File_application_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_application_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEquipmentsByApplicationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_application_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEquipmentsByApplicationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_application_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductsByApplicationInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_application_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductsByApplicationInstanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_application_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropObscolenscenceDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_application_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropObscolenscenceDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_application_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertApplicationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_application_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertApplicationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_application_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropApplicationDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_application_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropApplicationDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_application_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteApplicationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_application_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteApplicationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_application_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_application_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertInstanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_application_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_application_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInstanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_application_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListApplicationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_application_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListApplicationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_application_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Application); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_application_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationSearchParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_application_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInstancesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_application_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstanceSearchParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_application_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInstancesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_application_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Instance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_application_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_application_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationDomainsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_application_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationDomainsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_application_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DomainCriticityMetaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_application_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DomainCriticityMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_application_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DomainCriticityMetaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_application_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaintenanceCriticityMetaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_application_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaintenanceCriticityMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_application_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaintenanceCriticityMetaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_application_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RiskMetaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_application_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RiskMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_application_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RiskMetaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_application_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DomainCriticityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_application_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DomainCriticity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_application_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DomainCriticityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_application_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostDomainCriticityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_application_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostDomainCriticityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_application_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaintenanceCriticityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_application_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaintenanceCriticity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_application_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostMaintenanceCriticityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_application_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaintenanceCriticityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_application_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostMaintenanceCriticityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_application_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RiskMatrixRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_application_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RiskMatrix); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_application_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RiskMatrixResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_application_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostRiskMatrixRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_application_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostRiskMatrixResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_application_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertInstanceRequestProduct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_application_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertInstanceRequestEquipment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_application_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   53,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_application_proto_goTypes,
		DependencyIndexes: file_application_proto_depIdxs,
		EnumInfos:         file_application_proto_enumTypes,
		MessageInfos:      file_application_proto_msgTypes,
	}.Build()
	File_application_proto = out.File
	file_application_proto_rawDesc = nil
	file_application_proto_goTypes = nil
	file_application_proto_depIdxs = nil
}
