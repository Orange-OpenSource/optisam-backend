// Code generated by sqlc. DO NOT EDIT.

package db

import (
	"database/sql"
	"encoding/json"
	"fmt"
	"time"

	"github.com/shopspring/decimal"
)

type JobStatus string

const (
	JobStatusPENDING   JobStatus = "PENDING"
	JobStatusCOMPLETED JobStatus = "COMPLETED"
	JobStatusFAILED    JobStatus = "FAILED"
	JobStatusRETRY     JobStatus = "RETRY"
	JobStatusRUNNING   JobStatus = "RUNNING"
)

func (e *JobStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = JobStatus(s)
	case string:
		*e = JobStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for JobStatus: %T", src)
	}
	return nil
}

type Acqright struct {
	Sku                     string          `json:"sku"`
	Swidtag                 string          `json:"swidtag"`
	ProductName             string          `json:"product_name"`
	ProductEditor           string          `json:"product_editor"`
	Scope                   string          `json:"scope"`
	Metric                  string          `json:"metric"`
	NumLicensesAcquired     int32           `json:"num_licenses_acquired"`
	NumLicencesComputed     int32           `json:"num_licences_computed"`
	NumLicencesMaintainance int32           `json:"num_licences_maintainance"`
	AvgUnitPrice            decimal.Decimal `json:"avg_unit_price"`
	AvgMaintenanceUnitPrice decimal.Decimal `json:"avg_maintenance_unit_price"`
	TotalPurchaseCost       decimal.Decimal `json:"total_purchase_cost"`
	TotalComputedCost       decimal.Decimal `json:"total_computed_cost"`
	TotalMaintenanceCost    decimal.Decimal `json:"total_maintenance_cost"`
	TotalCost               decimal.Decimal `json:"total_cost"`
	CreatedOn               time.Time       `json:"created_on"`
	CreatedBy               string          `json:"created_by"`
	UpdatedOn               time.Time       `json:"updated_on"`
	UpdatedBy               sql.NullString  `json:"updated_by"`
	StartOfMaintenance      sql.NullTime    `json:"start_of_maintenance"`
	EndOfMaintenance        sql.NullTime    `json:"end_of_maintenance"`
	Version                 string          `json:"version"`
	Comment                 sql.NullString  `json:"comment"`
}

type AggregatedRight struct {
	ID                      int32           `json:"id"`
	AggregationName         string          `json:"aggregation_name"`
	Sku                     string          `json:"sku"`
	ProductEditor           string          `json:"product_editor"`
	Metric                  string          `json:"metric"`
	Products                []string        `json:"products"`
	Swidtags                []string        `json:"swidtags"`
	Scope                   string          `json:"scope"`
	NumLicensesAcquired     int32           `json:"num_licenses_acquired"`
	NumLicencesComputed     int32           `json:"num_licences_computed"`
	NumLicencesMaintainance int32           `json:"num_licences_maintainance"`
	AvgUnitPrice            decimal.Decimal `json:"avg_unit_price"`
	AvgMaintenanceUnitPrice decimal.Decimal `json:"avg_maintenance_unit_price"`
	TotalPurchaseCost       decimal.Decimal `json:"total_purchase_cost"`
	TotalComputedCost       decimal.Decimal `json:"total_computed_cost"`
	TotalMaintenanceCost    decimal.Decimal `json:"total_maintenance_cost"`
	TotalCost               decimal.Decimal `json:"total_cost"`
	StartOfMaintenance      sql.NullTime    `json:"start_of_maintenance"`
	EndOfMaintenance        sql.NullTime    `json:"end_of_maintenance"`
	Comment                 sql.NullString  `json:"comment"`
	CreatedOn               time.Time       `json:"created_on"`
	CreatedBy               string          `json:"created_by"`
	UpdatedOn               time.Time       `json:"updated_on"`
	UpdatedBy               sql.NullString  `json:"updated_by"`
}

type Aggregation struct {
	AggregationID     int32          `json:"aggregation_id"`
	AggregationName   string         `json:"aggregation_name"`
	AggregationMetric string         `json:"aggregation_metric"`
	AggregationScope  string         `json:"aggregation_scope"`
	Products          []string       `json:"products"`
	CreatedOn         time.Time      `json:"created_on"`
	CreatedBy         string         `json:"created_by"`
	UpdatedOn         sql.NullTime   `json:"updated_on"`
	UpdatedBy         sql.NullString `json:"updated_by"`
}

type DashboardAudit struct {
	ID           int32        `json:"id"`
	UpdatedAt    time.Time    `json:"updated_at"`
	NextUpdateAt sql.NullTime `json:"next_update_at"`
	UpdatedBy    string       `json:"updated_by"`
	Scope        string       `json:"scope"`
}

type Job struct {
	JobID      int32           `json:"job_id"`
	Type       string          `json:"type"`
	Status     JobStatus       `json:"status"`
	Data       json.RawMessage `json:"data"`
	Comments   sql.NullString  `json:"comments"`
	StartTime  sql.NullTime    `json:"start_time"`
	EndTime    sql.NullTime    `json:"end_time"`
	CreatedAt  time.Time       `json:"created_at"`
	RetryCount sql.NullInt32   `json:"retry_count"`
	MetaData   json.RawMessage `json:"meta_data"`
}

type Product struct {
	Swidtag         string         `json:"swidtag"`
	ProductName     string         `json:"product_name"`
	ProductVersion  string         `json:"product_version"`
	ProductEdition  string         `json:"product_edition"`
	ProductCategory string         `json:"product_category"`
	ProductEditor   string         `json:"product_editor"`
	Scope           string         `json:"scope"`
	OptionOf        string         `json:"option_of"`
	AggregationID   int32          `json:"aggregation_id"`
	AggregationName string         `json:"aggregation_name"`
	CreatedOn       time.Time      `json:"created_on"`
	CreatedBy       string         `json:"created_by"`
	UpdatedOn       time.Time      `json:"updated_on"`
	UpdatedBy       sql.NullString `json:"updated_by"`
}

type ProductsApplication struct {
	Swidtag       string `json:"swidtag"`
	ApplicationID string `json:"application_id"`
	Scope         string `json:"scope"`
}

type ProductsEquipment struct {
	Swidtag     string        `json:"swidtag"`
	EquipmentID string        `json:"equipment_id"`
	NumOfUsers  sql.NullInt32 `json:"num_of_users"`
	Scope       string        `json:"scope"`
}
