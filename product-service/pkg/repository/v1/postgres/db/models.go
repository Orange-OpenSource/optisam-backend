// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0

package db

import (
	"database/sql"
	"database/sql/driver"
	"encoding/json"
	"fmt"
	"time"

	"github.com/shopspring/decimal"
	"github.com/tabbed/pqtype"
)

type JobStatus string

const (
	JobStatusPENDING   JobStatus = "PENDING"
	JobStatusCOMPLETED JobStatus = "COMPLETED"
	JobStatusFAILED    JobStatus = "FAILED"
	JobStatusRETRY     JobStatus = "RETRY"
	JobStatusRUNNING   JobStatus = "RUNNING"
)

func (e *JobStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = JobStatus(s)
	case string:
		*e = JobStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for JobStatus: %T", src)
	}
	return nil
}

type NullJobStatus struct {
	JobStatus JobStatus
	Valid     bool // Valid is true if JobStatus is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullJobStatus) Scan(value interface{}) error {
	if value == nil {
		ns.JobStatus, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.JobStatus.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullJobStatus) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return ns.JobStatus, nil
}

type LocationType string

const (
	LocationTypeNONE      LocationType = "NONE"
	LocationTypeOnPremise LocationType = "On Premise"
	LocationTypeSAAS      LocationType = "SAAS"
	LocationTypeBoth      LocationType = "Both"
)

func (e *LocationType) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = LocationType(s)
	case string:
		*e = LocationType(s)
	default:
		return fmt.Errorf("unsupported scan type for LocationType: %T", src)
	}
	return nil
}

type NullLocationType struct {
	LocationType LocationType
	Valid        bool // Valid is true if LocationType is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullLocationType) Scan(value interface{}) error {
	if value == nil {
		ns.LocationType, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.LocationType.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullLocationType) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return ns.LocationType, nil
}

type OpensourceType string

const (
	OpensourceTypeNONE       OpensourceType = "NONE"
	OpensourceTypeCOMMERCIAL OpensourceType = "COMMERCIAL"
	OpensourceTypeCOMMUNITY  OpensourceType = "COMMUNITY"
	OpensourceTypeBOTH       OpensourceType = "BOTH"
)

func (e *OpensourceType) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = OpensourceType(s)
	case string:
		*e = OpensourceType(s)
	default:
		return fmt.Errorf("unsupported scan type for OpensourceType: %T", src)
	}
	return nil
}

type NullOpensourceType struct {
	OpensourceType OpensourceType
	Valid          bool // Valid is true if OpensourceType is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullOpensourceType) Scan(value interface{}) error {
	if value == nil {
		ns.OpensourceType, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.OpensourceType.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullOpensourceType) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return ns.OpensourceType, nil
}

type Acqright struct {
	Sku                       string          `json:"sku"`
	Swidtag                   string          `json:"swidtag"`
	ProductName               string          `json:"product_name"`
	ProductEditor             string          `json:"product_editor"`
	Scope                     string          `json:"scope"`
	Metric                    string          `json:"metric"`
	NumLicensesAcquired       int32           `json:"num_licenses_acquired"`
	NumLicencesComputed       int32           `json:"num_licences_computed"`
	NumLicencesMaintainance   int32           `json:"num_licences_maintainance"`
	AvgUnitPrice              decimal.Decimal `json:"avg_unit_price"`
	AvgMaintenanceUnitPrice   decimal.Decimal `json:"avg_maintenance_unit_price"`
	TotalPurchaseCost         decimal.Decimal `json:"total_purchase_cost"`
	TotalComputedCost         decimal.Decimal `json:"total_computed_cost"`
	TotalMaintenanceCost      decimal.Decimal `json:"total_maintenance_cost"`
	TotalCost                 decimal.Decimal `json:"total_cost"`
	CreatedOn                 time.Time       `json:"created_on"`
	CreatedBy                 string          `json:"created_by"`
	UpdatedOn                 time.Time       `json:"updated_on"`
	UpdatedBy                 sql.NullString  `json:"updated_by"`
	StartOfMaintenance        sql.NullTime    `json:"start_of_maintenance"`
	EndOfMaintenance          sql.NullTime    `json:"end_of_maintenance"`
	LastPurchasedOrder        string          `json:"last_purchased_order"`
	SupportNumber             string          `json:"support_number"`
	MaintenanceProvider       string          `json:"maintenance_provider"`
	Version                   string          `json:"version"`
	Comment                   sql.NullString  `json:"comment"`
	OrderingDate              sql.NullTime    `json:"ordering_date"`
	CorporateSourcingContract string          `json:"corporate_sourcing_contract"`
	SoftwareProvider          string          `json:"software_provider"`
	FileName                  string          `json:"file_name"`
	FileData                  []byte          `json:"file_data"`
	Repartition               bool            `json:"repartition"`
}

type AggregatedRight struct {
	Sku                       string          `json:"sku"`
	AggregationID             int32           `json:"aggregation_id"`
	Metric                    string          `json:"metric"`
	OrderingDate              sql.NullTime    `json:"ordering_date"`
	CorporateSourcingContract string          `json:"corporate_sourcing_contract"`
	SoftwareProvider          string          `json:"software_provider"`
	Scope                     string          `json:"scope"`
	NumLicensesAcquired       int32           `json:"num_licenses_acquired"`
	NumLicencesComputed       int32           `json:"num_licences_computed"`
	NumLicencesMaintenance    int32           `json:"num_licences_maintenance"`
	AvgUnitPrice              decimal.Decimal `json:"avg_unit_price"`
	AvgMaintenanceUnitPrice   decimal.Decimal `json:"avg_maintenance_unit_price"`
	TotalPurchaseCost         decimal.Decimal `json:"total_purchase_cost"`
	TotalComputedCost         decimal.Decimal `json:"total_computed_cost"`
	TotalMaintenanceCost      decimal.Decimal `json:"total_maintenance_cost"`
	TotalCost                 decimal.Decimal `json:"total_cost"`
	StartOfMaintenance        sql.NullTime    `json:"start_of_maintenance"`
	EndOfMaintenance          sql.NullTime    `json:"end_of_maintenance"`
	LastPurchasedOrder        string          `json:"last_purchased_order"`
	SupportNumber             string          `json:"support_number"`
	MaintenanceProvider       string          `json:"maintenance_provider"`
	Comment                   sql.NullString  `json:"comment"`
	CreatedOn                 time.Time       `json:"created_on"`
	CreatedBy                 string          `json:"created_by"`
	UpdatedOn                 time.Time       `json:"updated_on"`
	UpdatedBy                 sql.NullString  `json:"updated_by"`
	FileName                  string          `json:"file_name"`
	FileData                  []byte          `json:"file_data"`
	Repartition               bool            `json:"repartition"`
}

type Aggregation struct {
	ID              int32          `json:"id"`
	AggregationName string         `json:"aggregation_name"`
	Scope           string         `json:"scope"`
	ProductEditor   string         `json:"product_editor"`
	Products        []string       `json:"products"`
	Swidtags        []string       `json:"swidtags"`
	CreatedOn       time.Time      `json:"created_on"`
	CreatedBy       string         `json:"created_by"`
	UpdatedOn       sql.NullTime   `json:"updated_on"`
	UpdatedBy       sql.NullString `json:"updated_by"`
}

type DashboardAudit struct {
	ID           int32        `json:"id"`
	UpdatedAt    time.Time    `json:"updated_at"`
	NextUpdateAt sql.NullTime `json:"next_update_at"`
	UpdatedBy    string       `json:"updated_by"`
	Scope        string       `json:"scope"`
}

type EditorCatalog struct {
	ID                 string                `json:"id"`
	Name               string                `json:"name"`
	GeneralInformation sql.NullString        `json:"general_information"`
	PartnerManagers    pqtype.NullRawMessage `json:"partner_managers"`
	Audits             pqtype.NullRawMessage `json:"audits"`
	Vendors            pqtype.NullRawMessage `json:"vendors"`
	CreatedOn          time.Time             `json:"created_on"`
	UpdatedOn          time.Time             `json:"updated_on"`
	Source             sql.NullString        `json:"source"`
}

type Job struct {
	JobID      int32           `json:"job_id"`
	Type       string          `json:"type"`
	Status     JobStatus       `json:"status"`
	Data       json.RawMessage `json:"data"`
	Comments   sql.NullString  `json:"comments"`
	StartTime  sql.NullTime    `json:"start_time"`
	EndTime    sql.NullTime    `json:"end_time"`
	CreatedAt  time.Time       `json:"created_at"`
	RetryCount sql.NullInt32   `json:"retry_count"`
	MetaData   json.RawMessage `json:"meta_data"`
}

type OverallComputedLicence struct {
	Sku                 string          `json:"sku"`
	Swidtags            string          `json:"swidtags"`
	Scope               string          `json:"scope"`
	ProductNames        string          `json:"product_names"`
	AggregationName     string          `json:"aggregation_name"`
	Metrics             string          `json:"metrics"`
	NumComputedLicences int32           `json:"num_computed_licences"`
	NumAcquiredLicences int32           `json:"num_acquired_licences"`
	TotalCost           decimal.Decimal `json:"total_cost"`
	PurchaseCost        decimal.Decimal `json:"purchase_cost"`
	ComputedCost        decimal.Decimal `json:"computed_cost"`
	DeltaNumber         int32           `json:"delta_number"`
	DeltaCost           decimal.Decimal `json:"delta_cost"`
	AvgUnitPrice        decimal.Decimal `json:"avg_unit_price"`
	ComputedDetails     string          `json:"computed_details"`
	CostOptimization    sql.NullBool    `json:"cost_optimization"`
	MeticNotDefined     sql.NullBool    `json:"metic_not_defined"`
	NotDeployed         sql.NullBool    `json:"not_deployed"`
	Editor              string          `json:"editor"`
}

type Product struct {
	Swidtag         string         `json:"swidtag"`
	ProductName     string         `json:"product_name"`
	ProductVersion  string         `json:"product_version"`
	ProductEdition  string         `json:"product_edition"`
	ProductCategory string         `json:"product_category"`
	ProductEditor   string         `json:"product_editor"`
	Scope           string         `json:"scope"`
	OptionOf        string         `json:"option_of"`
	AggregationID   int32          `json:"aggregation_id"`
	AggregationName string         `json:"aggregation_name"`
	CreatedOn       time.Time      `json:"created_on"`
	CreatedBy       string         `json:"created_by"`
	UpdatedOn       time.Time      `json:"updated_on"`
	UpdatedBy       sql.NullString `json:"updated_by"`
}

type ProductCatalog struct {
	ID                  string                `json:"id"`
	Name                string                `json:"name"`
	Editorid            string                `json:"editorid"`
	GenearlInformation  sql.NullString        `json:"genearl_information"`
	ContractTips        sql.NullString        `json:"contract_tips"`
	SupportVendors      pqtype.NullRawMessage `json:"support_vendors"`
	Metrics             pqtype.NullRawMessage `json:"metrics"`
	IsOpensource        sql.NullBool          `json:"is_opensource"`
	LicencesOpensource  sql.NullString        `json:"licences_opensource"`
	IsClosesource       sql.NullBool          `json:"is_closesource"`
	LicensesClosesource pqtype.NullRawMessage `json:"licenses_closesource"`
	Location            LocationType          `json:"location"`
	CreatedOn           time.Time             `json:"created_on"`
	UpdatedOn           time.Time             `json:"updated_on"`
	Recommendation      sql.NullString        `json:"recommendation"`
	UsefulLinks         pqtype.NullRawMessage `json:"useful_links"`
	SwidTagProduct      sql.NullString        `json:"swid_tag_product"`
	Source              sql.NullString        `json:"source"`
	EditorName          string                `json:"editor_name"`
	OpensourceType      OpensourceType        `json:"opensource_type"`
}

type ProductsApplication struct {
	Swidtag       string `json:"swidtag"`
	ApplicationID string `json:"application_id"`
	Scope         string `json:"scope"`
}

type ProductsEquipment struct {
	Swidtag         string        `json:"swidtag"`
	EquipmentID     string        `json:"equipment_id"`
	NumOfUsers      sql.NullInt32 `json:"num_of_users"`
	AllocatedMetric string        `json:"allocated_metric"`
	Scope           string        `json:"scope"`
}

type UploadFileLog struct {
	UploadID   int32          `json:"upload_id"`
	FileName   string         `json:"file_name"`
	UploadedOn time.Time      `json:"uploaded_on"`
	Message    sql.NullString `json:"message"`
}

type VersionCatalog struct {
	ID             string         `json:"id"`
	SwidTagSystem  string         `json:"swid_tag_system"`
	PID            string         `json:"p_id"`
	Name           string         `json:"name"`
	EndOfLife      sql.NullTime   `json:"end_of_life"`
	EndOfSupport   sql.NullTime   `json:"end_of_support"`
	Recommendation sql.NullString `json:"recommendation"`
	SwidTagVersion sql.NullString `json:"swid_tag_version"`
	Source         sql.NullString `json:"source"`
}
