environment = "DEVELOPMENT"
debug = false
grpcport = "8090"
httpport = "8080"
maxapiworker = 3
DgraphBatchSize = 5
NoOfPartitions = 3

[workerqueue]
retries = 3
basedelay = 1

[cron]
time = "@midnight"
maintenanceTime = "@midnight"

[log]
customtimeformat = "2006-01-02T15:04:05.999999999Z07:00"
loglevel = -1

[instrumentation]
addr = ":8081"

[instrumentation.prometheus]
enabled = true


[instrumentation.jaeger]
enabled = true
serviceName = "product-service"
collectorEndpoint = "http://jaeger-collector.dev-optisam.svc:14268/api/traces"
agentEndpoint = "jaeger-agent.dev-optisam.svc:6831"
# username = ""
# password = ""

[dgraph]
hosts = [
    "svc-optisam-dgraph.dev-optisam.svc:9080"
]

[database]
host = "svc-optisam-postgres.dev-optisam.svc"
port = 5432
# should be user of full rights
[database.admin]
user = "optisam"
pass = ""
name = "product" 

# user of inser/update/delete/read access
[database.user]
user = "optisam_app_user"
pass = ""
name = "product" 
[database.Migration]
version = ""#version = "1.4_schema.sql;1.4.3_schema.sql;1.4.2_schema.sql"
direction = ""
migrationPath  = "./schema"
deleteMigrations = true

[redis]
host = "red-dev-redis-dev-service"
#pass = ""
db = 0
#username = ""

[app.params]
pageSize = 20
pageNum = 1
sortOrder = "asc"
sortBy = "name"

[iam]
publickeypath = "/opt/secret/ssh-privatekey"
apiKey = "12345678"
regopath = "rbac.rego"

[grpcservers]
apikey = "12345678"
timeout = 10

[grpcservers.Address]
license = "svc-optisam-license-dev.dev-optisam.svc:8090"
metric = "svc-optisam-metric-dev.dev-optisam.svc:8090"
application = "svc-optisam-application-dev.dev-optisam.svc:8090"
account = "svc-optisam-account-dev.dev-optisam.svc:8090"
equipment = "svc-optisam-equipment-dev.dev-optisam.svc:8090"
notification = "svc-optisam-notification-dev.dev-optisam.svc:8090"

[httpservers.Address]
auth = "svc-optisam-auth-dev.dev-optisam.svc:80"

[application]
#usernameadmin = ""
#passwordadmin = ""
#usernamesuperadmin = ""
#passwordsuperadmin = ""
#usernameuser = ""
#passworduser = ""

[emailtemplate]
expiringSoonPath = "./templates/expiringSoonMaintenance.html"
expiredPath = "./templates/expiredMaintenance.html"

[kafka]
bootstrapservers = "dev-kafka-externel-bootstrap.dev-optisam.svc:9094"
sslkeylocation = "/opt/secret-key/ssh-privatekey"
sslcertificatelocation = "/opt/secret-client/ssh-privatekey"
sslcalocation = "/opt/secret-ca/ssh-privatekey"
securityprotocol = "ssl"

