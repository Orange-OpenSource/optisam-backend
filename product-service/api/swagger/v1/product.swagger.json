{
  "swagger": "2.0",
  "info": {
    "title": "product.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/editors": {
      "get": {
        "operationId": "ListEditors",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListEditorsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "scopes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "ProductService"
        ]
      }
    },
    "/api/v1/editors/products": {
      "get": {
        "operationId": "ListEditorProducts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListEditorProductsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "editor",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "scopes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "ProductService"
        ]
      }
    },
    "/api/v1/product/{swid_tag}": {
      "get": {
        "operationId": "GetProductDetail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ProductResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "swid_tag",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProductService"
        ]
      }
    },
    "/api/v1/product/{swid_tag}/options": {
      "get": {
        "operationId": "GetProductOptions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ProductOptionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "swid_tag",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProductService"
        ]
      }
    },
    "/api/v1/products": {
      "get": {
        "operationId": "ListProducts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListProductsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "page_num",
            "description": "Page number",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_size",
            "description": "Items per page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "default": "asc"
          },
          {
            "name": "search_params.swidTag.filteringOrder",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "search_params.swidTag.filteringkey",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "search_params.swidTag.filter_type",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "search_params.swidTag.filteringkey_multiple",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "search_params.name.filteringOrder",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "search_params.name.filteringkey",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "search_params.name.filter_type",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "search_params.name.filteringkey_multiple",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "search_params.editor.filteringOrder",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "search_params.editor.filteringkey",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "search_params.editor.filter_type",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "search_params.editor.filteringkey_multiple",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "search_params.application_id.filteringOrder",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "search_params.application_id.filteringkey",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "search_params.application_id.filter_type",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "search_params.application_id.filteringkey_multiple",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "search_params.equipment_id.filteringOrder",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "search_params.equipment_id.filteringkey",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "search_params.equipment_id.filter_type",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "search_params.equipment_id.filteringkey_multiple",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "ProductService"
        ]
      },
      "post": {
        "operationId": "UpsertProduct",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpsertProductResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpsertProductRequest"
            }
          }
        ],
        "tags": [
          "ProductService"
        ]
      }
    },
    "/api/v1/products/aggregation": {
      "post": {
        "operationId": "UpsertProductAggregation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpsertAggregationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpsertAggregationRequest"
            }
          }
        ],
        "tags": [
          "ProductService"
        ]
      }
    },
    "/api/v1/products/aggregations": {
      "get": {
        "operationId": "ListProductAggregationView",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListProductAggregationViewResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "page_num",
            "description": "Page number",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_size",
            "description": "Items per page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "aggregation_name",
              "product_editor",
              "num_of_applications",
              "num_of_equipments",
              "cost"
            ],
            "default": "aggregation_name"
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "default": "asc"
          },
          {
            "name": "search_params.swidTag.filteringOrder",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "search_params.swidTag.filteringkey",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "search_params.swidTag.filter_type",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "search_params.swidTag.filteringkey_multiple",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "search_params.name.filteringOrder",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "search_params.name.filteringkey",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "search_params.name.filter_type",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "search_params.name.filteringkey_multiple",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "search_params.editor.filteringOrder",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "search_params.editor.filteringkey",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "search_params.editor.filter_type",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "search_params.editor.filteringkey_multiple",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "search_params.product_name.filteringOrder",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "search_params.product_name.filteringkey",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "search_params.product_name.filter_type",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "search_params.product_name.filteringkey_multiple",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "ProductService"
        ]
      }
    },
    "/api/v1/products/aggregations/productview/{ID}/details": {
      "get": {
        "operationId": "ProductAggregationProductViewDetails",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ProductAggregationProductViewDetailsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ProductService"
        ]
      }
    },
    "/api/v1/products/aggregations/productview/{ID}/options": {
      "get": {
        "operationId": "ProductAggregationProductViewOptions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ProductAggregationProductViewOptionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ProductService"
        ]
      }
    },
    "/api/v1/products/aggregations/{ID}/products": {
      "get": {
        "operationId": "ListProductAggregationProductView",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListProductAggregationProductViewResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ProductService"
        ]
      }
    }
  },
  "definitions": {
    "ListProductAggregationViewRequestSortBy": {
      "type": "string",
      "enum": [
        "aggregation_name",
        "product_editor",
        "num_of_applications",
        "num_of_equipments",
        "cost"
      ],
      "default": "aggregation_name"
    },
    "UpsertProductRequestapplication": {
      "type": "object",
      "properties": {
        "operation": {
          "type": "string"
        },
        "application_id": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "UpsertProductRequestequipment": {
      "type": "object",
      "properties": {
        "operation": {
          "type": "string"
        },
        "equipmentusers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/equipmentequipmentuser"
          }
        }
      }
    },
    "equipmentequipmentuser": {
      "type": "object",
      "properties": {
        "equipment_id": {
          "type": "string"
        },
        "num_user": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        },
        "value": {
          "type": "string",
          "format": "byte",
          "description": "Must be a valid serialized protocol buffer of the above specified type."
        }
      },
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := \u0026pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1ListEditorProductsResponse": {
      "type": "object",
      "properties": {
        "products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Product"
          }
        }
      }
    },
    "v1ListEditorsResponse": {
      "type": "object",
      "properties": {
        "editors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1ListProductAggregationProductViewResponse": {
      "type": "object",
      "properties": {
        "products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Product"
          }
        }
      }
    },
    "v1ListProductAggregationViewResponse": {
      "type": "object",
      "properties": {
        "totalRecords": {
          "type": "integer",
          "format": "int32"
        },
        "aggregations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ProductAggregation"
          }
        }
      }
    },
    "v1ListProductsResponse": {
      "type": "object",
      "properties": {
        "totalRecords": {
          "type": "integer",
          "format": "int32"
        },
        "products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Product"
          }
        }
      }
    },
    "v1OptionInfo": {
      "type": "object",
      "properties": {
        "swidTag": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "edition": {
          "type": "string"
        },
        "editor": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "v1Product": {
      "type": "object",
      "properties": {
        "swidTag": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "edition": {
          "type": "string"
        },
        "editor": {
          "type": "string"
        },
        "totalCost": {
          "type": "number",
          "format": "double"
        },
        "numOfApplications": {
          "type": "integer",
          "format": "int32"
        },
        "numofEquipments": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1ProductAggregation": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "editor": {
          "type": "string"
        },
        "num_applications": {
          "type": "integer",
          "format": "int32"
        },
        "num_equipments": {
          "type": "integer",
          "format": "int32"
        },
        "total_cost": {
          "type": "integer",
          "format": "int32"
        },
        "swidtags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1ProductAggregationProductViewDetailsResponse": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "editor": {
          "type": "string"
        },
        "product_name": {
          "type": "string"
        },
        "num_applications": {
          "type": "integer",
          "format": "int32"
        },
        "num_equipments": {
          "type": "integer",
          "format": "int32"
        },
        "products": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "editions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1ProductAggregationProductViewOptionsResponse": {
      "type": "object",
      "properties": {
        "numOfOptions": {
          "type": "integer",
          "format": "int32"
        },
        "optioninfo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1OptionInfo"
          }
        }
      }
    },
    "v1ProductAggregationProductViewSearchParams": {
      "type": "object",
      "properties": {
        "swidTag": {
          "$ref": "#/definitions/v1StringFilter"
        },
        "name": {
          "$ref": "#/definitions/v1StringFilter"
        },
        "editor": {
          "$ref": "#/definitions/v1StringFilter"
        },
        "product_name": {
          "$ref": "#/definitions/v1StringFilter"
        }
      }
    },
    "v1ProductOptionsResponse": {
      "type": "object",
      "properties": {
        "numOfOptions": {
          "type": "integer",
          "format": "int32"
        },
        "optioninfo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1OptionInfo"
          }
        }
      }
    },
    "v1ProductResponse": {
      "type": "object",
      "properties": {
        "swidTag": {
          "type": "string"
        },
        "editor": {
          "type": "string"
        },
        "edition": {
          "type": "string"
        },
        "release": {
          "type": "string"
        }
      }
    },
    "v1ProductSearchParams": {
      "type": "object",
      "properties": {
        "swidTag": {
          "$ref": "#/definitions/v1StringFilter"
        },
        "name": {
          "$ref": "#/definitions/v1StringFilter"
        },
        "editor": {
          "$ref": "#/definitions/v1StringFilter"
        },
        "application_id": {
          "$ref": "#/definitions/v1StringFilter"
        },
        "equipment_id": {
          "$ref": "#/definitions/v1StringFilter"
        }
      }
    },
    "v1SortOrder": {
      "type": "string",
      "enum": [
        "asc",
        "desc"
      ],
      "default": "asc"
    },
    "v1StringFilter": {
      "type": "object",
      "properties": {
        "filteringOrder": {
          "type": "integer",
          "format": "int32"
        },
        "filteringkey": {
          "type": "string"
        },
        "filter_type": {
          "type": "boolean",
          "format": "boolean"
        },
        "filteringkey_multiple": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1UpsertAggregationRequest": {
      "type": "object",
      "properties": {
        "aggregationId": {
          "type": "integer",
          "format": "int32"
        },
        "aggregationName": {
          "type": "string"
        },
        "actionType": {
          "type": "string"
        },
        "swidtags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1UpsertAggregationResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "v1UpsertProductRequest": {
      "type": "object",
      "properties": {
        "swidTag": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "edition": {
          "type": "string"
        },
        "editor": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "optionOf": {
          "type": "string"
        },
        "scope": {
          "type": "string"
        },
        "applications": {
          "$ref": "#/definitions/UpsertProductRequestapplication"
        },
        "equipments": {
          "$ref": "#/definitions/UpsertProductRequestequipment"
        }
      }
    },
    "v1UpsertProductResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    }
  }
}
