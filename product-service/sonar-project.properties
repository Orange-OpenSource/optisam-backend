sonar.projectKey=optisam-product-service
sonar.qualitygate.wait=true
sonar.sourceEncoding=UTF-8
sonar.analysis.mode=publish
sonar.sources=.
sonar.sources.inclusions=**/**.go
sonar.tests=.
sonar.test.inclusions=**service/**_test.go
sonar.go.exclusions=**/vendor/**,**/test/**,**docs/**,**api/**,**/**.sql,**postgres/schema/**,**postgres/scripts/**,**perf/**,**kafka/v1/**
sonar.exclusions=**/**.sql,**postgres/schema/**,**postgres/scripts/**,**perf/**,**/pkg/worker/templates/*.html,**/pkg/repository/v1/dbmock/mock.go,**kafka/v1/**
sonar.coverage.exclusions=karate-config.js,**/poller/**,**/errors/**,**/mock/**,**/cron/**,**/oauth2/**,**/worker/**,**/common/**,**/api/**,**/cmd/**,**/config/**,**/protocol/**,**/repository/**,**/vendor/**,**/**.sql,**postgres/schema/**,**postgres/scripts/**,**perf/**,**/kafka/v1**
sonar.language=go
sonar.go.coverage.reportPaths=build/tests/cover.out
sonar.go.tests.reportPaths=build/tests/test-results.json
#sonar.go.golangci-lint.reportPaths=lint-results.xml
#sonar.dependencyCheck.html
ReportPath=sonar.log.level=INFO
